{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Hi!","text":"<p>Welcome to lt's notebook</p> <p>@to be built</p>"},{"location":"cg/","title":"\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66","text":"<p>\u6d59\u6c5f\u5927\u5b66 2024 \u79cb\u51ac\u5b66\u671f\u300a\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u300b\u8bfe\u7a0b\u7b14\u8bb0</p> <ul> <li>\u6559\u5e08\uff1a\u5434\u9e3f\u667a</li> </ul>"},{"location":"cg/2D%20Graphics/","title":"2D Graphics","text":""},{"location":"cg/2D%20Graphics/#_1","title":"\u5f15\u5165","text":"<p>convert 2D primitives into a raster image + for output on a monitor/printer + rasterization or scan conversion</p> <p>CRT:\u9634\u6781\u5c04\u7ebf\u7ba1 </p> <p></p> <p>\u5149\u6805\u662f\u4e3a\u4e86\u51cf\u5c11\u76f8\u90bb\u7535\u5b50\u4e4b\u95f4\u7684\u5e72\u6270</p> <p>LCD:</p> <p> </p> <p>efficiency is most important to the performance of a display system</p> <p>\u9ad8\u6027\u80fd\u7684\u7b97\u6cd5\u4e00\u822c\u90fd\u56fa\u5316\u5728\u786c\u4ef6\u4e2d,Modern PCs (video cards)</p>"},{"location":"cg/2D%20Graphics/#line-segments","title":"Line Segments","text":"<p>\u5750\u6807\u7cfb\uff1a\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u5b9a\u4e49\u5728\u6574\u6570\u70b9\u4e0a</p>"},{"location":"cg/2D%20Graphics/#scan-converting-a-line-segment","title":"Scan converting a line segment","text":"<p>\u7ebf\u662f\u5efa\u6a21\u4e16\u754c\u5f88\u6709\u529b\u5ea6\u5143\u7d20\u3002\u7ebf\u6bb5\u662f\u7531\u4e24\u4e2a\u7aef\u70b9\u5b9a\u4e49\u7684\uff0c\u7aef\u70b9\u7684 pixels \u548c color\u3002</p> <p> </p> <p>Requirement: + the selected pixels should lie as close to the ideal line as possible + the sequence of pixels should be as straight as possible + all lines should appear to be of constant brightness independent of their length and orientation + should start and end accurately + should be drawn as rapidly as possible + should be possible to draw lines with different width and line styles</p> <p>How to draw a line:</p> <p></p> <ul> <li> <p>Equation of a line: \\(y = mx +c\\) , for line starting at \\((x_0, y_0)\\) and ending at \\((x_1, y_1)\\), we have \\(m = \\frac{y_1 - y_0}{x_1 - x_0} = \\frac{\\Delta y}{\\Delta x}\\)</p> </li> <li> <p>Digital Differential Analyzer (DDA) Algorithm:</p> </li> </ul> <p></p> <p>\u5982\u4f55\u8981\u83b7\u5f97\u53ea\u7528\u6574\u6570\u8fd0\u7b97\u7684\u7b97\u6cd5\uff0c\u4ece\u800c\u5b8c\u5168\u907f\u514d\u6d6e\u70b9\u6570\uff1f</p> <ul> <li>Bresenham's Line Drawing Algorithm</li> </ul> <p></p> <p>Some equations:</p> \\[ \\begin{aligned} &amp; y = m(x_i + 1) + b \\qquad &amp; dx= x_2-x_1  \\\\ &amp; d_1 = y - y_i  \\qquad &amp; dy = y_2-y_1 \\\\ &amp; d_2 = y_i + 1 - y  \\qquad &amp; m=dy/dx \\end{aligned} \\] <p>if \\(d_1 - d_2 &gt; 0\\),then \\(y_{i+1} = y_i + 1\\), otherwise \\(y_{i+1} = y_i\\) \\(d_1-d_2=2y-2y_i-1=2dy/dx*x_i+2dy/dx+2b-2y_i-1\\) both \\(*dx\\), donate \\((d_1-d_2)dx\\) as \\(p_i\\), we have  \\(p_i=2x_{i+1}dy - 2y_{i+1}dx+2dy+(2b-1)dx\\) \\(p_{i+1}=p_i+2dy-2(y_{i+1}-y_i)dx\\)</p> <p></p>"},{"location":"cg/2D%20Graphics/#3d-lines","title":"3D lines","text":""},{"location":"cg/2D%20Graphics/#circles","title":"Circles","text":"<p>A circle with center \\((x_c, y_c)\\) and radius \\(r\\) is defined by the equation \\((x - x_c)^2 + (y - y_c)^2 = r^2\\)</p> <p>\u7528\u7c7b\u4f3c\u7684\u76f4\u89d2\u5750\u6807\u8ba1\u7b97\u4f9d\u7136\u9700\u8981\u6839\u636e45\u5ea6\u8fdb\u884c\u5212\u5206\uff0c\u8fd9\u91cc\u8003\u8651\u7528\u6781\u5750\u6807convert</p> <p></p> <p>\u95ee\u9898\u5728\u4e8e\u8fd9\u91cc\u4f7f\u7528\u589e\u91cf\u7684\u5f62\u5f0f\u4f1a\u5bfc\u81f4\u8bef\u5dee\u7684\u7d2f\u79ef</p>"},{"location":"cg/2D%20Graphics/#polygons","title":"Polygons","text":""},{"location":"cg/2D%20Graphics/#filling-polygons","title":"Filling Polygons \u586b\u5145\u591a\u8fb9\u5f62","text":"<ul> <li>even-odd test / winding number test</li> </ul> <p>scan-line algorithm + Use intersections between region boundaries and scan lines to identify pixels that are inside the area + Exploit the coherence   + Spatial coherence: Except at the boundary edges, adjacent pixels are likely to have the same characteristics   + Scan line coherence: Pixels in the adjacent scan lines are likely to have the same characteristics</p> <p></p> <p></p> <p></p> <p>Seed fill algorithm + Assumes that at least one pixel inside the polygon is known + A recursive algorithm + Useful in interactive painting packages</p> <p></p>"},{"location":"cg/2D%20Graphics/#clipping","title":"clipping","text":"<p>Removal of content that is not going to be displayed</p> <p>\u5728convert\u4e4b\u524d\u505a\uff0c\u662f\u4e3a\u4e86efficient</p>"},{"location":"cg/Antialiasing/","title":"Antialiasing","text":""},{"location":"cg/Antialiasing/#visualrealism","title":"VisualRealism","text":"<ul> <li>View(persective)</li> <li>Field of view(proper clipping)</li> <li>Omit hidden parts</li> <li>Surface details like texture</li> <li>Light effects on surfaces like continuous shading,shadows and caustics</li> </ul> <p>Note</p> <ul> <li>glEnable/glDisable(GL_CULL_FACE);</li> <li>glCullFace(mode);</li> <li>glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);</li> <li>glEnable(GL_DEPTH_TEST);</li> </ul> <ul> <li>Visible Surface Determination</li> <li>Goal</li> <li>Given: a set of 3D objects and view specification</li> <li>Determine: those parts of the objects that are visible when viewed along the direction of projection</li> <li>Or, equivalently, elimination of hidden parts(hidden lines and surfaces)</li> <li> <p>Visible parts will be drawn/shown with proper shading</p> </li> <li> <p>Approaches</p> </li> <li>Object space methods<ul> <li>Object precision</li> </ul> </li> <li>Image space methods<ul> <li>Image precision</li> </ul> </li> <li> <p>z-buffer algorithm</p> </li> <li> <p>Object precision</p> </li> <li>for(each object in this world){determine the parts of the object whose view is unobstructed by other parts or any other object;drawthoseparts;}</li> <li>Image Precision Algorithm</li> <li> <p>for(each pixel in the image){\u753b\u51fa\u6700\u8fd1\u7684pixel}</p> </li> <li> <p>Back-face Culling\uff1a\u80cc\u9762\u662f\u4e0d\u53ef\u80fd\u88ab\u770b\u5230\u7684\u3002\u600e\u4e48\u505a\uff1f 1. Find angle between the eye-vector &amp; normal to face 2. If the angle is between 0 and 90 degrees, discard the face</p> </li> </ul> <p>If the scene consists of a single closed convex polygonal surface,then back-face culling is equivalent to hidden surface removal.</p> <ul> <li>Painter's Algorithm: Back to Front</li> <li>Warnock's Area Algorithm: Divide and Conquer</li> </ul> <p></p> <p></p>"},{"location":"cg/Antialiasing/#z-buffer-algorithm","title":"Z-buffer Algorithm","text":"<ul> <li>Apart from a frame buffer F in which color values are stored.</li> <li>it also needs a z-buffer, of the same size as frame buffer,to store depth(z) values.\u5b58\u7684\u662f\u79bb\u5f97\u6700\u8fd1\u7684\u6df1\u5ea6\u503c\uff0cz\u503c\u66f4\u5c0f\u7684\u5c31\u662f\u79bb\u5f97\u66f4\u8fd1\u7684</li> </ul> <pre><code>for(j=0;j&lt;SCREEN_HEIGHT;j++)\n{\nfor(i=0;i&lt;SCREEN_WIDTH;i++)\n{\nWriteToFrameBuffer(i,j,BackgroundColor);\nWriteToZBuffer(i,j,MAX_DEPTH);\n}\n}\nfor(each polygon)\nfor(each pixel in the polygon projection)\n{\nz = polygon.z at (i,j);\nif(z &lt; ReadFromZBuffer(i,j))\n{\nWriteToFrameBuffer(i,j,polygon.color);\nWriteToZBuffer(i,j,z);\n}\n}\n</code></pre> <p>\u5982\u679c\u66f4\u5c0f\u5c31\u66f4\u65b0\uff0c\u56e0\u4e3a\u66f4\u8fd1\u3002\u8d8a\u6df1\u8d8a\u8fd1</p> <p></p> <p>Note</p> <ul> <li>glClearBuffer(red,green,blue,alpha)</li> <li>glClearDepth(depth)</li> <li>glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)</li> <li>glEnable(GL_DEPTH_TEST)</li> <li>glDisable(GL_DEPTH_TEST)</li> <li>glDepthFunc(GL_LESS)</li> </ul> <ul> <li>Binary Space Partitioning Trees:BSP Tree</li> <li>Very efficient for static group of 3D polygons as seen from an arbitary viewpoint</li> <li>Correct order for Painter's Algorithm is determined by a traversal of the binar tree of polygons</li> </ul> <p></p> <p></p>"},{"location":"cg/Antialiasing/#aliasing","title":"Aliasing","text":"<p>\u91c7\u6837\u7387/\u5206\u8fa8\u7387\u4e0d\u591f\uff0c\u770b\u5230\u952f\u9f7f</p> <p>Anti-aliasing: \u964d\u4f4e\u952f\u9f7f</p> <ul> <li>Super-samping:\u4e00\u4e2asampling \u53d6\u4e0d\u6b62\u4e00\u4e2a\u70b9\uff0c\u589e\u52a0\u91c7\u6837\u7387</li> <li>Area sampling:</li> </ul> <p></p>"},{"location":"cg/Geometric%20Transformation/","title":"BasicMath","text":""},{"location":"cg/Geometric%20Transformation/#vector","title":"Vector","text":"<ul> <li>Direction and length</li> <li>Unit vector</li> <li>Multiplying a vector by a scalar</li> <li>Normalizing</li> <li>Addition</li> <li>Dot product</li> <li>Orthonarmal Vector (Basis)</li> <li>Coordinate system</li> <li>\u6807\u51c6\u6b63\u4ea4\u57fa\u6784\u6210</li> <li>Cross product</li> <li>Right-hand rule</li> <li>Area of parallelogram</li> <li>Volume of parallelepiped</li> </ul>"},{"location":"cg/Geometric%20Transformation/#geometric-transformation","title":"Geometric Transformation","text":""},{"location":"cg/Intro/","title":"intro","text":"<p>Pixel = Picture Element Three fundamental Tasks</p> <ul> <li>Modeling</li> <li>Animation(Simulating)</li> <li>Rendering(displaying)</li> </ul>"},{"location":"cg/Intro/#modeling","title":"Modeling","text":"<p>Digital Representation of the world + Digital Images + 3D Geometric Objects (Graphics) + Symbolic Descriptions</p> <p>Three important and complex attributes + Shape + Visual look or appearance + Dynamic behaviors due to interactions with other elements of the world</p>"},{"location":"cg/Intro/#simulating-the-behaviors-of-objects-in-the-world","title":"Simulating the behaviors of objects in the world","text":"<p>Demo</p> <p></p>"},{"location":"cg/Intro/#rendering-the-world","title":"Rendering the world","text":"<p>I/O of computer graphics + input   + Object(shape,material,lighting) + output   + Image:array of pixels</p>"},{"location":"cg/Intro/#topics-covered-in-this-course","title":"Topics Covered in This Course","text":"<ul> <li>Basic</li> <li>Transformations and Synthetic Camera for Viewing the World</li> <li>Modeling techniques and tools</li> <li>Meshes, Surfaces and Solid Objects</li> <li>Rendering techniques</li> <li>Visibility computation</li> <li>Illumination models</li> <li>Realistic rendering algorithms</li> <li>Texture Mapping</li> <li>Advanced modelling and rendering methods</li> <li>complex lighting effects, natural objects and volumetric objects</li> </ul>"},{"location":"cg/OpenGL/","title":"OpenGL","text":"<p>key task: \u5c06\u4e09\u7ef4\u7684\u7269\u4f53\u6295\u5f71\u5230\u4e8c\u7ef4\u7684\u5c4f\u5e55\u4e0a</p>"},{"location":"cg/OpenGL/#opengl-toolchain","title":"OpenGL toolchain","text":"<ul> <li>OpenGL <code>#include &lt;GL/gl.h&gt;</code></li> <li>Platform-independent \u201ccore\u201d library</li> <li>GLU <code>#include &lt;GL/glu.h&gt;</code></li> <li>an auxiliary library that handles a variety of graphics accessory functions</li> <li>GLUT <code>#include &lt;GL/glut.h&gt;</code></li> <li>an auxiliary library that handles window creation, OS system calls (mouse buttons, movement, keyboard, etc.)</li> </ul> <p>Three States in OpenGL + Define Objects in World Space + Set Modeling and Viewing Transformations + Render the Scene</p>"},{"location":"cg/OpenGL/#how-it-work","title":"How it work","text":"<ul> <li>OpenGL is a state machine</li> <li>Give orders to set the current state of any one of its internal variables, or to query its current status</li> <li>The current state won\u2019t change until you explicitly specify a new value</li> <li>if you set the current color to Red, everything you draw will be painted Red until you change the color explicitly</li> <li>Each of the system\u2019s state variables has a default value</li> </ul>"},{"location":"cg/OpenGL/#opengl-primitives","title":"OpenGL Primitives","text":"<ul> <li>GL_POINTS</li> <li>GL_LINES</li> <li>GL_LINE_STRIP</li> <li>GL_LINE_LOOP</li> <li>GL_TRIANGLES</li> <li>GL_QUADS</li> <li>GL_POLYGON</li> <li>GL_TRIANGLE_STRIP</li> <li>GL_TRIANGLE_FAN</li> <li>GL_QUAD_STRIP</li> </ul>"},{"location":"cg/View/","title":"Viewing in 2D &amp; 3D","text":""},{"location":"cg/View/#viewing-in-2d","title":"Viewing in 2D","text":"<ul> <li>The world is infinite but the screen is finite. Depending on the details the user wishes to see,she limits her view by specifying a window in this world.</li> <li>\u901a\u8fc7\u6070\u5f53\u7684\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e16\u754c\u7684\u4efb\u610f\u90e8\u5206\u6620\u5c04\u5230\u5c4f\u5e55\u4e0a\u3002</li> </ul>"},{"location":"cg/View/#window","title":"Window","text":"<ul> <li>The window is a rectangular region in the 2D world specified by</li> <li>a center (xCenter, yCenter)</li> <li>size windowSize</li> <li>Screen referred to as the viewport is a discrete matrix of pixels specified by</li> <li>size screenSize (in pixels)</li> </ul>"},{"location":"cg/View/#windows-to-viewport-transformation","title":"windows-to-viewport transformation","text":"<p>mapping the 2D world seen in the window onto the viewport is 2D viewing transformation.</p> <p></p> <p>\u56e0\u4e3a\u89c6\u56fe\u91ccy\u8f74\u65b9\u5411\u4ece\u4e0a\u5411\u4e0b\uff0c\u6240\u4ee5\u9700\u8981\u7ed9 y \u8f74\u52a0\u4e00\u4e2a\u8d1f\u53f7</p>"},{"location":"cg/View/#aspect-ratio","title":"Aspect Ratio","text":"<ul> <li>In 2D viewing transformation, the aspect ratio is maintained when the scaling is uniform.</li> <li>scaleFactor is the same for both x and y</li> </ul>"},{"location":"cg/View/#opengl-commands","title":"OpenGL Commands","text":"<pre><code>gluOrtho2D(left,right,bottom,top);\n// Create a matrix for projecting 2D coordinates onto the screen\nglViewport(x,y,width,height);\n// Define a rectangle of pixels onto which the final image is mapped.\n// (x,y) is the lower-left corner of the viewport rectangle\n// width and height are the size of viewport rectangle\n</code></pre>"},{"location":"cg/View/#viewing-in-3d","title":"Viewing in 3D","text":"<ul> <li>To display a 3D world on a 2D screen</li> <li>Specification becomes complicated because there are many parameters to control</li> <li>Additional task of reducing dimensions from 3D to 2D(projection)</li> <li>3D viewing is analogous to taking a picture with a camera</li> </ul>"},{"location":"cg/View/#transformationscamera-analogy","title":"Transformations/Camera Analogy","text":"<ul> <li>Modeling transformation</li> <li>Shaping,position and moving the objects in the world scene.</li> <li>Viewing transformation</li> <li>Positioning and orienting the camera in the world scene, selecting the region of interest</li> <li>Projection transformation</li> <li>\u8c03\u6574\u7126\u8ddd</li> <li>viewport transformation</li> <li>Enlarging or reducing the physical photograph</li> </ul>"},{"location":"cg/View/#perspective-projection","title":"Perspective Projection","text":"<p>\u900f\u89c6\u6295\u5f71 + characterized by diminution of size + The farther the object, the smaller the image + Foreshortening depends on distance from viewer + Can't be used for measurements + Vanishing point</p> <p></p>"},{"location":"cg/View/#oblique-projection","title":"Oblique Projection","text":"<p>\u659c\u5e73\u884c + Most general parallel views + Projectors make an arbitrary angle with the projection plane + Angles in planes parallel to the projection plane are preserved</p>"},{"location":"cg/View/#view-specification","title":"View Specification","text":"<ul> <li>View Reference Coordinate System</li> </ul> <p>View Up Vector: the orientation of the view window on the view reference plane</p> <p>Once the view reference coordinate system is defined, the next step is to project the 3D world onto the view reference plane.</p> <ul> <li>Simplest Camera Position</li> </ul> <p></p> <ul> <li>Deriving the Viewing Orientation Matrix</li> </ul> <p></p> <ul> <li>Perspective Projection</li> </ul> <p></p> <ul> <li>Transfomation Matrix for perspective projection</li> </ul> <p></p> <ul> <li>View Window</li> </ul> <p></p>"},{"location":"cg/View/#perspective-viewing","title":"Perspective Viewing","text":"<ol> <li>Apply the view orientation transformation</li> <li>Apply translation, such that the center of the view windows coincide with the origin</li> <li>Apply the perspective projection matrix to project the 3D world onto the view reference plane</li> </ol>"},{"location":"cg/View/#complete-view-specification","title":"Complete View Specification","text":"<ul> <li>Specification in world cooridinates</li> </ul> <p>position of viewing(vrp), direction of viewing(-n), up direction for viewing(upVector)</p> <ul> <li>Specification in view coordinates</li> <li>view window: center(cx,cy), width and height</li> <li>prp:distance from the view plane</li> <li>from clipping plane:distance from view plane</li> <li>back clipping plane:distance from view plane</li> </ul> <p></p>"},{"location":"ml/","title":"Index","text":"<p>\u6d59\u6c5f\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662\u8bfe\u7a0b\u300a\u673a\u5668\u5b66\u4e60\u300b</p>"},{"location":"ml/probability%20graph/","title":"\u6982\u7387\u56fe\u6a21\u578b","text":""},{"location":"ml/probability%20graph/#_2","title":"\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b","text":"<p>\u6982\u7387\u6a21\u578b\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u63cf\u8ff0\u6846\u67b6\uff0c\u5c06\u5b66\u4e60\u4efb\u52a1\u5f52\u7ed3\u4e8e\u8ba1\u7b97\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03</p> <p>\u63a8\u65ad:\u5728\u6982\u7387\u6a21\u578b\u4e2d\uff0c\u5229\u7528\u5df2\u77e5\u53d8\u91cf\u63a8\u6d4b\u672a\u77e5\u53d8\u91cf\u7684\u5206\u5e03</p> <p>\u5b9a\u4e49\uff1a\u5173\u5fc3\u7684\u53d8\u91cf\u96c6\u5408 Y\uff1b\u53ef\u89c2\u6d4b\u53d8\u91cf\u96c6\u5408 O\uff1b\u5176\u4ed6\u53d8\u91cf\u7684\u96c6\u5408 R</p> <ul> <li>\u751f\u6210\u5f0f\u6a21\u578b\u8003\u8651\u8054\u5408\u5206\u5e03 \\(P(Y, R, O)\\)</li> <li>\u5224\u522b\u5f0f\u6a21\u578b\u8003\u8651\u6761\u4ef6\u5206\u5e03 \\(P(Y, R| O)\\)</li> </ul> <p>\u7ed9\u5b9a\u4e00\u7ec4\u89c2\u6d4b\u53d8\u91cf\u503c\uff0c\u63a8\u65ad\u5c31\u662f\u8981\u7531 \\(P(Y, R| O)\\) \u6216\\(P(Y, R, O)\\) \u63a8\u65ad\u51fa \\(P(Y|O)\\) \u7684\u5206\u5e03</p> <p>\u6982\u7387\u56fe\u6a21\u578b\uff1a\u4e00\u7c7b\u7528\u56fe\u6765\u8868\u8fbe\u53d8\u91cf\u76f8\u5173\u5173\u7cfb\u7684\u6982\u7387\u6a21\u578b\u3002\u5b83\u4ee5\u56fe\u4e3a\u8868\u793a\u5de5\u5177\uff0c \u6700\u5e38\u89c1\u7684\u662f\u7528\u4e00\u4e2a\u7ed3\u70b9\u8868\u793a\u4e00\u4e2a\u6216\u4e00\u7ec4\u968f\u673a\u53d8\u91cf\uff0c\u7ed3\u70b9\u4e4b\u95f4\u7684\u8fb9\u8868\u793a\u53d8\u91cf\u95f4\u7684\u6982\u7387\u76f8\u5173\u5173\u7cfb\uff0c\u5373\u201c \u53d8\u91cf\u5173\u7cfb\u56fe \u201d</p> <ul> <li>\u4f7f\u7528\u6709\u5411\u65e0\u73af\u56fe\u8868\u793a\u53d8\u91cf\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u79f0\u4e3a\u8d1d\u53f6\u65af\u7f51\u7edc\u6216\u6709\u5411\u5708\u6a21\u578b</li> <li>\u4f7f\u7528\u65e0\u5411\u56fe\u8868\u793a\u53d8\u91cf\u95f4\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u79f0\u4e3a\u9a6c\u5c14\u53ef\u592b\u7f51\u6216\u65e0\u5411\u56fe\u6a21\u578b</li> </ul> <p>\u9690\u9a6c\u5c14\u53ef\u592b\u6a21\u578b\u6709\u4e24\u79cd\u53d8\u91cf + \u72b6\u6001\u53d8\u91cf\uff1a\u5047\u5b9a\u72b6\u6001\u53d8\u91cf\u662f\u9690\u85cf\u7684\u4e0d\u53ef\u89c2\u6d4b\u7684\uff0c\u6240\u4ee5\u4e5f\u79f0\u4e3a\u9690\u53d8\u91cf(latent variable) + \u89c2\u6d4b\u53d8\u91cf\uff1a\u53ef\u4ee5\u662f\u8fde\u7eed\u578b\u4e5f\u53ef\u4ee5\u662f\u79bb\u6563\u578b(visible variable)</p> <p>\u9a6c\u5c14\u53ef\u592b\u94fe\uff1a\u7cfb\u7edf\u4e0b\u4e00\u65f6\u523b\u7684\u72b6\u6001\u4ec5\u7531\u5f53\u524d\u72b6\u6001\u51b3\u5b9a\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4ee5\u5f80\u7684\u4efb\u4f55\u72b6\u6001\u3002\u57fa\u4e8e\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u6240\u6709\u53d8\u91cf\u7684\u8054\u5408\u6982\u7387\u5206\u5e03\u4e3a</p> \\[ P(x_1, x_2, \\cdots, x_n,y_n) = P(x_1|y_1)\\prod_{i=2}^n P(x_i|y_i)P(y_i|y_{i-1}) \\] <p>\u662f\u4e00\u79cd\u73b0\u5728\u51b3\u5b9a\u672a\u6765\u7684\u6a21\u578b</p> <p></p> <p></p> <p>\u89c2\u6d4b\u8bad\u7ec3\u4ea7\u751f\uff1a</p> <ol> <li>\u8bbe\u7f6e \\(t=1\\)\uff0c\u5e76\u6839\u636e\u521d\u59cb\u72b6\u6001\u6982\u7387\\(\\pi\\)\u9009\u62e9\u521d\u59cb\u72b6\u6001 \\(y_1\\)</li> <li>\u6839\u636e\u72b6\u6001 \\(y_t\\) \u7684\u6982\u7387\u5206\u5e03\u548c\u8f93\u51fa\u89c2\u6d4b\u6982\u7387 B \u9009\u62e9\u89c2\u6d4b\u53d8\u91cf\u53d6\u503c \\(x_t\\)</li> <li>\u6839\u636e\u72b6\u6001 \\(y_t\\) \u7684\u6982\u7387\u5206\u5e03\u548c\u72b6\u6001\u8f6c\u79fb\u6982\u7387 A \u9009\u62e9\u4e0b\u4e00\u72b6\u6001 \\(y_{t+1}\\)</li> <li>\u82e5 \\(t&lt;T\\)\uff0c\u5219 \\(t=t+1\\)\uff0c\u8f6c\u6b65\u9aa4 2\uff1b\u5426\u5219\u7ed3\u675f</li> </ol> <p></p>"},{"location":"ml/probability%20graph/#_3","title":"\u9a6c\u5c14\u53ef\u592b\u968f\u673a\u573a","text":"<p>markov random field (MRF)</p> <p>\u5178\u578b\u7684\u9a6c\u5c14\u53ef\u592b\u7f51\uff0c\u8fd9\u662f\u4e00\u79cd\u8457\u540d\u7684\u65e0\u5411\u56fe\u6a21\u578b\u3002\u56fe\u4e2d\u6bcf\u4e2a\u7ed3\u70b9 \u8868\u793a\u4e00\u4e2a\u6216\u4e00\u7ec4\u53d8\u91cf\uff0c\u7ed3\u70b9\u4e4b\u95f4\u7684\u8fb9\u8868\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173 \u7cfb\u3002\u9a6c\u5c14\u53ef\u592b\u968f\u673a\u573a\u6709\u4e8c\u7ec4\u52bf\u51fd\u6570\uff0c\u4ea6\u79f0\u201c\u56e0\u5b50\u201d\uff0c\u8fd9\u662f\u5b9a\u4e49\u5728\u53d8 \u91cf\u5b50\u96c6\u4e0a\u7684\u975e\u8d1f\u5b9e\u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9a\u4e49\u6982\u7387\u5206\u5e03\u51fd\u6570\u3002</p> <p></p> <p>\u5bf9\u4e8e\u56fe\u4e2d\u7ed3\u70b9\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u82e5\u5176\u4e2d\u4efb\u610f\u4e24\u7ed3\u70b9\u95f4\u90fd\u6709\u8fb9\u8fde\u63a5\uff0c\u5219 \u79f0\u8be5\u7ed3\u70b9\u5b50\u96c6\u4e3a\u4e00\u4e2a\u201c \u56e2\u201d \u3002 \u82e5\u5728\u4e00\u4e2a\u56e2\u4e2d\u52a0\u5165\u53e6\u5916\u4efb\u4f55\u4e00\u4e2a\u7ed3\u70b9 \u90fd\u4e0d\u518d\u5f62\u6210\u56e2\uff0c\u5219\u79f0\u8be5\u56e2\u4e3a\u201c\u6781\u5927\u56e2\u201d;\u6362\u8a00\u4e4b\uff0c\u6781\u5927\u56e2\u5c31\u662f\u4e0d\u80fd \u88ab\u5176\u4ed6\u56e2\u6240\u5305\u542b\u7684\u56e2\u3002</p> <p>\u5728\u9a6c\u5c14\u53ef\u592b\u968f\u673a\u573a\u4e2d\uff0c\u591a\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u8054\u5408\u6982\u7387\u5206\u5e03\u80fd\u57fa\u4e8e\u56e2\u5206 \u89e3\u4e3a\u591a\u4e2a\u56e0\u5b50\u7684\u4e58\u79ef\uff0c\u6bcf\u4e2a\u56e0\u5b50\u4ec5\u4e0e\u4e00\u4e2a\u56e2\u76f8\u5173\u3002\u8054\u5408\u6982\u7387P(X) \u5b9a\u4e49\u4e3a</p> \\[ P(x) = \\frac{1}{Z} \\prod_{Q\\in C} \\phi_Q(x_Q) \\] <p>\u57fa\u4e8e\u6781\u5927\u56e2\u5b9a\u4e49</p> <p></p> <p>\u5206\u79bb\u96c6:\u82e5\u4ece\u7ed3\u70b9\u96c6 A \u4e2d\u7684\u7ed3\u70b9\u5230 B \u4e2d\u7684\u7ed3\u70b9\u90fd\u5fc5\u987b\u7ecf\u8fc7\u7ed3\u70b9\u96c6 C \u4e2d\u7684\u7ed3\u70b9\uff0c\u5219\u79f0\u7ed3\u70b9\u96c6 A \u548c B \u88ab\u7ed3\u70b9\u96c6 C \u5206\u79bb</p> <p>\u5168\u5c40\u9a6c\u5c14\u53ef\u592b\u6027:\u7ed9\u5b9a\u4e24\u4e2a\u53d8\u91cf\u5b50\u96c6\u7684\u5206\u79bb\u96c6\uff0c\u5219\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5b50 \u96c6\u6761\u4ef6\u72ec\u7acb\u3002</p> <p></p> <p>\u57fa\u4e8e\u6761\u4ef6\u6982\u7387\u7684\u5b9a\u4e49\u53ef\u5f97\uff1a</p> \\[ \\begin{aligned} P(x_A, x_B \\mid x_C) &amp;= \\frac{P(x_A, x_B, x_C)}{P(x_C)} = \\frac{P(x_A, x_B, x_C)}{\\sum_{x'_A} \\sum_{x'_B} P(x'_A, x'_B, x_C)} \\\\ &amp;= \\frac{\\frac{1}{Z} \\psi_{AC}(x_A, x_C) \\psi_{BC}(x_B, x_C)}{\\sum_{x'_A} \\sum_{x'_B} \\frac{1}{Z} \\psi_{AC}(x'_A, x_C) \\psi_{BC}(x'_B, x_C)} \\\\ &amp;= \\frac{\\psi_{AC}(x_A, x_C)}{\\sum_{x'_A} \\psi_{AC}(x'_A, x_C)} \\cdot \\frac{\\psi_{BC}(x_B, x_C)}{\\sum_{x'_B} \\psi_{BC}(x'_B, x_C)}. \\end{aligned} \\] \\[ \\begin{aligned} P(x_A \\mid x_C) &amp;= \\frac{P(x_A, x_C)}{P(x_C)} = \\frac{\\sum_{x'_B} P(x_A, x'_B, x_C)}{\\sum_{x'_A} \\sum_{x'_B} P(x'_A, x'_B, x_C)} \\\\ &amp;= \\frac{\\sum_{x_B} \\frac{1}{Z} \\psi_{AC}(x_A, x_C) \\psi_{BC}(x_B, x_C)}{\\sum_{x'_A} \\sum_{x'_B} \\frac{1}{Z} \\psi_{AC}(x'_A, x_C) \\psi_{BC}(x'_B, x_C)} \\\\ &amp;= \\frac{\\psi_{AC}(x_A, x_C)}{\\sum_{x'_A} \\psi_{AC}(x'_A, x_C)}. \\end{aligned} \\] <p>\u56e0\u6b64\u6211\u4eec\u6709 \\(P(x_A,x_B|x_C)=P(x_A|x_C)P(x_B|x_C)\\)</p> <p>\u63a8\u8bba\uff1a + \u5c40\u90e8\u9a6c\u5c14\u53ef\u592b\u6027:\u7ed9\u5b9a\u67d0\u53d8\u91cf\u7684\u90bb\u63a5\u53d8\u91cf\uff0c\u5219\u8be5\u53d8\u91cf\u6761\u4ef6\u72ec\u7acb\u4e8e\u5176\u4ed6\u53d8\u91cf + \u6210\u7acb\u5bf9\u9a6c\u5c14\u53ef\u592b\u6027:\u7ed9\u5b9a\u6240\u6709\u5176\u4ed6\u53d8\u91cf\uff0c\u4e24\u4e2a\u975e\u90bb\u63a5\u53d8\u91cf\u6761\u4ef6\u72ec\u7acb</p> <p></p>"},{"location":"ml/probability%20graph/#_4","title":"\u6761\u4ef6\u968f\u673a\u573a","text":"<p>\u6761\u4ef6\u968f\u673a\u573a\u8bd5\u56fe\u5bf9\u591a\u4e2a\u53d8\u91cf\u5728\u7ed9\u5b9a\u89c2\u6d4b\u503c\u540e\u7684\u6761\u4ef6\u6982\u7387\u8fdb\u884c\u5efa\u6a21</p> <p>\u82e5\u56fe G \u7684\u6bcf\u4e2a\u53d8\u91cf \\(y_v\\) \u90fd\u6ee1\u8db3\u9a6c\u5c14\u53ef\u592b\u6027\uff0c\u5373</p> \\[ P(y_v|x,y_{V-\\{v\\}}) = P(y_v|x,y_{N(v)}) \\] <p>\u5219 \\((y,x)\\) \u6784\u6210\u4e00\u4e2a\u6761\u4ef6\u968f\u673a\u573a</p> <p></p> <p></p>"},{"location":"ml/probability%20graph/#_5","title":"\u5b66\u4e60\u4e0e\u63a8\u65ad","text":"<p>\u8fb9\u9645\u5316\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u5c06\u67d0\u4e9b\u53d8\u91cf\u8fb9\u9645\u5316\u6389\uff0c\u5f97\u5230\u53e6\u4e00\u7ec4\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\uff0c\u6c42\u89e3\u67d0\u4e2a\u53d8\u91cf\u7684\u8fb9\u7f18\u6982\u7387\uff0c\u5c31\u662f\u5bf9\u5176\u4ed6\u65e0\u5173\u6982\u7387\u4f5c\u79ef\u5206\u3002</p> <p>\u63a8\u65ad\u95ee\u9898\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u8fb9\u9645\u6982\u7387\u6216\u6761\u4ef6\u6982\u7387</p>"},{"location":"ml/probability%20graph/#_6","title":"\u53d8\u91cf\u6d88\u53bb","text":"<p>\u53d8\u91cf\u6d88\u53bb\u5c31\u662f\u5bf9\u65e0\u5173\u53d8\u91cf\u90fd\u505a\u6c42\u548c\uff0c\u5c06\u4e0e\u4e4b\u76f8\u5173\u7684\u9879\u76f8\u52a0\u5c31\u5f97\u5230\u4e86\u4e0e\u4e4b\u65e0\u5173\u7684\u9879\u3002</p> <p></p>"},{"location":"ml/probability%20graph/#_7","title":"\u4fe1\u5ff5\u4f20\u64ad","text":"<p>\u4fe1\u5ff5\u4f20\u64ad\u7b97\u6cd5\u5c06\u53d8\u91cf\u6d88\u53bb\u6cd5\u4e2d\u7684\u6c42\u548c\u64cd\u4f5c\u770b\u4f5c\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fc7\u7a0b\uff0c \u8f83\u597d\u5730\u89e3\u51b3\u4e86\u6c42\u89e3\u591a\u4e2a\u8fb9\u9645\u5206\u5e03\u65f6\u7684\u91cd\u590d\u8ba1\u7b97\u95ee\u9898\u3002</p> <p>\u5728\u4fe1\u5ff5\u4f20\u64ad\u7b97\u6cd5\u4e2d\uff0c\u4e00\u4e2a\u7ed3\u70b9\u4ec5\u5728\u63a5\u6536\u5230\u6765\u81ea\u5176\u4ed6\u6240\u6709\u7ed3\u70b9\u7684\u6d88 \u606f\u540e\u624d\u80fd\u5411\u53e6 \u4e00\u4e2a\u7ed3\u70b9\u53d1\u9001\u6d88\u606f\uff0c\u4e14\u7ed3\u70b9\u7684\u8fb9\u9645\u5206\u5e03\u6b63\u6bd4\u4e8e\u5b83\u6240 \u63a5\u6536\u7684\u6d88\u606f\u7684\u4e58\u79ef\uff0c\u5373</p> \\[ P(x_i) \\propto \\prod_{j\\in N(i)} \\mu_{j\\to i}(x_i) \\] <p>\u82e5\u56fe\u7ed3\u6784\u4e2d\u6ca1\u6709\u73af\uff0c\u5219\u4fe1\u5ff5\u4f20\u64ad\u7b97\u6cd5\u7ecf\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u5373\u53ef\u5b8c\u6210\u6240\u6709\u6d88\u606f\u4f20\u9012\uff0c\u8fdb\u800c\u80fd\u8ba1\u7b97\u6240\u6709\u53d8\u91cf\u4e0a\u7684\u8fb9\u9645\u5206\u5e03\u3002 + \u6307\u5b9a\u4e00\u4e2a\u6839\u7ed3\u70b9\uff0c\u4ece\u6240\u6709\u53f6\u7ed3\u70b9\u5f00\u59cb\u5411\u6839\u7ed3\u70b9\u4f20\u9012\u6d88\u606f\uff0c\u76f4\u5230\u6839\u7ed3\u70b9\u6536\u5230\u6240\u6709\u90bb\u63a5\u7ed3\u70b9\u7684\u6d88\u606f + \u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\u5411\u53f6\u7ed3\u70b9\u4f20\u9012\u6d88\u606f\uff0c\u76f4\u5230\u6240\u6709\u53f6\u7ed3\u70b9\u5747\u6536\u5230\u6d88\u606f</p> <p></p>"},{"location":"ml/probability%20graph/#_8","title":"\u8fd1\u4f3c\u63a8\u65ad","text":"<ul> <li>\u91c7\u6837\uff08sampling\uff09\u4f7f\u7528\u968f\u673a\u5316\u65b9\u6cd5\u5b8c\u6210\u8fd1\u4f3c\u63a8\u65ad\uff0c\u5982\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57\u6cd5</li> <li>\u4f7f\u7528\u786e\u5b9a\u6027\u8fd1\u4f3c\u5b8c\u6210\u8fd1\u4f3c\u63a8\u65ad\uff0c\u53d8\u5206\u63a8\u65ad</li> </ul>"},{"location":"ml/probability%20graph/#_9","title":"\u8499\u7279\u5361\u7f57\u6cd5\u91c7\u6837","text":"<p>\u5047\u5b9a\u76ee\u6807\u662f\u8ba1\u7b97\u51fd\u6570 \\(f(x)\\) \u7684\u671f\u671b\u503c\uff0c\u5373</p> \\[ E_p(f) = \\int f(x) p(x) dx \\] <p>\u8ba1\u7b97 \\(f(x)\\) \u5728\u8fd9\u4e9b\u6837\u672c\u4e0a\u7684\u5747\u503c</p> \\[ \\hat{f} = \\frac{1}{N}\\sum_{i=1}^N f(x^{(i)}) \\] <p>\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u5e73\u7a33\u5206\u5e03\uff1a</p> \\[ p(x^t)T(x^{t-1}|x^t) = p(x^{t-1})T(x^t|x^{t-1}) \\] <p>Metropolis-Hastings \u7b97\u6cd5 (MH) \u7b97\u6cd5</p> <p></p> <p></p>"},{"location":"ml/probability%20graph/#_10","title":"\u53d8\u5206\u63a8\u65ad","text":"<ul> <li>\u76d8\u5f0f\u8bb0\u6cd5</li> </ul> <p>\u6240\u6709\u80fd\u89c2\u5bdf\u5230\u7684\u53d8\u91cfx\u7684\u8054\u5408\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u662f</p> \\[ p(x|\\Theta) = \\prod_{i=1}^n \\sum_z p(x_i, z|\\Theta) \\] <p>\u6240\u5bf9\u5e94\u7684\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\u4e3a</p> \\[ \\ln p(x|\\Theta) = \\sum_{i=1}^n \\ln \\sum_z p(x_i, z|\\Theta) \\] <p>\u6982\u7387\u6a21\u578b\u7684\u53c2\u6570\u4f30\u8ba1\u901a\u5e38\u4ee5\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\u4e3a\u624b\u6bb5\uff1a</p> \\[ \\begin{aligned} \\Theta^{t+1} &amp;= \\argmax_{\\Theta} Q(\\Theta;\\Theta^t)\\\\ &amp;= \\argmax_{\\Theta} \\sum_{z} p(z|x,\\Theta^t) \\ln p(x,z|\\Theta) \\end{aligned} \\] <p>\u5bf9\u6570\u4f3c\u7136\u53ef\u4ee5\u5206\u89e3\u6210 ELBO \u548c KL \u6563\u5ea6:</p> \\[ \\begin{aligned} \\ln p(x|\\Theta) = ELBO + KL(q||p) \\\\ ELBO = \\int q(z) \\ln \\frac{p(x,z)}{q(z)} dz \\\\ KL(q||p) = -\\int q(z) \\ln \\frac{p(z|x)}{q(z)} dz \\end{aligned} \\] <p></p> <p></p>"},{"location":"ml/probability%20graph/#_11","title":"\u8bdd\u9898\u6a21\u578b","text":"<p>\u8bdd\u9898\u6a21\u578b\u662f\u4e00\u65cf\u751f\u6210\u5f0f\u6709\u5411\u56fe\u6a21\u578b\uff0c\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u79bb\u6563\u578b\u7684\u6570\u636e\uff08\u5982\u6587\u672c\u96c6\u5408\uff09\uff0c\u5728\u4fe1\u606f\u68c0\u7d22\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u9886\u57df\u6709\u5e7f\u6cdb\u5e94\u7528\u3002\u4ee3\u8868\u6709\u6f5c\u5728\u72c4\u5229\u514b\u96f7\u5206\u914d\u6a21\u578b\uff08LDA\uff09\u3002</p> <p>\"\u8bcd\"\u662f\u5f85\u5904\u7406\u6570\u636e\u7684\u57fa\u672c\u79bb\u6563\u5355\u5143\uff0c\u4f8b\u5982\u5728\u6587\u672c\u5904\u7406\u4efb\u52a1\u4e2d\uff0c\u4e00\u4e2a\u8bcd\u5c31\u662f\u4e00\u4e2a\u82f1\u6587\u5355\u8bcd\u6216\u6709\u72ec\u7acb\u610f\u4e49\u7684\u4e2d\u6587\u8bcd \u201c\u6587\u6863\u201d\u662f\u5f85\u5904\u7406\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u5b83\u7531\u4e00\u7ec4\u8bcd\u7ec4\u6210\uff0c\u8fd9\u4e9b\u8bcd\u5728\u6587\u6863\u4e2d\u662f\u4e0d\u8ba1\u987a\u5e8f\u7684\uff0c\u4f8b\u5982\u4e00\u7bc7\u8bba\u6587\u3001\u4e00\u4e2a\u7f51\u9875\u90fd\u53ef\u770b\u4f5c\u4e00\u4e2a\u6587\u6863:\u8fd9\u6837\u7684\u8868\u793a\u65b9\u5f0f\u79f0\u4e3a\"\u8bcd\u888b\"  \u6570\u636e\u5bf9\u8c61\u53ea\u8981\u80fd\u7528\u8bcd\u888b\u63cf\u8ff0\uff0c\u5c31\u53ef\u4f7f\u7528\u8bdd\u9898\u6a21\u578b\u201c\u8bdd\u9898\u201d\u8868\u793a\u4e00\u4e2a\u6982\u5ff5\uff0c\u5177\u4f53\u8868\u793a\u4e3a\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u8bcd\uff0c\u4ee5\u53ca\u5b83\u4eec\u5728\u8be5\u6982\u5ff5\u4e0b\u51fa\u73b0\u7684\u6982\u7387\u3002</p> <p></p> <p></p>"},{"location":"os/","title":"\u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5","text":""},{"location":"os/Deadlock/","title":"Deadlock","text":""},{"location":"os/Deadlock/#deadlock-problem","title":"Deadlock problem","text":"<p>Deadlock problem: a set of block processes each holding a resource and waiting to acquire a resource held by another process in the set.</p> <p>Note: most OSes do not prevent or deal with deadlocks.</p> <p>Can be illustrated by a resource allocation graph.</p>"},{"location":"os/Deadlock/#system-model-of-deadlock","title":"System Model of deadlock","text":"<ul> <li>Resources: each represents a different resource type e.g. CPU cycles, memory space, I/O devices</li> <li>each resource type \\(R_i\\) has \\(W_i\\) instances</li> <li>Each process utilizes a resource in the following pattern</li> <li>request</li> <li>use</li> <li>release</li> </ul>"},{"location":"os/Deadlock/#four-conditions-of-deadlock","title":"Four Conditions of Deadlock","text":"<ol> <li>Mutual exclusion: a resource can only be used by one process at a time.</li> <li>Hold and wait: a process holding at least one resource is waiting to acquire additional resources held by other processes.</li> <li>No preemption: a resource can be released only voluntarily by the process holding it, after it has completed its task.</li> <li>Circular wait: there exists a set of waiting processes </li> </ol> <p>Example</p> <p></p>"},{"location":"os/Deadlock/#how-to-handle-deadlock","title":"How to handle deadlock","text":"<p>Ensure the system will never enter a deadlock state.</p> <ul> <li>Prevention</li> <li>Avoidance</li> </ul> <p>Allow the system to enter a deadlock state and then recover.</p> <ul> <li>Detection</li> </ul> <p>Ignore the problem and pretend that deadlocks never occur in the system; used by most OSes.</p>"},{"location":"os/Deadlock/#deadlock-prevention","title":"Deadlock Prevention","text":"<ul> <li>prevent mutual exclusion</li> <li>not required for sharable resources</li> <li>must hold for non-sharable resources</li> <li>hold and wait</li> <li>whenever a process requests a resource, it doesn\u2019t hold any other resources<ul> <li>require process to request all its resources before it begins execution</li> <li>allow process to request resources only when the process has none   \u7533\u8bf7\u8d44\u6e90\u65f6\u4e0d\u80fd\u6709\u5176\u4ed6\u8d44\u6e90\uff0c\u8981\u4e00\u6b21\u6027\u7533\u8bf7\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90\u3002</li> </ul> </li> <li>low resource utilization; starvation possible     \u5229\u7528\u7387\u4f4e\uff0c\u800c\u4e14\u53ef\u80fd\u6709\u8fdb\u7a0b\u6c38\u8fdc\u62ff\u4e0d\u5230\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90\uff0c\u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u3002</li> <li>no preemption</li> <li>\u53ef\u4ee5\u62a2\uff0c\u4f46\u4e0d\u5b9e\u7528\u3002</li> <li>circular wait</li> <li>impose a total ordering of all resource types</li> <li>require that each process requests resources in an increasing order of enumeration</li> <li>many OSes adopt this strategy for some locks.</li> </ul>"},{"location":"os/Deadlock/#deadlock-avoidance","title":"Deadlock Avoidance","text":"<p>avoidance \u7528\u4e86\u4e00\u4e9b\u7b97\u6cd5\uff0c\u5728\u5206\u914d\u8d44\u6e90\u4e4b\u524d\uff0c\u5148\u5224\u65ad\u662f\u5426\u4f1a\u6b7b\u9501\uff0c\u5982\u679c\u4f1a\u6b7b\u9501\u5c31\u4e0d\u5206\u914d\u3002</p>"},{"location":"os/Deadlock/#safe-state","title":"Safe State","text":"<p>\u5e8f\u5217\u91cc\u7684\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u88ab\u6ee1\u8db3\u3002\uff08\u7a7a\u95f2\u7684\u8d44\u6e90\u548c\u4e4b\u524d\u7684\u8fdb\u7a0b\u91ca\u653e\u7684\u8d44\u6e90\uff09 Safe state can guarantee no deadlock. Deadlock avoidance ensure a system never enters an unsafe state.</p> <ul> <li>Single instance of each resource type : use resource allocation graph</li> <li>Multiple instances of a resource type : use the Banker\u2019s algorithm</li> </ul> <p>Example</p> <p></p>"},{"location":"os/Deadlock/#bankers-algorithm","title":"banker's algorithm","text":"<ul> <li>claim edge: \u67d0\u4e2a process \u53ef\u80fd\u9700\u8981 resource\uff0c\u7528 dashed line \u8868\u793a</li> <li> <p>\u5fc5\u987b\u8981\u5148 claimed a priori in the system</p> </li> <li> <p>Transitions in between states</p> </li> <li>claim edge converts to request edge when a process requests a resource</li> <li>request edge converts to an assignment edge when the  resource is allocated to the process</li> <li>assignment edge converts to claim edge when the process releases the resource</li> </ul> <p></p> <ul> <li>each process must claim maximum use of resources it may need in advance</li> <li>when a process requests a resource, it may have to wait</li> <li>when a process gets all its resources, it must return them in a finite amount of time</li> </ul> <p>\u6211\u4eec\u901a\u8fc7 available\uff08\u5f53\u524d\u8fd8\u6ca1\u6709\u88ab\u5206\u914d\u7684\u7a7a\u95f2\u8d44\u6e90\uff09, max\uff08\u8fdb\u7a0b\u6240\u9700\u8981\u7684\u8d44\u6e90\uff09, allocation\uff08\u5df2\u7ecf\u5206\u914d\u7684\u8d44\u6e90\uff09, need\uff08\u8fd8\u9700\u8981\u5206\u914d\u591a\u5c11\u8d44\u6e90\uff09 \u8fd9\u56db\u4e2a\u77e9\u9635\u523b\u753b\u4e00\u4e2a\u65f6\u95f4\u5185\u5404\u4e2a\u8fdb\u7a0b\u5bf9\u5404\u79cd\u8d44\u6e90\u7684\u6301\u6709\u548c\u9700\u6c42\u60c5\u51b5\u3002</p> <p>\u9009\u53d6\u4e00\u4e2a need\uff08\u7684\u6bcf\u4e00\u9879\u90fd\u5bf9\u5e94\u5730\uff09\u5c0f\u4e8e available\uff08\u7684\u5bf9\u5e94\u9879\uff09\u7684\u8fdb\u7a0b\uff0c\u5176\u8fd0\u884c\u5b8c\u540e\u4f1a\u5c06 allocation \u91ca\u653e\u56de work\uff08\u524d\u9762\u7684\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a7a\u95f2\u7684\u8d44\u6e90\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u4e8b\u5b9e\u4e0a\u5e76\u4e0d work\uff0c\u56e0\u4e3a\u5e76\u4e0d\u77e5\u9053\u9700\u8981\u591a\u5c11\u8d44\u6e90\u3002</p>"},{"location":"os/Deadlock/#deadlock-detection","title":"Deadlock Detection","text":"<p>\u7528 process \u505a node \u753b wait-for graph\uff0c\u5982\u679c\u6709\u73af\u5c31\u6709 deadlock\u3002</p>"},{"location":"os/Deadlock/#deadlock-recovery","title":"Deadlock Recovery","text":"<ul> <li>Terminate deadlocked processes options</li> <li>abort all deadlocked processes</li> <li>abort one process at a time until the deadlock cycle is eliminated</li> <li> <p>\u5982\u4f55\u9009\u62e9\u54ea\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\uff1f</p> <ul> <li>process priority</li> <li>how long process has computed</li> <li>how long process has been waiting</li> <li>resources process has used</li> <li>resources process needs to complete</li> <li>is process interactive or batch</li> </ul> </li> <li> <p>Resource preemption</p> </li> <li>select a victim</li> <li>rollback to some safe state</li> <li>restart processes</li> </ul>"},{"location":"os/Review/","title":"Half review","text":"<ul> <li>Arch -&gt; Bit</li> <li>Intro -&gt; What is OS? Process_event;\u8d44\u6e90\u62bd\u8c61\u4e0e\u5206\u914d</li> <li>Structure -&gt; Syscall;linker and loaders</li> <li>Process -&gt; States, PCB, Context switch,scheduling</li> <li>IPC -&gt; Shared memory, message passing</li> <li>Thread -&gt; execution units</li> <li>Synchornoization</li> <li>Deadlock</li> </ul> <p>x86-32 mt 80 x86-64 syscall Arm64 svc Riscv ecall</p> <p>Stack\uff08\u6267\u884c\u7684\u8349\u7a3f\u7eb8\uff09 \u6bd4\u8f83\u5feb\u5f15\u5165\u4e24\u4e2a\u5bc4\u5b58\u5668\uff0c\u4e00\u4e2a\u6808\u9876\u4e00\u4e2a\u6808\u5e95\uff0cheap \u6bd4\u8f83\u6162\uff0c\u5f97\u7528\u6307\u9488\u8bbf\u95ee\uff0c\u8981load \u5bc4\u5b58\u5668\u91cc\uff0c\u4e0d\u5728 cache \u91cc</p>"},{"location":"os/Synchronization/","title":"Synchronization","text":""},{"location":"os/Synchronization/#race-condition","title":"Race Condition","text":"<p>Several processes (or threads) access and manipulate the same data concurrently and the outcome of the execution depends on the particular order in which the access takes place, is called a race-condition. \u591a\u4e2a\u8fdb\u7a0b\u5e76\u884c\u5730\u5199\u6570\u636e\uff0c\u7ed3\u679c\u53d6\u51b3\u4e8e\u5199\u7684\u5148\u540e\u987a\u5e8f\uff0c\u8fd9\u5c31\u662f\u7ade\u4e89\u6761\u4ef6\u3002</p> <p>kernel \u91cc\u9762 race \u7ecf\u5e38\u53d1\u751f\uff0c\u5728\u5185\u6838\u4e2d\uff0c\u6bd4\u5982\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6 fork\uff0c\u5b50\u8fdb\u7a0b\u53ef\u80fd\u62ff\u5230\u4e00\u6837\u7684 pid\u3002</p> <p>critical section</p> <p>\u4fee\u6539\u5171\u540c\u53d8\u91cf\u7684\u533a\u57df\u79f0\u4e3a critical section\uff1b\u5171\u540c\u533a\u57df\u4e4b\u524d\u53eb entry section\uff0c\u4e4b\u540e\u53eb exit section\u3002</p> <p></p> <ul> <li>Single-core system: preventing interrupts</li> <li>Multiple-processor: preventing interrupts are not feasible (depending on if kernel is preemptive or non-preemptive)</li> <li>Preemptive \u2013 allows preemption of process when running in kernel mode</li> <li>Non-preemptive \u2013 runs until exits kernel mode, blocks, or voluntarily yields CPU</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\u9700\u8981\uff1a + Mutual Exclusion\uff08\u4e92\u65a5\u8bbf\u95ee\uff09   + \u5728\u540c\u4e00\u65f6\u523b\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u4e34\u754c\u533a + Progress\uff08\u7a7a\u95f2\u8ba9\u8fdb\uff09   + \u5f53\u6ca1\u6709\u7ebf\u7a0b\u5728\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\u65f6\uff0c\u5fc5\u987b\u5728\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5141\u8bb8\u5176\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u6267\u884c\u7684\u8fdb\u5c55 + Bounded waiting\uff08\u6709\u9650\u7b49\u5f85\uff09   + \u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u540e\uff0c\u5fc5\u987b\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u83b7\u5f97\u8bb8\u53ef\u5e76\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4e0d\u80fd\u65e0\u9650\u7b49\u5f85</p> <p>Perterson's Solution</p> <p></p> <p>It assumes that LOAD and STORE are atomic,(atomic: execution cannot be interrupted)</p> <p>\u9a8c\u8bc1\u4e0a\u9762\u4e09\u4e2a\u6761\u4ef6\uff1a + Mutual Exclusion   + P0 enters CS:     + Either <code>flag[1]=false</code> or <code>turn=0</code>     + Now prove P1 will not be able to enter CS   + Case 1: <code>flag[1]=false</code> P1 is out CS   + Case 2: <code>flag[1]=true,</code> <code>turn=1</code> -&gt; P0 is looping, contradicts with P0 is in CS   + Case 3: <code>flag[1]=true</code>, <code>turn=0</code> -&gt; P1 is looping + Process requirement</p> <p></p> <ul> <li>Bounded waiting</li> </ul> <p>Whether P0 enters CS depends on P1; Whether P1 enters CS depends on P0; P0 will enter CS after one limited entry P1</p> <p>Peterson\u2019s Solution is not guaranteed to work on modern architectures.</p> <ul> <li>Only works for two processes case</li> <li>It assumes that LOAD and STORE are atomic</li> <li>Instruction reorder \u6307\u4ee4\u4f1a\u4e71\u5e8f\u6267\u884c\u3002</li> </ul> <p>wait \u548c signal \u90fd\u8981\u662f automatic \u7684\uff0c\u4e0d\u80fd\u88ab\u6253\u65ad\u3002 linux \u5185 spinlock(mutexlock) \u7528\u7684\u591a\uff0c\u5f88\u591a\u64cd\u4f5c\u90fd\u662f\u5f88\u77ed\u7684\u5bf9\u4e00\u4e2a\u53d8\u91cf\u64cd\u4f5c\u3002</p> <p>\u957f\u7684\u7528 semaphore\uff0c\u5b58\u5728 context-switch\uff0c</p> <p>\u957f\u77ed\u7528 context-switch \u6765\u6bd4\u8f83\u3002</p>"},{"location":"os/Synchronization/#synchornization-examples","title":"Synchornization Examples","text":""},{"location":"os/Synchronization/#bounded-buffer-problem","title":"Bounded-Buffer Problem","text":"<p>Two processes, the producer and the consumer share n buffers</p> <ul> <li>the producer generates data, puts it into the buffer</li> <li>the producer won\u2019t try to add data into the buffer if it is full.</li> <li>the consumer consumes data by removing it from the buffer.</li> <li>the consumer won\u2019t try to remove data from an empty buffer.</li> </ul> <p>\u9700\u8981\u5b9a\u4e49\u54ea\u4e9b\u53d8\u91cf\uff1f</p> <ul> <li>n buffer</li> <li>mutex initialized to 1</li> <li>full-slots initialized to 0</li> <li>empty-slots initialized to n</li> </ul> <p>\u9700\u8981\u4e9b\u51e0\u6761\u8bed\u53e5\uff0c\u987a\u5e8f\u4e5f\u5f88\u5173\u952e</p> <ul> <li> <p>producer process <pre><code>do {\n// produce an item\n...\nwait(empty-slots); // \u5f80\u91cc\u9762\u586b\u4e4b\u524d\u9700\u8981\u62ff\u4e00\u4e2a empty slot\nwait(mutex); // \u4e0d\u80fd\u8c03\u6362\uff0c\u8c03\u6362\u4e86\u5c31\u5e26\u7740\u9501 sleep\uff0c\u522b\u7684 producer \u5c31\u8fdb\u4e0d\u6765\u4e86\n// add the item to the buffer\n...\nsignal(mutex); signal(full-slots);\n} while(True);\n</code></pre></p> </li> <li> <p>consumer process <pre><code>do {\n//produce an item\n...\nwait(full-slots);   // \u628a full-slots \u51cf\u4e00\nwait(mutex);\n//remove the item to the buffer\n...\nsignal(mutex);\nsignal(empty-slots);\n} while (TRUE)\n</code></pre></p> </li> </ul>"},{"location":"os/Synchronization/#readers-writers-problem","title":"Readers-writers problem","text":"<p>A data set is shared among a number of concurrent processes + readers: only read the data set; they do not perform any updates + writers: can both read and write</p> <p>Problems:\u591a\u4e2a reader \u53ef\u4ee5\u5171\u4eab\uff0c\u5373\u540c\u65f6\u8bfb\uff1b\u4f46\u53ea\u80fd\u6709\u4e00\u4e2a write \u8bbf\u95ee\u6570\u636e\uff08\u5199\u548c\u8bfb\u4e5f\u4e0d\u5171\u4eab\uff09\u3002</p> <p>Solution:</p> <ul> <li>semaphore mutex initialized to 1</li> <li>semaphore write initialized to 1</li> <li> <p>integer readcount initialized to 0</p> </li> <li> <p>Writer process <pre><code>do {\nwait(write); // \u8ddf\u6240\u6709\u4eba\u4e92\u65a5\n// write the shared data\nsignal(write);\n}while (TRUE);\n</code></pre></p> </li> <li> <p>Reader process <pre><code>do {\nwait(mutex); readcount++;\nif (readcount == 1) // \u8bfb\u8ddf\u5199\u4e92\u65a5\nwait(write);\nsignal(mutex)\n//reading data\n...\nwait(mutex);\nreadcount--;\nif (readcount == 0) signal(write);\nsignal(mutex);\n} while(TRUE);\n</code></pre></p> </li> </ul> <p>mutex \u662f\u4fdd\u62a4 readcount\u3002\u7b2c\u4e00\u4e2a reader \u5728\u7b49\u5230 writer \u91ca\u653e\u4ee5\u540e\uff0c\u5c31\u628a mutex \u91ca\u653e\uff0c\u540e\u9762\u7684 reader \u7531\u4e8e readcount \u4e0d\u4e3a 1\uff0c\u6240\u4ee5\u4e0d\u4f1a\u518d\u6b21 wait(write)\uff0c\u5c31\u90fd\u53ef\u4ee5 read data\u3002</p>"},{"location":"os/Synchronization/#reader-first","title":"Reader first","text":"<p>\u5982\u679c\u6709 reader holds data\uff0cwriter \u6c38\u8fdc\u62ff\u4e0d\u5230\u9501\uff0c\u8981\u7b49\u6240\u6709\u7684 reader \u7ed3\u675f\u3002</p>"},{"location":"os/Synchronization/#writer-first","title":"Writer first","text":"<p>\u5982\u679c write ready \u4e86\uff0c\u4ed6\u5c31\u4f1a\u5c3d\u53ef\u80fd\u65e9\u5730\u8fdb\u884c\u5199\u64cd\u4f5c\u3002If reader holds data, new reader will wait for suspended writer.</p> <p>\u4e0a\u9762\u7684 solution \u662f reader first\u3002</p> <p>\u5982\u679c\u4e00\u4e2a reader \u5728 read data \u7684\u8fc7\u7a0b\u4e2d\u88ab interrupt\uff0c\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u662f\u4e00\u4e2a writer\uff0c\u4f46\u662f\u8fd9\u4e2a writer \u662f\u5728 write.waiting.queue \uff0c\u6240\u4ee5\u8c03\u5ea6\u4e5f\u8c03\u4e0d\u5230\u5b83\u3002</p> <p></p> <p>\u5224\u65ad\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u5426\u88ab\u8c03\u5ea6\uff0c\u8981\u770b\u5728 ready queue \u8fd8\u662f waiting queue\u3002</p>"},{"location":"os/Synchronization/#dining-philosophers-problem","title":"Dining-philosophers problem","text":"<p>Philosophers spend their lives thinking and eating, they sit in a round table, but don\u2019t interact with each other.</p> <p></p> <p>\u6bcf\u6b21\u53ea\u80fd\u62ff\u4e00\u6839\u7b77\u5b50\uff0c\u4f46\u662f\u8981\u62ff\u5230\u4e24\u53ea\u7b77\u5b50\u624d\u80fd\u5403\u996d\u3002\u4f8b\u5982\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u5148\u62ff\u81ea\u5df1\u53f3\u8fb9\u7684\u7b77\u5b50\uff0c\u518d\u51c6\u5907\u62ff\u5de6\u8fb9\u7684\u7b77\u5b50\uff0c\u5c31\u4f1a\u5361\u6b7b\u3002</p> <p>Solution: only odd philosophers start left-hand first, and even philosophers start right-hand first. This does not deadlock.</p>"},{"location":"os/Threads/","title":"Threads","text":""},{"location":"os/Threads/#thread-definition","title":"Thread Definition","text":"<ul> <li>A thread is a basic unit of execution within a process \u57fa\u672c\u7684\u6267\u884c\u5355\u5143</li> <li>Each thread has its own</li> <li>thread ID</li> <li>program counter</li> <li>register set</li> <li>stack</li> <li>It shares the following with other threads in the same process</li> <li>code section</li> <li>data section</li> <li>the heap (dynamically allocated memory)</li> <li>open files and signals</li> <li> <p>Concurrency: A multi-threaded process can do multiple things at once</p> </li> <li> <p>Advantages of Threads</p> </li> <li>Responsiveness</li> <li>Resource Sharing</li> <li>Economy</li> <li>Scalability</li> <li>Drawbacks of Threads</li> <li>\u9694\u79bb\u6027\u53d8\u5dee\u4e86\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u6302\u4e86\u6574\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u6302</li> <li>Typical challenges of multi-threaded programming</li> </ul>"},{"location":"os/Threads/#user-threads-vs-kernel-threads","title":"User Threads vs. Kernel Threads","text":"<p>CPU + mode bit \u5206\u4e3a user mode \u548c kernel mode\u3002 \u73b0\u4ee3\u7684\u52a0\u4e24\u4f4d\uff0c\u5206\u4e3a\u56db\u79cd\u6a21\u5f0f</p> <ul> <li>Many-to-One Model</li> <li>Advantages:multi-threading is efficient and low-overhead, \u5982\u679c\u6ca1\u6709\u7528 syscall \u6548\u7387\u5f88\u9ad8</li> <li>Major Drawback:cannot take advantage of a multi-core architecture!if one threads blocks, then all the others do!\u53ea\u6709\u4e00\u4e2a kernel thread\uff0c\u6240\u4ee5\u53ea\u80fd\u5728\u4e00\u4e2a\u6838\u4e0a\u8fd0\u884c\uff0c\u9700\u8981 syscall \u7684\u65f6\u5019\u6548\u7387\u4f4e</li> </ul> <p></p> <ul> <li>One-to-One Model</li> <li>Removes both drawbacks of the Many-to-One Model</li> <li>Creating a new threads requires work by the kernel<ul> <li>Not as fast as in the Many-to-One Model</li> </ul> </li> <li>Example:Linux, Windows, Solaris 9 and later \u8fd9\u79cd\u60c5\u51b5\u73b0\u5728\u7528\u7684\u591a\u662f\u56e0\u4e3a\u786c\u4ef6\u4fbf\u5b9c\u4e86\uff0c\u6240\u4ee5\u91c7\u7528\u6548\u7387\u66f4\u9ad8\u7684\u65b9\u5f0f</li> </ul> <p></p> <ul> <li>Many-to-Many Model</li> <li>A compromise</li> <li>If a user thread blocks, the kernel can create a new kernel threads to avoid blocking all user threads</li> <li>A new user thread doesn\u2019t necessarily require the creation of a new kernel thread</li> <li> <p>True concurrency can be achieved on a multi-core machine</p> </li> <li> <p>Two-Level Model</p> </li> <li>The user can say: \u201cBind this thread to its own kernel thread\u201d</li> </ul>"},{"location":"os/Threads/#thread-libraries","title":"Thread Libraries","text":"<ul> <li>Thread libraries provide users with ways to create threads in their own programs</li> <li>In C/C++: pthreads and Win32 threads<ul> <li>Implemented by the kernel</li> </ul> </li> <li>In C/C++: OpenMP(\u5e76\u884c\u8ba1\u7b97)<ul> <li>A layer above pthreadsfor convenient multithreading in \u201ceasy\u201d cases</li> </ul> </li> <li>In Java: Java Threads<ul> <li>Implemented by the JVM, which relies on threads implemented by the kernel</li> </ul> </li> </ul> <p>\u53ea\u8981\u7b26\u5408\u63a5\u53e3\u7684\u5b9a\u4e49\uff0c\u5c31\u53ef\u4ee5\u53eb pthreads\u3002 + Pthreads   + May be provided either as user-level or kernel-level   + A POSIX standard (IEEE 1003.1c) API for thread creation and synchronization   + Specification, not implementation   + API specifies behavior of the thread library, implementation is up to development of the library   + Common in UNIX operating systems</p> <ul> <li>OpenMP</li> <li> <p>Identifies parallel regions \u2013 blocks of code that can run in parallel <code>#pragma omp parallel</code> \u4f7f\u7528\u4e4b\u540e\u7f16\u8bd1\u5668\u4f1a\u4e3a\u6211\u4eec\u5207\u5206\u51fa\u82e5\u5e72\u4e2a\u5e76\u884c\u5757\uff0c\u521b\u9020\u51fa\u5bf9\u5e94\u7684\u7ebf\u7a0b\uff0c\u6700\u540e\u4f7f\u7528 join \u628a\u7ebf\u7a0b\u5408\u5e76\u3002</p> </li> <li> <p>Java Threads</p> </li> <li>\u6700\u591a\u7528\u7684\uff0c\u5c0f\u767d\u53cb\u597d</li> <li>Green threads have all the disadvantages of user-level threads</li> <li>\u65e9\u671f JVM \u7528\u7684\u662f green threads(many-to-one)\uff0c\u73b0\u5728\u63d0\u4f9b\u4e86 native threads(one-to-one)</li> </ul>"},{"location":"os/Threads/#threading-issues","title":"Threading Issues","text":"<p>\u7ebf\u7a0b\u7684\u52a0\u5165\u8ba9\u8fdb\u7a0b\u7684\u64cd\u4f5c\u53d8\u5f97\u66f4\u590d\u6742\u3002</p>"},{"location":"os/Threads/#semantics-of-fork-and-exec","title":"Semantics of <code>fork()</code> and <code>exec()</code>","text":"<p>Thread calls <code>fork()</code> </p> <ul> <li>Two possibilities:</li> <li>A new process is created that has only one thread (the copy of the thread that called fork()), or</li> <li>A new process is created with all threads of the original process (a copy of all the threads, including the one that called fork())</li> <li>Linux use the first option</li> </ul> <p>If one calls exec() after fork(), all threads are \u201cwiped out\u201d anyway</p>"},{"location":"os/Threads/#signals","title":"Signals","text":"<p>We\u2019ve talked about signals for processes + Signal handlers are either default or user-specified + signal() and kill() are the system calls + In a multi-threaded program, what happens?   + Deliver the signal to the thread to which the signal applies   + Deliver the signal to every thread in the process   + Deliver the signal to certain threads in the process   + Assign a specific thread to receive all signals + Most UNIX versions: a thread can say which signals it accepts and which signals it doesn\u2019t accept + On Linux: dealing with threads and signals is tricky but well understood with many tutorials on the matter and man pages\uff0c\u4ea4\u7ed9\u5f00\u53d1\u8005\u9009\u62e9</p>"},{"location":"os/Threads/#safe-thread-cancellation","title":"Safe Thread Cancellation","text":"<p>\u628a\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5de5\u4f5c\u53d6\u6d88\u6389\uff0c\u5982\u4f55\u4fdd\u8bc1\u53d6\u6d88\u540e\u4e0d\u5f71\u54cd\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002 + One potentially useful feature would be for a thread to simply terminate another thread + Two possible approaches:   + Asynchronous cancellation \u7acb\u5373\u7ec8\u6b62\u3002     + One thread immediately terminates another     + The terminated thread does not get to clean up after itself     + The terminated thread does not get to unlock any mutexes it has locked   + Deferred cancellation \u7ebf\u7a0b\u4f1a\u81ea\u5df1\u8fdb\u884c\u5468\u671f\u6027\u68c0\u67e5\uff0c\u5982\u679c\u53d6\u6d88\u6389\u4e0d\u4f1a\u5f71\u54cd\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u5c31\u628a\u81ea\u5df1\u53d6\u6d88\u6389\u3002     + The thread is marked for cancellation     + The thread periodically checks if it has been marked for cancellation     + The thread can clean up and unlock mutexes before it terminates     + The thread can refuse to be cancelled</p> <p>Default type is deferred</p> <p></p> <ul> <li>The problem with asynchronous cancellation: </li> <li>\u7acb\u5373\u53d6\u6d88 may lead to an inconsistent state or to a synchronization problem if the thread was in the middle of \"something important\"</li> <li>Absolutely terrible bugs lurking in the shadows</li> </ul> <p>\u5e26\u6765\u5f88\u591a\u95ee\u9898\uff1a\u6bd4\u5982\u4e00\u4e2a\u7ebf\u7a0b\u6b63\u5728\u5199\u53d8\u91cf\uff0c\u503c\u8fd8\u6ca1\u6709\u540c\u6b65\u5230\u5185\u5b58\u6216\u8005 cache\uff0c\u8fd9\u4e2a bug \u5f88\u96be\u88ab\u590d\u73b0\u3002 \u5982\u4f55 debug \u8fd9\u79cd\u95ee\u9898\uff1f\u9700\u8981\u5148\u590d\u73b0 reproduce\u3002</p> <ul> <li>The problem with deferred cancellation: the code is cumbersome due to multiple cancellation points,\u4ee3\u7801\u4e0d\u597d\u770b\uff0c\u5f88\u7b28\u91cd</li> <li>In Java, the Thread.stop() method is deprecated, and so cancellation has to be deferred \u76ee\u524d\u6ca1\u6709\u4e00\u4e2a\u5f88\u7406\u60f3\u7684\u65b9\u6848</li> </ul>"},{"location":"os/Threads/#thread-scheduling","title":"Thread scheduling","text":"<ul> <li>Distinction between user-level and kernel-level threads</li> <li>When threads supported, threads scheduled, not processes</li> <li>Many-to-one and many-to-many models, thread library schedules user-level threads to run on LWP</li> <li>Known as process-contention scope (PCS) since scheduling competition is within the process \u8fdb\u7a0b\u7c92\u5ea6\u8c03\u5ea6\uff0c\u8fdb\u7a0b\u5206\u914d\u7684\u65f6\u95f4\u90fd\u4e00\u6837\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u8fdb\u7a0b\u7684\u65f6\u95f4</li> <li>Typically done via priority set by programmer</li> <li>Kernel thread scheduled onto available CPU is system-contention scope(SCS) \u2013competition among all threads in system \u7ebf\u7a0b\u7c92\u5ea6\u8c03\u5ea6\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u7684\u65f6\u95f4\u4e00\u6837</li> </ul>"},{"location":"os/Threads/#linux-threads","title":"Linux Threads","text":"<ul> <li>In Linux, a thread is also called a light-weight process (LWP)</li> <li>The clone() syscallis used to create a thread or a process\uff0c\u5e95\u4e0b\u7684\u4e00\u4e9b\u53c2\u6570\u544a\u8bc9\u7ebf\u7a0b\u6709\u54ea\u4e9b\u4fe1\u5fc3</li> <li>Shares execution context with its parent</li> <li>pthreadlibrary uses clone() to implement threads.</li> </ul> <p><code>clone()</code> \u6709\u4e00\u4e2a\u53c2\u6570 <code>CLONE_VM</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u7236\u5b50\u8fdb\u7a0b\u4f1a\u5171\u4eab\u5185\u5b58\uff0c\u5426\u5219\u4e0d\u4f1a\u5171\u4eab\u5185\u5b58\u3002</p> <ul> <li>Linux does not distinguish between PCB and TCB</li> <li>Kernel data structure: task_struct</li> </ul> <p></p> <p>Single-threaded process vs multi-threaded process</p> <p></p> <p>\u6700\u5f00\u59cb\u7ebf\u7a0b\u521b\u5efa\u65f6 <pre><code>task_struct{\npid_t pid;// thread ID\nstack;\nmm_struct\nfiles\n}\n</code></pre> \u540e\u9762\u7684\u7ebf\u7a0b\u521b\u5efa\u65f6\u53ea\u521b\u5efa pid\uff0cstack\uff0c\u5269\u4f59\u7684\u90fd\u6307\u5411\u5f00\u59cb\u7684\u7ebf\u7a0b\uff0c\u8fd9\u5c31\u5b9e\u73b0\u4e86\u5171\u4eab\u3002</p> <p>\u540e\u9762\u7684 PID \u90fd\u662f leading Thread PID</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u9762\u6709\u8bb8\u591a\u7ebf\u7a0b\uff0ctask_struck \u5185\u6709 thread_group \u7684 list_head\uff0c\u7528\u6765\u4e32\u8d77\u6240\u6709\u7ebf\u7a0b</p> <p>\u7ebf\u7a0b\u662f 16K(0x4000) \u5bf9\u9f50\u7684\uff0c\u662f\u56e0\u4e3a\u81f3\u5c11\u662f 1 page(0x1000) \u5bf9\u9f50\uff0c\u53c8\u56e0\u4e3a kernel \u7684\u539f\u56e0\u662f\u8981 4 page \u5bf9\u9f50\u3002\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u788e\u7247\u5316\u7a7a\u95f4\u3002</p> <p></p>"},{"location":"os/Threads/#user-thread-to-kernel-thread-mapping","title":"User thread to kernel thread mapping","text":"<p>Process = Thread + Address Space</p> <ul> <li>One task in Linux</li> <li>Same task_struct(PCB) means same thread<ul> <li>Also viewed as 1:1 mapping</li> <li>One user thread maps to one kernel thread</li> <li>But actually, they are the same thread</li> </ul> </li> <li>Can be executed in user space<ul> <li>User code, user space stack</li> </ul> </li> <li>Can be executed in kernel space<ul> <li>Kernel code, kernel space stack</li> </ul> </li> </ul> <p></p> <p>user space stack \u4e0d\u56fa\u5b9a\uff0ckernel space stack \u56fa\u5b9a\u5927\u5c0f 16k(Linux)\u3002</p> <ul> <li>One task</li> <li>Can be a single-threaded process<ul> <li>One task_struct\u2013PCB</li> <li>PIDisthreadID</li> </ul> </li> <li>Can be a multi-threaded process<ul> <li>Multiple task_struct</li> <li>PID \u662f leading thread \u7684 PID</li> </ul> </li> <li>Can be executed in user space<ul> <li>User code, user space stack</li> </ul> </li> <li>Can be executed in kernel space<ul> <li>Such as calls a system call</li> <li>Execution flow traps to kernel</li> <li>Execute kernel code, use kernel space stack</li> </ul> </li> </ul> <p></p>"},{"location":"os/intro/","title":"operate system overview","text":"<p>\u591a\u4e86 mode \u6765\u5b9e\u73b0 operate system</p> <p>mode \u5206\u4e3a privileged mode \u548c unprivileged mode</p>"},{"location":"os/intro/#os-events","title":"OS Events","text":""},{"location":"os/structures/","title":"Operator Structures","text":""},{"location":"os/structures/#operating-system-services","title":"Operating System Services","text":"<p>\u7ea2\u8272\u90e8\u5206\u662f helpful to user, \u84dd\u8272\u90e8\u5206\u662f better efficiency/operation</p> <p>syscall:kernel \u63d0\u4f9b\u7ed9 user \u7684 \u7528\u6765\u505a priviledge \u7684 interface</p>"},{"location":"read/","title":"Index","text":"<p>\u4e00\u4e9b\u770b\u8fc7/\u5728\u770b\u7684\u8bba\u6587\u7b14\u8bb0</p>"},{"location":"read/Consistency%20Models/","title":"Consistency Models","text":"<p> \u7ea6 2403 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Arxiv</p>"},{"location":"read/Consistency%20Models/#abstract","title":"Abstract","text":"<ul> <li>\u95ee\u9898\uff1aDiffusion \u7684\u6548\u679c\u5f88\u597d\uff0c\u4f46\u662f\u4f9d\u8d56\u4e8e\u8fed\u4ee3\u91c7\u6837\u8fc7\u7a0b\uff0c\u8fd9\u4f7f\u5f97\u751f\u6210\u7f13\u6162</li> <li>\u89e3\u51b3\uff1aconsistency Models--\u76f4\u63a5\u5c06\u566a\u58f0\u6620\u5c04\u5230\u6570\u636e\u6765\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u6837\u672c</li> <li>idea: \u901a\u8fc7 enforcing self-consistency property \u6765\u8bad\u7ec3 consistency models\uff1b\u4e3a\u4ec0\u4e48\u80fd single-step\uff1a\u6ee1\u8db3 consistency property\uff0c\u5728\u8f68\u8ff9\u4e0a\u4efb\u4f55\u4e00\u70b9\u90fd\u53ef\u4ee5\u6620\u5c04\u5230\u521d\u59cb\u70b9\u5373\u539f\u59cb\u7684\u6570\u636e\u7a7a\u95f4\u3002</li> </ul> <p>Consistency Model \u65e2\u652f\u6301\u5feb\u901f\u4e00\u6b65\u751f\u6210\uff0c\u4e5f\u652f\u6301\u591a\u6b65\u751f\u6210\u9ad8\u8d28\u91cf\u6837\u672c\u3002They also support zero-shot data editing, such as image inpainting, colorization, and super-resolution, without requiring explicit training on these tasks. \u65e2\u80fd\u7528 single-step \u751f\u6210\u6837\u672c\uff0c\u4e5f\u80fd\u591a\u6b21\u8fed\u4ee3\u6765\u63d0\u9ad8\u6837\u672c\u8d28\u91cf\u3002</p> <p>\u8bad\u7ec3\u65b9\u5f0f\uff1a\u4ece pre-trained diffusion model \u4e2d distill \u6216\u4f5c\u4e3a\u72ec\u7acb\u7684\u751f\u6210\u6a21\u578b\u8bad\u7ec3</p> <p>SOTA: in one-step and few-step sampling \u4f18\u4e8e\u5b58\u5728\u7684 distillation techniques;  FID of 3.55 on CIFAR-10 and 6.20 on ImageNet 64 x 64 for one-step generation.</p> <p>trained in isolation:outperform existing one-step, non-adversarial generative models on standard benchmarks such as CIFAR10, ImageNet 64 \u02c6 64 and LSUN 256 \u02c6 256.</p>"},{"location":"read/Consistency%20Models/#introduction","title":"Introduction","text":"<p>\u6269\u6563\u6a21\u578b\u7684\u4e00\u4e2a\u5173\u952e\u7279\u5f81\u662f\u8fed\u4ee3\u91c7\u6837\u8fc7\u7a0b\uff0c\u8be5\u8fc7\u7a0b\u9010\u6e10\u4ece\u968f\u673a\u521d\u59cb\u5411\u91cf\u4e2d\u6d88\u9664\u566a\u58f0\u3002\u8fd9\u79cd\u8fed\u4ee3\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u8ba1\u7b97\u548c\u6837\u672c\u8d28\u91cf\u7684\u7075\u6d3b\u6743\u8861\uff0c\u56e0\u4e3a\u4f7f\u7528\u989d\u5916\u7684\u8ba1\u7b97\u8fdb\u884c\u66f4\u591a\u6b21\u8fed\u4ee3\u901a\u5e38\u4f1a\u4ea7\u751f\u8d28\u91cf\u66f4\u597d\u7684\u6837\u672c\u3002\u8fd9\u4e5f\u662f\u8bb8\u591a zero-shot editing \u4efb\u52a1\u7684\u57fa\u7840\uff0c\u5982\u56fe\u50cf\u4fee\u8865\u3001\u7740\u8272\u548c\u8d85\u5206\u8fa8\u7387\u3002\u7136\u800c\u76f8\u6bd4\u4e8e GAN\u3001VAE\u3001nomalizing flow \u7b49 single-step \u751f\u6210\u6a21\u578b\uff0cdiffusion \u6a21\u578b\u7684\u751f\u6210\u6162\u5f97\u591a\uff0c\u901a\u5e38\u9700\u8981 10-2000 \u500d\u7684\u8ba1\u7b97\u3002</p> <p>consistency model \u4fdd\u7559\u539f\u6709\u7684 more sample step, high-quality samples, and zero-shot editing \u7684\u80fd\u529b\uff0c\u540c\u65f6\u80fd\u5b9e\u73b0 single-step \u7684\u5feb\u901f\u751f\u6210\u3002</p> <p>\u4e3a\u4ec0\u4e48\u53eb consistency model\uff1apoints on the same trajectory map to the same initial point\u3002\u540c\u4e00\u8f68\u8ff9\u4e0a\u7684\u70b9\u6620\u5c04\u5230\u540c\u4e00\u521d\u59cb\u70b9</p> <p></p> <p>\u8bad\u7ec3\u65b9\u6cd5\uff1abased on enforcing the self-consistency property.</p> <ol> <li>relies on numerical ODE solvers and a pre-trained diffusion model to generate pairs of adjacent points on a PF ODE trajectory</li> <li>\u4f5c\u4e3a\u72ec\u7acb\u7684\u6a21\u578b\u65cf\u8bad\u7ec3\u3002\u5f53\u4f5c\u4e3a\u72ec\u7acb\u751f\u6210\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u65f6\uff0c\u4e00\u81f4\u6027\u6a21\u578b\u53ef\u4ee5\u5339\u914d\u6216\u8d85\u8d8a\u6e10\u8fdb\u84b8\u998f\u7684\u4e00\u6b65\u6837\u672c\u7684\u8d28\u91cf\uff0c\u5c3d\u7ba1\u6ca1\u6709\u4f7f\u7528 pre-trained diffusion model\u3002</li> </ol> <p>\u4e24\u79cd\u8bad\u7ec3\u65b9\u5f0f\u90fd\u4e0d\u9700\u8981\u5bf9\u6297\u8bad\u7ec3\u3002\u4e5f\u90fd\u5bf9\u67b6\u6784\u7684\u7ea6\u675f\u5f88\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528\u7075\u6d3b\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u53c2\u6570\u5316 consistency model\u3002</p> <p>\u6570\u636e\u96c6\uff1aCIFAR-10, ImageNet 64 x 64, LSUN 256 x 256</p>"},{"location":"read/Consistency%20Models/#diffusion-models","title":"Diffusion Models","text":"<p>\u6269\u6563\u6a21\u578b\u901a\u8fc7\u9ad8\u65af\u6270\u52a8\u9010\u6b65\u5c06\u6570\u636e\u6270\u52a8\u4e3a\u566a\u58f0\u6765\u751f\u6210\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7\u987a\u5e8f\u53bb\u566a\u6b65\u9aa4\u4ece\u566a\u58f0\u4e2d\u521b\u5efa\u6837\u672c\u3002\u7528 \\(p_{\\text{data}}\\) \u4ee3\u8868\u6570\u636e\u5206\u5e03\uff0cDiffusion model \u4ece\u7528SDE diffusing \\(p_{\\text{data}}\\) \u5f00\u59cb\uff1a</p> \\[ dx_t = \\mu(x_t, t)dt + \\sigma(x_t, t)dW_t \\] <p>\u5176\u4e2d \\(W_t\\) \u662f Brownian motion\uff0c\\(\\mu\\) \u662f drift coefficients\uff0c\\(\\sigma\\) \u662f diffusion coefficients\u3002\u5c06 \\(x_t\\) \u7684\u5206\u5e03\u8868\u793a\u4e3a \\(p_t(x)\\)\uff0c\u5219\u6709 \\(p_0(x) = p_{\\text{data}}(x)\\). \u8fd9\u4e2a SDE \u7684\u663e\u8457\u7279\u5f81\u662f\u5b58\u5728\u4e00\u4e2a\u79f0\u4e3a\u6982\u7387\u6d41(probability Flow)\u7684 ODE\uff0c\u5176 solution trajectories sampled at t are distributed according to \\(p_t(x)\\).</p> \\[ dx_t = (\\mu(x_t, t) - \\frac{1}{2}\\sigma^2(t)\\nabla \\log p_t(x_t))dt \\] <p>\u4e0a\u9762 SDE \u7684\u8bbe\u8ba1\u4f7f\u5f97 \\(P_T(x)\\) \u63a5\u8fd1\u4e8e\u6613\u5904\u7406\u7684\u9ad8\u65af\u5206\u5e03 \\(\\pi(x)\\)\uff0c\u4e5f\u5c31\u662f\u566a\u58f0\u3002\u91c7\u7528\u8bbe\u7f6e \\(\\mu(x,t) = 0,\\sigma(t) = \\sqrt{2t}\\) \u5728\u8fd9\u79cd\u8bbe\u7f6e\u4e0b\uff0c\u6211\u4eec\u6709 \\(p_t(x) = p_0(x) \\bigotimes \\mathcal{N}(0,t^2I)\\)\uff0c\u5176\u4e2d \\(\\bigotimes\\) \u8868\u793a\u5377\u79ef\u3002\u5e76\u4e14 \\(\\pi(x) = \\mathcal{N}(0,T^2I)\\)</p> <p>\u5bf9\u4e8e sampling\uff0c\u6211\u4eec\u9996\u5148\u8bad\u7ec3\u4e86\u4e00\u4e2a score model \\(s_\\Phi(x,t) \\approx \\nabla\\log p_t(x)\\) \u901a\u8fc7 score mathcing\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5e26\u5165\u5230\u4e0a\u9762\u7684\u5f0f\u5b50\u5c31\u5f97\u5230 PF ODE \u7684 empirical estimate</p> \\[ \\frac{dx_t}{dt}=-ts_\\Phi(x_t,t) \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u88ab\u79f0\u4e3a empirical PF ODE\u3002\u7136\u540e\u6211\u4eec sample \\(\\hat{x}_T \\sim \\pi = \\mathcal{N}(0,T^2I)\\) \u6765\u521d\u59cb\u5316 empirical PF ODE \u5e76\u4f7f\u7528\u4efb\u4f55\u6570\u503c ODE \u6c42\u89e3\u5668\u53ca\u65f6\u5411\u540e\u6c42\u89e3\uff0csuch as Euler and Heun solvers to obtain the solution trajectory. \\(\\{\\hat{x_T}\\}_{t\\in[0,T]}\\)\uff0c\u6700\u540e\u7684\u7ed3\u679c \\(\\hat{x}_0\\) \u53ef\u4ee5\u88ab\u770b\u4f5c\u539f\u59cb\u6570\u636e\u7684\u8fd1\u4f3c\u3002To avoid numerical instability,\u4e00\u4e2a\u5e38\u89c1\u7684\u6280\u5de7\u662f\u63d0\u65e9\u7ed3\u675f\u6c42\u89e3\u5f53 \\(t=\\epsilon\\), where \\(\\epsilon\\) is a small positive number. \u628a\\(\\hat{x_\\epsilon}\\)\u4f5c\u4e3a\u6700\u7ec8\u7684\u6837\u672c\u3002\u5728\u8fd9\u91cc\u8bbe\u7f6e \\(\\epsilon = 0.002,T=80\\)</p> <p>Diffusion Model \u53d7\u5230\u91c7\u6837\u901f\u5ea6\u7684\u9650\u5236\uff0c\u663e\u7136\u4f7f\u7528 ODE \u6c42\u89e3\u5668\u91c7\u6837\u9700\u8981\u5bf9 score model \\(s_\\Phi(x,t)\\) \u8fdb\u884c\u8fed\u4ee3\u8bc4\u4f30\uff0c\u8ba1\u7b97\u6210\u672c\u8f83\u9ad8\u3002\u73b0\u6709\u7684\u5feb\u901f\u91c7\u6837\u65b9\u6cd5\u5305\u62ec\u66f4\u5feb\u7684\u6570\u503c ODE \u6c42\u89e3\u5668\u548c\u84b8\u998f\u6280\u672f\u3002\u7136\u800c ODE\u6c42\u89e3\u5668\u4ecd\u7136\u9700\u8981\u81f3\u5c1110\u4e2a\u6b65\u9aa4\u6765\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u6837\u672c\uff0c\u800c\u84b8\u998f\u6280\u672f\u4f9d\u8d56\u4e8e\u5728\u84b8\u998f\u4e4b\u524d\u4ece\u6269\u6563\u6a21\u578b\u4e2d\u6536\u96c6\u5927\u91cf\u6837\u672c\u6570\u636e\uff0c\u8fd9\u672c\u8eab\u5728\u8ba1\u7b97\u4e0a\u662f\u6602\u8d35\u7684\u3002\u53ea\u6709 progressive distillation \u7684\u65b9\u6cd5\u4e0d\u53d7\u5230\u8fd9\u4e2a\u7f3a\u9677\u7684\u7ea6\u675f\u3002</p>"},{"location":"read/Consistency%20Models/#consistency-models_1","title":"Consistency Models","text":""},{"location":"read/Consistency%20Models/#definition","title":"Definition","text":"<p>\u7ed9\u5b9a solution trajectory \\(\\{x_t\\}_{t\\in[0,T]}\\)\uff0c\u5b9a\u4e49 consistency function \\(f:(x_t,t) \\longmapsto x_\\epsilon\\)\uff0c\u4e00\u4e2a consistency function \u6709 self-consistency property </p> <p>Note</p> <p>\u5bf9\u4e8e\u4efb\u610f \\(t\\in[0,T]\\)\uff0c\\(f(x_t,t) = x_\\epsilon\\) \u5bf9\u4e8e \\((x_t,t)\\) \u5c5e\u4e8e\u540c\u4e00\u4e2a PF ODE trajectory \u662f\u6210\u7acb\u7684\u3002</p> <p></p> <p>The goal of consistency models , symbolized as \\(f_\\theta\\) , is to estimate this consistency function f from data by learning to enforce the self-consistency property </p>"},{"location":"read/Consistency%20Models/#parameterization","title":"Parameterization","text":"<p>\u5bf9\u4efb\u610f consistency function \\(f(\\cdot,\\cdot)\\)\uff0c\u6211\u4eec\u6709 \\(f(x_\\epsilon,\\epsilon) = x_\\epsilon\\)\uff0c\u5176\u4e2d \\(f(\\cdot,\\epsilon)\\) \u662f\u6052\u7b49\u51fd\u6570\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u7ea6\u675f\u79f0\u4e3a boundary condition. \u6240\u6709\u4e00\u81f4\u6027\u6a21\u578b\u90fd\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4e2a\u8fb9\u754c\u6761\u4ef6\uff0c\u56e0\u4e3a\u5b83\u5bf9\u4e8e\u4e00\u81f4\u6027\u6a21\u578b\u7684\u6210\u529f\u8bad\u7ec3\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u8fd9\u4e2a\u8fb9\u754c\u6761\u4ef6\u4e5f\u662f\u4e00\u81f4\u6027\u6a21\u578b\u6700\u4e25\u683c\u7684\u67b6\u6784\u7ea6\u675f\u3002\u5bf9\u57fa\u4e8e\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684 consistency model\uff0c\u672c\u6587\u8ba8\u8bba\u4e86\u4e24\u79cd\u51e0\u4e4e\u514d\u8d39\u5b9e\u73b0\u6b64\u8fb9\u754c\u6761\u4ef6\u7684\u65b9\u6cd5\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2a free-form \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc \\(F_\\theta(x,t)\\)\uff0c\u8f93\u51fa\u4e0e \\(x\\) \u5728\u540c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u7b80\u5355\u7684\u53c2\u6570\u5316\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a</p> \\[ f_{\\theta}(\\mathbf{x}, t) =  \\begin{cases}     \\mathbf{x} &amp; t = \\epsilon \\\\     F_{\\theta}(\\mathbf{x}, t) &amp; t \\in (\\epsilon, T] \\end{cases}. \\] <p>The second method is to parameterize the consistency model using skip connections, that is</p> \\[ f_{\\theta}(\\mathbf{x}, t) = c_{\\text{skip}}(t)\\mathbf{x} + c_{\\text{out}}(t)F_{\\theta}(\\mathbf{x}, t), \\] <p>\\(c_{\\text{skip}}(\\mathbf{x}, t)\\) \u548c \\(c_{\\text{out}}(t)\\) \u662f\u53ef\u5fae\u51fd\u6570\u6ee1\u8db3 \\(c_{\\text{skip}}(\\epsilon) = 1\\) \u548c \\(c_{\\text{out}}(\\epsilon) = 0\\)\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0b\uff0cconsistency model is differentiable at \\(t = \\epsilon\\),which is critical for training continuous-time consistency models.\u7b2c\u4e8c\u79cd\u53c2\u6570\u5316\u65b9\u6cd5\u4e0e\u8bb8\u591a\u6210\u529f\u7684\u751f\u6210\u6a21\u578b\u7c7b\u4f3c\uff0c\u4f7f\u5f97\u66f4\u5bb9\u6613\u501f\u7528\u5f3a\u5927\u7684\u6269\u6563\u6a21\u578b\u67b6\u6784\u6765\u6784\u5efa\u4e00\u81f4\u6027\u6a21\u578b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u6240\u6709\u5b9e\u9a8c\u4e2d\u90fd\u9075\u5faa\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5316\u3002</p>"},{"location":"read/Consistency%20Models/#sampling","title":"Sampling","text":"<p>\u5bf9\u4e00\u4e2a well-trained consistency model \\(f_\\theta(\\cdot,\\cdot)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u521d\u59cb\u5206\u5e03\\(\\hat{x_T}\\sim\\mathcal{N}(0,T^2I)\\)\u4e2d\u91c7\u6837\uff0c\u7136\u540e evaluating the consistency model for \\(\\hat{x_\\epsilon}=f_\\theta(\\hat{x_T},T)\\)\u3002\u8fd9\u91cc\u53ea\u5305\u542b\u4e86\u4e00\u6b21 forward pass\uff0c\u56e0\u6b64 generates samples in a single step.Importantly, one can also evaluate the consistency model multiple times by alternating denoising and noise injection steps for improved sample quality.\u8fd9\u79cd\u591a\u6b65\u91c7\u6837\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u4ee5\u8ba1\u7b97\u6362\u53d6\u6837\u672c\u8d28\u91cf\u7684\u7075\u6d3b\u6027\u3002\u5b83\u5728zero shot editing \u4e2d\u4e5f\u6709\u91cd\u8981\u7684\u5e94\u7528</p> <p>Note</p> <p>FID \u662f\u57fa\u4e8e\u5f17\u91cc\u6b47\u8ddd\u79bb\uff08Frechet Distance\uff09\u7684\u4e00\u79cd\u8ddd\u79bb\u5ea6\u91cf\uff0c\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u9ad8\u7ef4\u5206\u5e03\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u5728\u56fe\u50cf\u751f\u6210\u4efb\u52a1\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u5206\u5e03\u901a\u5e38\u662f\uff1a</p> <pre><code>\u2022   \u751f\u6210\u56fe\u50cf\u7684\u7279\u5f81\u5206\u5e03\uff08\u7531\u751f\u6210\u6a21\u578b\u751f\u6210\u7684\u6837\u672c\uff09\u3002\n\u2022   \u771f\u5b9e\u56fe\u50cf\u7684\u7279\u5f81\u5206\u5e03\uff08\u6765\u81ea\u771f\u5b9e\u6570\u636e\u96c6\u7684\u6837\u672c\uff09\u3002\n</code></pre> <p>\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u7528\u8d2a\u5fc3\u7b97\u6cd5\u627e\u5230\u65f6\u95f4\u70b9 \\(\\{\\mathcal{T}_1,\\mathcal{T}_2,\\cdots,\\mathcal{T}_{N-1}\\}\\)\uff0c\u5176\u4e2d\u4f7f\u7528\u4e09\u5143\u641c\u7d22(ternary search)\u4e00\u6b21\u7cbe\u786e\u5b9a\u4f4d\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4ee5\u4f18\u5316\u4ece\u7b97\u6cd5 1 \u83b7\u5f97\u7684\u6837\u672c\u7684 FID\u3002\u8fd9\u5047\u8bbe\u7ed9\u5b9a\u5148\u524d\u65f6\u95f4\u70b9\uff0cFID \u662f\u4e0b\u4e00\u4e2a\u65f6\u95f4\u70b9\u7684\u5355\u5cf0\u51fd\u6570\u3002</p> <p></p> <p>\u4e0a\u9762\u7b97\u6cd5\u5c31\u662f\u53cd\u590d\u53bb\u566a\u548c\u6ce8\u5165\u566a\u58f0\u7684\u8fc7\u7a0b\uff0c\u968f\u7740 n \u589e\u5927\uff0c\u52a0\u7684\u566a\u58f0\u8d8a\u5c0f</p>"},{"location":"read/Consistency%20Models/#zero-shot-data-editing","title":"Zero-Shot Data Editing","text":"<p>Consistency models \u4e5f\u53ef\u4ee5\u7528\u4e8e zero-shot data editing\uff0cthey do not require explicit training to perform these tasks,\u4f8b\u5982\uff0c\u4e00\u81f4\u6027\u6a21\u578b\u5b9a\u4e49\u4ece\u9ad8\u65af\u566a\u58f0\u5411\u91cf\u5230\u6570\u636e\u6837\u672c\u7684\u4e00\u5bf9\u4e00\u6620\u5c04\u3002</p>"},{"location":"read/Consistency%20Models/#training-consistency-models-via-distillation","title":"Training Consistency Models via Distillation","text":"<p>\u8fd9\u79cd\u65b9\u6cd5\u662f\u57fa\u4e8e pre-trained diffusion model, \u8003\u8651\u5c06\u65f6\u95f4\u8303\u56f4 \\([\\epsilon,T]\\) \u5212\u5206\u6210 N-1 \u4e2a\u5b57\u533a\u95f4\uff0c\u8fb9\u754c \\(t_1 = \\epsilon &lt; t_2 &lt; \\cdots &lt; t_N = T\\)\uff0c\u8fd9\u91cc\u5b9a\u4e49 boundary \u7684\u65b9\u5f0f\u9075\u5faa\u4e86 \u8fd9\u91cc\u7684 \u8bbe\u7f6e\u3002 \\(t_i = \\left( \\epsilon^{1/\\rho} + \\frac{i - 1}{N - 1} \\left( T^{1/\\rho} - \\epsilon^{1/\\rho} \\right) \\right)^{\\rho}\\) \u8fd9\u91cc \\(\\rho = 7\\)\u3002\u5f53 N \u5145\u5206\u5927\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u6570\u503c ODE solver \u7684\u4e00\u4e2a\u79bb\u6563\u5316\u6b65\u9aa4\u6765\u4ece \\(x_{t_{n+1}}\\) \u83b7\u5f97 \\(x_{t_n}\\) \u7684 accuracy estimate, \\(\\hat{x}^\\phi_{t_n}\\)\uff0c\u5176\u5b9a\u4e49\u662f</p> \\[ \\hat{x}^\\phi_{t_n}:= x_{t_{n+1}} + (t_{n} - t_{n+1})\\Phi(x_{t_{n+1}},t_{n+1};\\phi) \\] <p>\u5176\u4e2d \\(\\Phi(\\cdots;\\phi)\\)\u4ee3\u8868 update function of one-step ODE solver applied to the empirical PF ODE\u3002</p> <p>\u6bd4\u5982\u5728\u7528 Euler Solver \u65f6\uff0c\u76f8\u5e94\u7684 update rule \u53d8\u6210</p> \\[ \\hat{x}^\\phi_{t_n} = x_{t_{n+1}} - (t_{n} - t_{n+1})s_\\Phi(x_{t_{n+1}},t_{n+1}) \\] <p>\u7531\u4e8e PF ODE \u548c SDE \u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u91c7\u6837 \\(x\\sim p_{\\text{data}}\\) \u7136\u540e\u5c06\u9ad8\u65af\u566a\u58f0\u6dfb\u52a0\u5230 x \u6765\u6cbf ODE trajectory \u7684\u5206\u5e03\u8fdb\u884c\u91c7\u6837\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7ed9\u5b9a data point x, \u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u751f\u6210\u4e00\u5bf9\u5728 PF ODE \u8f68\u8ff9\u4e0a\u7684\u76f8\u90bb\u70b9 \\((\\hat{x}^\\phi_{t_n},x_{t_{n+1}})\\)\uff0c\u901a\u8fc7</p> <ul> <li>\u5728\u6570\u636e\u96c6\u4e2d\u91c7\u6837 x</li> <li>\u4ece the transition density of SDE \\(N(x,t^2_{n+1}I)\\) \u4e2d\u91c7\u6837 \\(x_{t_{n+1}}\\) </li> <li>\u901a\u8fc7\u4e0a\u9762\u7684 one discretization step of the numerical ODE solver \u751f\u6210 \\(\\hat{x}^\\phi_{t_n}\\)</li> </ul> <p>\u63a5\u7740\uff0c\u7528\u6a21\u578b\u5728\u8fd9\u4e2a pair \u4e0a\u8f93\u51fa\u7684 difference \u6765\u8bad\u7ec3 consistency model\u3002</p> <p>The consistency distillation loss is defined as</p> \\[ \\mathcal{L}_{CD}^N(\\theta, \\theta^- ; \\phi) := \\mathbb{E}\\left[ \\lambda(t_n) d\\left(f_{\\theta}(\\mathbf{x}_{t_{n+1}}, t_{n+1}), f_{\\theta^-}(\\hat{\\mathbf{x}}_{t_n}^{\\phi}, t_n)\\right) \\right], \\] <p>\u8fd9\u91cc\u7684\u671f\u671b\u662f\u5173\u4e8e \\(x\\sim p_{\\text{data}},n\\sim\\mathcal{U}[1,N-1],x_{t_{n+1}}\\sim\\mathcal{N}(x;t^2_{n+1}I)\\),\\(\\lambda(\\cdot)\\)\u662f\u4e00\u4e2a\u6b63\u6743\u91cd\u51fd\u6570\u3002\\(\\hat{\\mathbf{x}}_{t_n}^{\\phi}\\) \u662f\u7531\u524d\u9762\u7684 ODE solver \u751f\u6210\u7684\u3002\\(\\theta^-\\) \u8868\u793a\u4f18\u5316\u8fc7\u7a0b\u4e2d\u8fc7\u53bb \\(\\theta\\) \u503c\u7684\u8fd0\u884c\u5e73\u5747\u503c\uff0c\\(d(\\cdot,\\cdot)\\) \u662f\u5ea6\u91cf\u51fd\u6570\u6ee1\u8db3 \\(\\forall\\mathbf{x},\\mathbf{y}:d(\\mathbf{x},\\mathbf{y})\\geqslant0\\) and \\(d(x,y) = 0\\) if and only if \\(x=y\\)</p> \\[ \\theta^- \\leftarrow \\text{stopgrad}(\\mu\\theta^- + (1-\\mu)\\theta) \\] <p></p> <p>\u6839\u636e\u6df1\u5ea6\u5b66\u4e60\u7684\u60ef\u4f8b\uff0c\u6211\u4eec\u79f0 \\(f_{\\theta^-}\\) \u4e3a \"target network\"\uff0c \\(f_{\\theta}\\) \u4e3a \"Online network\",\u6211\u4eec\u53d1\u73b0\uff0c\u4e0e\u7b80\u5355\u8bbe\u7f6e \\(\\theta^- = \\theta\\) \u76f8\u6bd4,EMA \u66f4\u65b0\u548c\u201cstopgrad\u201d\u7b97\u5b50,\u53ef\u4ee5\u6781\u5927\u5730\u7a33\u5b9a\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u63d0\u9ad8\u4e00\u81f4\u6027\u6a21\u578b\u7684\u6700\u7ec8\u6027\u80fd</p> <p>Note</p> <p>\u5728\u673a\u5668\u5b66\u4e60\u6216\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0cstopgrad\uff08\u901a\u5e38\u8868\u793a \u201cstop gradient\u201d \u6216 \u201cdetach\u201d\uff09\u7528\u4e8e\u963b\u6b62\u68af\u5ea6\u7684\u53cd\u5411\u4f20\u64ad\u3002\u8fd9\u610f\u5473\u7740\u8ba1\u7b97\u56fe\u4e2d\u7684\u8fd9\u4e00\u90e8\u5206\u4e0d\u4f1a\u8ba1\u7b97\u6216\u4f20\u64ad\u68af\u5ea6\uff0c\u5373\u4f7f\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u53c2\u6570\u7684\u66f4\u65b0\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u66f4\u65b0\u76ee\u6807\u7f51\u7edc\u7684\u53c2\u6570\uff08\u4f8b\u5982\u5728\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u76ee\u6807\u7f51\u7edc\u66f4\u65b0\uff09\uff0c\u4ee5\u4f7f\u76ee\u6807\u7f51\u7edc\u7684\u53c2\u6570\u9010\u6b65\u8ffd\u968f\u4e3b\u7f51\u7edc\u7684\u53c2\u6570\uff0c\u800c\u4e0d\u5e72\u6270\u4e3b\u7f51\u7edc\u7684\u8bad\u7ec3\u3002</p> <p>\u5b66\u4e60\u4e00\u81f4\u6027\u51fd\u6570\u7684\u7406\u8bba\uff1a</p> <p>Let \\(\\Delta t := \\max_{n \\in \\llbracket 1, N-1 \\rrbracket} \\{ |t_{n+1} - t_n| \\}\\), and \\(\\mathbf{f}(\\cdot, \\cdot; \\phi)\\) be the consistency function of the empirical PF ODE in Eq. (3). Assume \\(\\mathbf{f}_{\\theta}\\) satisfies the Lipschitz condition: there exists \\(L &gt; 0\\) such that for all \\(t \\in [\\epsilon, T]\\), \\(\\mathbf{x}\\), and \\(\\mathbf{y}\\), we have \\(\\| \\mathbf{f}_{\\theta}(\\mathbf{x}, t) - \\mathbf{f}_{\\theta}(\\mathbf{y}, t) \\|_2 \\leq L \\| \\mathbf{x} - \\mathbf{y} \\|_2\\). Assume further that for all \\(n \\in \\llbracket 1, N-1 \\rrbracket\\), the ODE solver called at \\(t_{n+1}\\) has local error uniformly bounded by \\(O((t_{n+1} - t_n)^{p+1})\\) with \\(p \\geq 1\\). Then, if \\(\\mathcal{L}_{CD}^N(\\theta, \\theta^-; \\phi) = 0\\), we have</p> \\[ \\sup_{n, \\mathbf{x}} \\| \\mathbf{f}_{\\theta}(\\mathbf{x}, t_n) - \\mathbf{f}(\\mathbf{x}, t_n; \\phi) \\|_2 = O((\\Delta t)^p). \\] <p>\u8fd9\u4e2a\u5b9a\u7406\u8bf4\u660e\u4e86\u5982\u679c consistency model \u8fbe\u5230\u4e86 zero distillation loss\uff0c\u90a3\u4e48\u53ea\u8981 step size sufficiently small\uff0cconsistency model \u4efb\u610f\u7cbe\u786e\u3002</p>"},{"location":"read/Consistency%20Models/#training-consistency-models-in-isolation","title":"Training Consistency Models in Isolation","text":""},{"location":"read/Consistency%20Models/#cm-distillation","title":"CM Distillation","text":""},{"location":"read/SDE-diffusion/","title":"SCORE-BASED GENERATIVE MODELING THROUGH STOCHASTIC DIFFERENTIAL EQUATIONS","text":"<p> \u7ea6 73 \u4e2a\u5b57 </p> <p>pdf</p> <p>time-dependent gradient field a.k.a. score</p> <p>\u4e3a\u4e86\u542f\u7528\u65b0\u7684\u91c7\u6837\u65b9\u6cd5\u5e76\u8fdb\u4e00\u6b65\u6269\u5c55\u57fa\u4e8e\u5206\u6570\u7684\u751f\u6210\u6a21\u578b\u7684\u529f\u80fd\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u6846\u67b6\uff0c\u901a\u8fc7\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDE\uff09\u7684\u89c6\u89d2\u6982\u62ec\u4e86\u4ee5\u524d\u7684\u65b9\u6cd5\u3002</p>"},{"location":"read/SDE-diffusion/#_1","title":"SDE-Diffusion","text":""},{"location":"read/diffusion/","title":"Diffusion","text":"<p> \u7ea6 9864 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 33 \u5206\u949f</p>"},{"location":"read/diffusion/#latent","title":"Latent","text":"<p>base assumption: the data/knowledge we learned can be represented by a high/low-dimensional latent space. \u5c3d\u7ba1\u8fd9\u79cd\u53d8\u91cf\u4e0d\u80fd\u88ab\u76f4\u89c2\u7684\u89c2\u5bdf\u5230\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u63cf\u8ff0\u548c\u4ece\u4e2d\u63a8\u65ad\u3002</p> <p>\u5728\u5c1d\u8bd5\u5efa\u6a21 latent \u7684\u8fc7\u7a0b\u4e2d\uff0c\u5b58\u5728\u5efa\u6a21\u9ad8\u7ef4\u8fd8\u662f\u4f4e\u7ef4\u6570\u636e\u7684\u9009\u62e9\u3002\u5927\u591a\u6570\u504f\u5411\u5176\u662f\u4f4e\u7ef4\u7684\u5efa\u6a21\uff0c\u539f\u56e0\u662f\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u5f3a\u5927\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u8bd5\u56fe\u5b66\u4e60\u6bd4\u89c2\u5bdf\u66f4\u9ad8\u7ef4\u5ea6\u7684\u8868\u793a\u662f\u5f92\u52b3\u7684\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a\u4f4e\u7ef4\u6570\u636e\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u538b\u7f29\u7684\u8868\u793a\uff0c\u5e76\u4e14\u53ef\u4ee5\u6f5c\u5728\u5730\u63ed\u793a\u63cf\u8ff0\u89c2\u5bdf\u7ed3\u679c\u7684\u8bed\u4e49\u4e0a\u6709\u610f\u4e49\u7684\u7ed3\u6784\u3002</p>"},{"location":"read/diffusion/#elbo","title":"ELBO","text":"<p>ELBO means Evidence Lower Bound. It is a lower bound of the log likelihood of the data. It is used in variational inference to approximate the posterior distribution. \u5bf9 ELBO \u7684\u5408\u7406\u53c2\u6570\u5316\u548c\u4f18\u5316\u53ef\u4ee5\u903c\u8fd1\u5b9e\u9645\u7684\u540e\u9a8c\u5206\u5e03\u3002</p> <p>\u5f62\u5f0f\u4e0a\u5b9a\u4e49\u4e3a\uff1a</p> \\[ \\begin{aligned} \\text{ELBO}(\\theta, \\phi) = \\mathbb{E}_{q_{\\phi}(z|x)}[\\log \\frac{p_{\\theta}(x, z)}{q_{\\phi}(z|x)}] \\end{aligned} \\] <p>\u8fd9\u91cc\u7684 \\(p_{\\theta}(x, z)\\) \u662f latent variable \u4e0e data \u7684\u8054\u5408\u5206\u5e03\u3002 \\(q_{\\phi}(z|x)\\) \u662f flexible approximate variational distribution\uff0c\u7531 \\(\\phi\\) \u53c2\u6570\u5316\u4ee5\u5bfb\u6c42\u4f18\u5316\u3002</p> <p>ELBO \u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u53c2\u6570\u5316\u7684\u6a21\u578b\u53bb\u8bc4\u4f30\u5728\u7ed9\u5b9a observation \\(x\\) \u4e0b\u7684 latent variable \\(z\\) \u7684\u5206\u5e03\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u8bd5\u56fe\u903c\u8fd1\u771f\u5b9e\u7684\u540e\u9a8c \\(p(z|x)\\)\u3002\u5f53\u8fd9\u4e2a\u903c\u8fd1\u8db3\u591f\u597d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u83b7\u5f97\u4e86\u771f\u5b9e\u6570\u636e\u7684\u5206\u5e03\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u505a\u5404\u79cd\u63a8\u7406\u6765\u751f\u6210\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u4ece\u6570\u5b66\u89d2\u5ea6\u6765\u8bf4\u660e\u4e3a\u4ec0\u4e48 ELBO \u662f\u4e00\u4e2a\u5408\u9002\u7684\u4f18\u5316\u5bf9\u8c61\u3002</p> \\[ \\begin{aligned} \\log p(x) &amp;= \\log \\int p(x, z) dz \\\\ &amp;= \\log \\int q_\\phi(z|x) \\frac{p(x, z)}{q_\\phi(z|x)} dz \\\\ &amp;= \\log \\mathbb{E}_{q_\\phi(z|x)} \\left[ \\frac{p(x, z)}{q_\\phi(z|x)} \\right] \\\\ &amp;\\geq \\mathbb{E}_{q_\\phi(z|x)} \\left[ \\log \\frac{p(x, z)}{q_\\phi(z|x)} \\right] \\\\ \\end{aligned} \\] <p>\u6700\u540e\u4e00\u6b65\u662f\u7531 Jensen \u4e0d\u7b49\u5f0f\u5f97\u5230\u7684\u3002\u8fd9\u91cc\u7684 \\(\\mathbb{E}_{q_\\phi(z|x)} \\left[ \\log \\frac{p(x, z)}{q_\\phi(z|x)} \\right]\\) \u5c31\u662f ELBO\u3002</p> <p>Note</p> <p>\u968f\u673a\u53d8\u91cf\\(Z\\) \u5728\u5206\u5e03 \\(q(z)\\) \u4e0b\u7684\u671f\u671b\u8868\u793a\u4e3a \\(E_{q(z)}[f(Z)]=\\int f(Z)q(z) dz\\)</p> <p>\u4f46\u662f\u901a\u8fc7 Jensen \u4e0d\u7b49\u5f0f\u53ea\u662f\u8bf4\u660e\u4e86 ELBO \u662f\u4e00\u4e2a\u4e0b\u754c\uff0c\u4f46\u662f\u6ca1\u6709\u8bf4\u660e\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u4e0b\u754c\u53ef\u4ee5\u8fbe\u5230\uff0c\u9002\u5408\u53bb\u4f18\u5316\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 KL \u6563\u5ea6\u6765\u8bc1\u660e\u8fd9\u4e00\u70b9\u3002</p> <p>Note</p> <p>KL \u6563\u5ea6\u662f\u4e24\u4e2a\u5206\u5e03\u4e4b\u95f4\u7684\u5dee\u5f02\u5ea6\u91cf\u3002\u5bf9\u4e8e\u4e24\u4e2a\u5206\u5e03 \\(p(x)\\) \u548c \\(q(x)\\)\uff0cKL \u6563\u5ea6\u5b9a\u4e49\u4e3a\uff1a $$ D_\\text{KL}(p||q) = \\int p(x) \\log \\frac{p(x)}{q(x)} dx = E_{p(x)}[\\log \\frac{p(x)}{q(x)}] $$</p> \\[ \\begin{aligned} \\log p(x) &amp;= \\log p(x) \\int q_\\phi(z|x) dz \\\\ &amp;= \\int q_\\phi(z|x) \\log p(x) dz \\\\ &amp;= \\mathbb{E}_{q_\\phi(z|x)}[\\log p(x)] \\\\ &amp;= \\mathbb{E}_{q_\\phi(z|x)}[\\log \\frac{p(x, z)}{p(z|x)}] \\\\ &amp;= \\mathbb{E}_{q_\\phi(z|x)}[\\log \\frac{p(x, z)}{q_\\phi(z|x)}] + \\mathbb{E}_{q_\\phi(z|x)}[\\log \\frac{q_\\phi(z|x)}{p(z|x)}] \\\\ &amp;= \\mathbb{E}_{q_\\phi(z|x)}[\\log \\frac{p(x, z)}{q_\\phi(z|x)}] + D_\\text{KL}(q_\\phi(z|x) || p(z|x)) \\\\ &amp;= \\text{ELBO}(\\theta, \\phi) + D_\\text{KL}(q_\\phi(z|x) || p(z|x))\\\\ &amp;\\geq \\text{ELBO}(\\theta, \\phi) \\end{aligned} \\] <p>\u5728\u4e0a\u9762\u7684\u63a8\u5bfc\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230 KL \u6563\u5ea6\u5c31\u662f evidence \u4e0e ELBO \u7684\u5dee\u503c\uff0c\u8fd9\u8bf4\u660e ELBO \u786e\u5b9e\u662f\u4e00\u4e2a\u4e0b\u754c</p> <p></p> <p>\u8fd9\u91cc\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u7684\u662f\u771f\u5b9e\u7684\u5206\u5e03 \\(p(z|x)\\)\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e2a\u5206\u5e03\u662f\u4e0d\u53ef\u89e3\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7 \\(q_\\phi(z|x)\\)\u6765\u8fd1\u4f3c\u771f\u5b9e\u5206\u5e03\uff0c\u8fd9\u901a\u8fc7\u6700\u5c0f\u5316 KL \u6563\u5ea6\u6765\u5b9e\u73b0\uff0c\u4f46\u5f88\u96be\u76f4\u63a5\u53bb\u505a\u6700\u5c0f\u5316\u3002\u540c\u65f6\u6ce8\u610f\u5230\u7684\u662f\u6211\u4eec\u7684\u8bc1\u636e\u5373\u5bf9\u6570\u4f3c\u7136\u662f\u4e00\u4e2a\u4e0e \\(\\phi\\) \u65e0\u5173\u7684\u5e38\u6570\uff0c\u6240\u4ee5\u901a\u8fc7\\(\\phi\\)\u7684\u6700\u5927\u5316 ELBO \u53ef\u4ee5\u8d77\u5230\u540c\u6837\u7684\u6548\u679c\u3002\u800c\u5f53 ELBO \u8db3\u591f\u5927\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba4\u4e3a \\(q_\\phi(z|x)\\) \u903c\u8fd1\u4e86\u771f\u5b9e\u7684\u5206\u5e03 \\(p(z|x)\\)\u3002\u90a3\u4e48\u4e00\u65e6\u5f97\u5230\u4e86\u8fd9\u4e2a\u5206\u5e03\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u4e2d\u505a\u63a8\u65ad\uff0c\u901a\u8fc7\u89e3\u7801\u5668 \\(p_\\theta(x|z)\\) \u6765\u751f\u6210\u6570\u636e\u3002</p>"},{"location":"read/diffusion/#variational-autoencoder-vae","title":"Variational Autoencoder (VAE)","text":"<p>\u5728 default formulation of VAE, \u6211\u4eec\u76f4\u63a5\u6700\u5927\u5316 ELBO. + variational\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u7531 \\(\\phi\\) \u53c2\u6570\u5316\u7684\u4e00\u7cfb\u5217\u6f5c\u5728\u540e\u9a8c\u5206\u5e03\u4e2d\u5bfb\u627e\u6700\u4f18\u7684\u53c2\u6570 \\(\\phi\\) \u6765\u4f18\u5316 \\(q_\\phi(z|x)\\)\u3002 + autoencoder\uff0c\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u5728\u7ecf\u5386\u4e2d\u95f4\u74f6\u9888\u8868\u793a\u6b65\u9aa4\u540e\u88ab\u8bad\u7ec3\u4ee5\u9884\u6d4b\u81ea\u8eab</p> <p>\u4e0b\u9762\u6765\u8fdb\u4e00\u6b65\u5206\u6790 ELBO\uff1a</p> \\[ \\begin{aligned} \\text{ELBO}(\\theta, \\phi) &amp;= \\mathbb{E}_{q_{\\phi}(z|x)}[\\log \\frac{p_{\\theta}(x, z)}{q_{\\phi}(z|x)}] \\\\ &amp;= \\mathbb{E}_{q_{\\phi}(z|x)}[\\log p_{\\theta}(x|z)] + \\mathbb{E}_{q_{\\phi}(z|x)}[\\log \\frac{p_{\\theta}(z)}{q_{\\phi}(z|x)}] \\\\ &amp;= \\mathbb{E}_{q_{\\phi}(z|x)}[\\log p_{\\theta}(x|z)] - D_\\text{KL}(q_{\\phi}(z|x) || p_{\\theta}(z)) \\end{aligned} \\] <p>\u5728\u8fd9\u91cc\uff0c\\(q_\\phi(z|x)\\) \u88ab\u89c6\u4f5c encoder\uff0c\\(p_\\theta(x|z)\\) \u88ab\u89c6\u4f5c decoder\u3002</p> <p>the first term measures the reconstruction likelihood of the decoder from our variational distribution; this ensures that the learned distribution is modeling effective latents that the original data can be regenerated from. \u7b2c\u4e00\u9879\u8861\u91cf\u7684\u662f\u53d8\u5206\u5206\u5e03\u6d4b\u91cf\u89e3\u7801\u5668\u7684\u91cd\u5efa\u53ef\u80fd\u6027\u3002\u8fd9\u786e\u4fdd\u4e86\u5b66\u5230\u7684\u5206\u5e03\u662f\u5728\u5efa\u6a21\u6709\u6548\u7684\u6f5c\u5728\u53d8\u91cf\uff0c\u539f\u59cb\u6570\u636e\u53ef\u4ee5\u4ece\u4e2d\u518d\u751f\u3002 The second term measures how similar the learned variational distribution is to a prior belief held over latent variables. \u7b2c\u4e8c\u9879\u8861\u91cf\u7684\u662f\u5b66\u5230\u7684\u5206\u5e03\u4e0e\u5b9e\u9645\u7684\u5206\u5e03\uff08prior belief\uff09\u7684\u76f8\u4f3c\u7a0b\u5ea6</p> <p>\u4ece\u516c\u5f0f\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6700\u5927\u5316 ELBO \u7684\u8fc7\u7a0b\u5c31\u662f\u5728\u6700\u5927\u5316\u91cd\u5efa\u6982\u7387\u548c\u6700\u5c0f\u5316 KL \u6563\u5ea6\u3002</p> <p>VAE \u7684\u4e00\u4e2a\u51b3\u5b9a\u6027\u7279\u5f81\u662f\u5982\u4f55\u5bf9\u53c2\u6570 \\(\\phi\\) \u548c \\(\\theta\\) \u8054\u5408\u4f18\u5316 ELBO\u3002\u6709\u4ee5\u4e0b\u7684\u5b9a\u4e49\uff1a</p> \\[ \\begin{aligned} q_\\phi(z|x) &amp;= \\mathcal{N}(z; \\mu_\\phi(x), \\sigma^2_\\phi(x)I) \\\\ p(z) &amp;= \\mathcal{N}(z; 0, I) \\\\ \\end{aligned} \\] <p>\u6709\u4e86\u8fd9\u4e24\u4e2a\u5b9a\u4e49\uff0cKL \u6563\u5ea6\u9879\u5c31\u53ef\u4ee5\u8ba1\u7b97\u4e86\uff0c\u91cd\u5efa\u9879\u53ef\u4ee5\u7528\u8499\u7279\u5361\u6d1b\u6d4b\u91cf\u6765\u4f30\u8ba1\u3002\u6211\u4eec\u7684\u76ee\u6807\u53ef\u4ee5\u91cd\u5199\u4e3a\uff1a</p> \\[ \\begin{aligned} &amp; \\argmax_{\\phi,\\theta} \\mathbb{E}_{q_{\\phi}(z|x)}[\\log p_{\\theta}(x|z)] - D_\\text{KL}(q_{\\phi}(z|x) || p_{\\theta}(z)) \\\\ \\approx &amp; \\argmax_{\\phi,\\theta} \\frac{1}{L} \\sum_{l=1}^L \\log p_{\\theta}(x|z^{(l)}) - D_\\text{KL}(q_{\\phi}(z|x) || p_{\\theta}(z)) \\end{aligned} \\] <p>\u8fd9\u91cc\u7684 \\(z^{(l)}\\) \u662f\u4ece \\(q_\\phi(z|x)\\) \u4e2d\u91c7\u6837\u5f97\u5230\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a obserbation \\(x\\) \u90fd\u4f1a\u91c7\u6837 \\(L\\) \u4e2a \\(z\\)\u3002\u7136\u800c\u8fd9\u6837\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u5e26\u6765\u95ee\u9898\uff1a\u8ba1\u7b97\u635f\u5931\u7684\u6bcf\u4e2a z(l) \u90fd\u662f\u7531\u968f\u673a\u91c7\u6837\u8fc7\u7a0b\u751f\u6210\u7684\uff0c\u8be5\u8fc7\u7a0b\u901a\u5e38\u662f\u4e0d\u53ef\u5fae\u5206\u7684\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u91cd\u53c2\u6570\u5316\u6280\u5de7\u5f53 \\(q_\\phi(z|x)\\) \u88ab\u8bbe\u8ba1\u4e3a\u5bf9\u67d0\u4e9b\u5206\u5e03\u5efa\u6a21\u65f6\u3002</p> <p>Note</p> <p>\u8fd9\u4e2a\u91cd\u53c2\u6570\u65b9\u6cd5\u662f\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u989d\u5916\u7684\u566a\u58f0\u9879 \\(\\epsilon\\) \u6765\u5b9e\u73b0\u7684\uff0c\u5c06\u968f\u673a\u53d8\u91cf\u8f6c\u5316\u4e3a\u566a\u58f0\u7684\u786e\u5b9a\u51fd\u6570\uff0c\u8fd9\u5c31\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u6765\u4f18\u5316\u975e\u968f\u673a\u9879\u3002\u4f8b\u5982\u4ece\u6b63\u6001\u5206\u5e03 \\(x \\sim \\mathcal{N}(\\mu, \\sigma^2)\\) \u4e2d\u91c7\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \\(x = \\mu + \\sigma \\epsilon\\) \u6765\u5b9e\u73b0\uff0c\u5176\u4e2d \\(\\epsilon \\sim \\mathcal{N}(0, 1)\\)\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u91cd\u65b0\u53c2\u6570\u5316\u6280\u5de7\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ece\u6807\u51c6\u9ad8\u65af\u5206\u5e03\u91c7\u6837\u3001\u6309\u76ee\u6807\u6807\u51c6\u5dee\u7f29\u653e\u7ed3\u679c\u5e76\u6309\u76ee\u6807\u5747\u503c\u5e73\u79fb\u7ed3\u679c\u6765\u6267\u884c\u4efb\u610f\u9ad8\u65af\u5206\u5e03\u7684\u91c7\u6837\u3002</p> <p>\u5728 VAE \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6765\u91cd\u53c2\u6570\u5316\uff1a\u8fd9\u91cc \\(z\\) \u88ab\u5b9a\u4e49\u4e3a\u8f93\u5165 \\(x\\) \u548c\u8f85\u52a9\u566a\u58f0\u53d8\u91cf \\(\\epsilon\\)\u7684\u786e\u5b9a\u6027\u51fd\u6570\u3002</p> \\[ \\begin{aligned} z &amp;= \\mu_\\phi(x) + \\sigma_\\phi(x) \\odot \\epsilon \\\\ \\epsilon &amp;\\sim \\mathcal{N}(0, I) \\end{aligned} \\] <p>\u8fd9\u91cc \\(\\odot\\) \u8868\u793a\u9010\u5143\u7d20\u4e58\u6cd5\u3002\u5728\u8fd9\u4e2a\u8868\u793a\u4e0b\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8ba1\u7b97\u68af\u5ea6\u6765\u4f18\u5316 \\(\\mu\\) \u548c \\(\\theta\\)\u3002</p> <p>\u5728\u8bad\u7ec3\u4e86 VAE \u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u6f5c\u5728\u7a7a\u95f4\u4e2d\u91c7\u6837 \\(z\\) \u5e76\u901a\u8fc7\u89e3\u7801\u5668 \\(p_\\theta(x|z)\\) \u6765\u751f\u6210\u65b0\u7684\u6570\u636e\u3002\u5f53 latent space \u7684\u7ef4\u5ea6\u8f83\u4f4e\u65f6\uff0c\u53ef\u80fd\u4f1a\u5230\u5b66\u4e60\u7d27\u51d1\u3001\u6709\u7528\u7684\u8868\u793a\u3002\u6b64\u5916\uff0c\u5f53\u5b66\u4e60\u5230\u8bed\u4e49\u4e0a\u6709\u610f\u4e49\u7684\u6f5c\u5728\u7a7a\u95f4\u65f6\uff0c\u53ef\u4ee5\u5728\u5c06\u6f5c\u5728\u5411\u91cf\u4f20\u9012\u5230\u89e3\u7801\u5668\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u7f16\u8f91\uff0c\u4ee5\u66f4\u7cbe\u786e\u5730\u63a7\u5236\u751f\u6210\u7684\u6570\u636e\u3002</p>"},{"location":"read/diffusion/#hierarchical-vae","title":"Hierarchical VAE","text":"<p>Hierarchical VAE \u662f VAE \u7684\u4e00\u79cd\u6269\u5c55\uff0c\u5b83\u901a\u8fc7\u5728\u6f5c\u5728\u7a7a\u95f4\u4e2d\u5f15\u5165\u591a\u4e2a\u5c42\u6b21\u7684\u7ed3\u6784\u6765\u63d0\u9ad8\u5efa\u6a21\u80fd\u529b\u3002\u5728\u8fd9\u79cd\u7ed3\u6784\u4e2d\uff0c\u6bcf\u4e2a\u5c42\u6b21\u7684\u6f5c\u5728\u53d8\u91cf\u90fd\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5bf9\u6570\u636e\u7684\u4e0d\u540c\u62bd\u8c61\u7ea7\u522b\u7684\u8868\u793a\uff0c\u4ece\u800c\u5141\u8bb8\u6a21\u578b\u5b66\u4e60\u66f4\u590d\u6742\u7684\u6570\u636e\u5206\u5e03\u3002\u5c3d\u7ba1\u5bf9\u4e00\u822c\u7684 HVAE \u6765\u8bf4\uff0c\u6bcf\u4e2a latent variable \u90fd\u53ef\u4ee5\u4ee5\u5148\u524d\u6240\u6709\u7684 latent variable \u4e3a\u6761\u4ef6\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8003\u8651\u7279\u6b8a\u60c5\u51b5\u2014\u2014\u9a6c\u5c14\u53ef\u592b VAE\uff08 Markovian HVAE (MHVAE)\uff09\u3002\u8fd9\u8bf4\u660e\u6bcf\u4e2a latent variable \u53ea\u4f9d\u8d56\u4e8e\u524d\u4e00\u4e2a latent variable\u3002\u76f4\u89c2\u6765\u8bf4\u5c31\u662f\u53e0\u5f88\u591a\u5c42\u7684 VAE\uff0c\u6bcf\u4e00\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u7684\u8f93\u5165\u3002</p> <p></p> <p>\u6570\u5b66\u4e0a\uff0cMHVAE \u7684\u8868\u793a\u4e3a\uff1a</p> \\[   \\begin{aligned} p(x,z_{1:T}) &amp;= p(z_T)p_\\theta(x|z_1) \\prod_{t=2}^T p(z_{t-1}|z_{t}) \\\\ q_\\phi(z_{1:T}|x) &amp;= q_\\phi(z_1|x) \\prod_{t=2}^T q_\\phi(z_t|z_{t-1}) \\end{aligned} \\] <p>\u6211\u4eec\u53ef\u4ee5\u5c06 ELBO \u63a8\u5e7f\u4e3a\uff1a</p> \\[ \\begin{aligned} \\text{ELBO}(\\theta, \\phi) &amp;= \\log \\mathbb{E}_{q_{\\phi}(z_{1:T}|x)}[\\frac{p_{\\theta}(x, z_{1:T})}{q_{\\phi}(z_{1:T}|x)}] \\\\ &amp;\\geq \\mathbb{E}_{q_{\\phi}(z_{1:T}|x)}[\\log \\frac{p_{\\theta}(x, z_{1:T})}{q_{\\phi}(z_{1:T}|x)}] \\end{aligned} \\] <p>\u7136\u540e\u628a\u4e0a\u9762\u7684\u5b9a\u4e49\u5e26\u5165\u5230 ELBO \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\mathbb{E}_{q_{\\phi}(z_{1:T}|x)}[\\log \\frac{p_{\\theta}(x, z_{1:T})}{q_{\\phi}(z_{1:T}|x)}] = \\mathbb{E}_{q_{\\phi}(z_{1:T}|x)}\\left[\\log\\frac{p(z_T)p_\\theta{x|z_1}\\prod_{t=2}^Tp_\\theta(z_{t-1}|z_t)}{q_\\phi(z_1|x)\\prod_{t=2}^Tq_\\phi(z_t|z_{t-1})}\\right] \\] <p>\u5f53\u6211\u4eec\u7814\u7a76\u53d8\u5206\u6269\u6563\u6a21\u578b\u65f6\uff0c\u8fd9\u4e2a\u76ee\u6807\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u89e3\u4e3a\u53ef\u89e3\u91ca\u7684\u7ec4\u4ef6\u3002</p>"},{"location":"read/diffusion/#variational-diffusion-models","title":"Variational Diffusion Models","text":"<p>\u4e00\u79cd\u6700\u7b80\u5355\u770b\u5f85 Variational Diffusion Models(VDM) \u7684\u65b9\u5f0f\u662f\u5c06\u5176\u770b\u4f5c\u6709\u4e09\u4e2a\u5173\u952e\u7ea6\u675f\u7684 MHVAE\u3002\u8fd9\u4e09\u4e2a\u7ea6\u675f\u662f\uff1a</p> <ul> <li>The latent dimension is exactly equal to the data dimension</li> <li>The structure of the latent encoder at each timestep is not learned; it is pre-defined as a linear Gaussian model. In other words, it is a Gaussian distribution centered around the output of the previous timestep</li> <li>The Gaussian parameters of the latent encoders vary over time in such a way that the distribution of the latent at final timestep T is a standard Gaussian</li> </ul> <p></p> <p>\u6211\u4eec\u7528 \\(x_t\\) \u8868\u793a\u771f\u5b9e\u6570\u636e\u91c7\u6837\u548c\u6f5c\u5728\u53d8\u91cf\uff0c\\(t_0\\) \u8868\u793a true data sample\uff0c\\(t\\in[1,T]\\) \u8868\u793a\u76f8\u5e94\u7684 latent\u3002VDM \u7684\u5148\u9a8c\u4e0e HMVAE \u76f8\u540c\uff0c\u6839\u636e\u4e0a\u9762\u7684\u5b9a\u4e49\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ \\begin{aligned} q(x_{1:T}|x_0) = \\prod_{t=1}^T q(x_t|x_{t-1}) \\end{aligned} \\] <p>\u6839\u636e\u7b2c\u4e8c\u4e2a\u5047\u8bbe\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u4e2a latent variable \u5206\u5e03\u662f\u4ee5\u5176\u5148\u524d\u7684\u5206\u5c42 latent variable \u4e3a\u4e2d\u5fc3\uff08\u671f\u671b\u662f latent variable\uff09\u7684\u9ad8\u65af\u5206\u5e03\u3002\u6bcf\u4e00\u6b65\u7684 encoder\uff08\u52a0\u566a\u8fc7\u7a0b\uff09\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u5747\u503c\u548c\u6807\u51c6\u5dee\u53ef\u4ee5\u662f\u9884\u5148\u5b9a\u4e49\u7684\u8d85\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u88ab\u5b66\u4e60\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6570\u5b66\u8868\u793a\u662f\uff1a</p> \\[ \\begin{aligned} \\mu_t(x_t) = \\sqrt{\\alpha_t}x_{t-1}\\\\ \\Sigma_t(x_t) = \\sqrt{1-\\alpha_t}I \\end{aligned} \\] <p>\u8fd9\u4e2a\u8bbe\u8ba1\u4fdd\u8bc1\u65b9\u5dee\u4fdd\u6301\u5728\u76f8\u4f3c\u7684\u8303\u56f4\u5185\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f variance-preserving.\uff08\u5229\u7528\u53c2\u6570\u63a7\u5236\uff09</p> <p>\u8fd9\u91cc\u7684\u91cd\u70b9\u662f \\(\\alpha_t\\) \u53ef\u80fd\u662f\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u968f\u7740\u65f6\u95f4\u6b65\u7684\u589e\u5927\u800c\u53d8\u5316\u3002</p> <p>\u56e0\u6b64\uff0c\u6570\u5b66\u4e0a\u53ef\u4ee5\u8868\u793a\u4e3a</p> \\[ q(x_t|x_{t-1})=\\mathcal{N}(x_t;\\sqrt{\\alpha_t}x_{t-1},(1-\\alpha_t)I) \\] <p>\u4ece\u7b2c\u4e09\u4e2a\u5047\u8bbe\u4e2d\u53ef\u4ee5\u77e5\u9053\uff0c\u52a0\u566a\u8fc7\u7a0b\u7684\u6700\u7ec8\u7ed3\u679c\u662f\u5c06 latent \u53d8\u4e3a\u9ad8\u65af\u566a\u58f0\u3002\u90a3\u4e48 VDM \u7684\u8054\u5408\u5206\u5e03\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ p(x_{0:T}) = p(x_T)\\prod_{t=1}^T p_\\theta(x_{t-1}|x_t) \\] <p>\u5176\u4e2d \\(p(x_T) = \\mathcal{N}(X_T;0,I)\\)</p> <p>\u8fd9\u7ec4\u5047\u8bbe\u63cf\u8ff0\u7684\u662f\u56fe\u50cf\u8f93\u5165\u968f\u65f6\u95f4\u7684\u7a33\u5b9a\u566a\u58f0\uff1b\u6211\u4eec\u901a\u8fc7\u6dfb\u52a0\u9ad8\u65af\u566a\u58f0\u9010\u6e10\u7834\u574f\u56fe\u50cf\uff0c\u76f4\u5230\u6700\u7ec8\u5b83\u53d8\u5f97\u4e0e\u7eaf\u9ad8\u65af\u566a\u58f0\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u6ce8\u610f\u5230\u6211\u4eec\u7684 encoder \u4e0d\u518d\u901a\u8fc7 \\(\\phi\\) \u53c2\u6570\u5316\uff0c\u800c\u662f\u5b8c\u5168\u7531\u5728\u6bcf\u4e00\u65f6\u95f4\u6b65\u7684\u6709\u9884\u5b9a\u4e49\u7684\u5747\u503c\u4e0e\u65b9\u5dee\u7684\u9ad8\u65af\u5206\u5e03\u5efa\u6a21\u3002\u56e0\u6b64\uff0c\u5728 VDM \u4e2d\uff0c\u6211\u4eec\u53ea\u5173\u6ce8\u53bb\u566a\u8fc7\u7a0b\uff0c\u5373 \\(p_\\theta(x_{t-1}|x_t)\\) \u5728\u4f18\u5316 VDM \u540e\uff0c\u91c7\u6837\u8fc7\u7a0b\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u53ea\u9700\u8981\u8fed\u4ee3\u8fd0\u884c T \u4e2a\u6b65\u9aa4\u7684\u53bb\u566a\u8f6c\u6362\u5373\u53ef\u3002\u4e0e\u4efb\u4f55\u7684 HVAE \u4e00\u6837\uff0cVDM \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6700\u5927\u5316 ELBO \u8fdb\u884c\u4f18\u5316\u3002</p> \\[ \\begin{aligned} \\log p(x) &amp;\\geq \\mathbb{E}_{q(x_{1:T}|x_0)}[\\log \\frac{p(x_{0:T})}{q(x_{1:T}|x_0)}]\\\\ &amp;= \\mathbb{E}_{q(x_{1:T}|x_0)}[\\log\\frac{p(x_T)\\prod_{t=1}^Tp_\\theta(x_{t-1}|x_t)}{\\prod_{t=1}^Tq(x_t|x_{t-1})}]\\\\ &amp;= \\mathbb{E}_{q(x_{1:T}|x_0)}[\\log\\frac{p(x_T)p_\\theta(x_0|x_1)\\prod_{t=1}^{T-1}p_\\theta(x_{t}|x_{t+1})}{q(x_T|x_{T-1})\\prod_{t=1}^{T-1}q(x_t|x_{t-1})}]\\\\ &amp;= \\mathbb{E}_{q(x_{1:T}|x_0)}[\\log\\frac{p(x_T)p_\\theta(x_0|x_1)}{q(x_T|x_{T-1})}] + \\mathbb{E}_{q(x_{1:T}|x_0)}[\\sum_{t=1}^{T-1}\\log\\frac{p_\\theta(x_{t}|x_{t+1})}{q(x_t|x_{t-1})}]\\\\ &amp;= \\mathbb{E}_{q(x_{1:T}|x_0)}[\\log p_\\theta(x_0|x_1)]+\\mathbb{E}_{q(x_{1:T}|x_0)}[\\log\\frac{p(x_T)}{q(x_T|x_{T-1})}] + \\sum_{t=1}^{T-1}\\mathbb{E}_{q(x_{1:T}|x_0)}[\\log\\frac{p_\\theta(x_{t}|x_{t+1})}{q(x_t|x_{t-1})}]\\\\ &amp;= \\mathbb{E}_{q(x_{1}|x_0)}[\\log p_\\theta(x_0|x_1)]+\\mathbb{E}_{q(x_{T-1},x_T|x_0)}[\\log\\frac{p(x_T)}{q(x_T|x_{T-1})}] + \\sum_{t=1}^{T-1}\\mathbb{E}_{q(x_{t-1},x_{t},x_{t+1}|x_0)}[\\log\\frac{p_\\theta(x_{t}|x_{t+1})}{q(x_t|x_{t-1})}]\\\\ &amp;= \\mathbb{E}_{q(x_{1}|x_0)}[\\log p_\\theta(x_0|x_1)] - \\mathbb{E}_{q(x_{T-1}|x_0)}[D_{KL}(q(x_T|x_{T-1})||p(x_T))] \\\\ &amp; - \\sum_{t=1}^{T-1}\\mathbb{E}_{q(x_{t-1},x_{t+1}|x_0)}[D_{KL}(q(x_t|x_{t-1})||p_\\theta(x_{t}|x_{t+1})]] \\end{aligned} \\] <p>\u8fd9\u91cc\u7684\u7b2c\u4e00\u9879\u662f\u91cd\u5efa\u9879\uff0c\u4e0e\u4e4b\u524d\u7c7b\u4f3c\u3002 \u7b2c\u4e8c\u9879\u662f\u5148\u9a8c\u5339\u914d\u9879\uff0c\u5f53\u6700\u7ec8\u7684\u6f5c\u5728\u5206\u5e03\u4e0e\u9ad8\u65af\u5148\u9a8c\u5339\u914d\u65f6\uff0c\u5b83\u4f1a\u88ab\u6700\u5c0f\u5316\u3002\u8be5\u9879\u4e0d\u9700\u8981\u4f18\u5316\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u53ef\u8bad\u7ec3\u7684\u53c2\u6570\uff1b\u6b64\u5916\uff0c\u7531\u4e8e\u6211\u4eec\u5047\u8bbe T \u8db3\u591f\u5927\uff0c\u4f7f\u5f97\u6700\u7ec8\u5206\u5e03\u5448\u9ad8\u65af\u5206\u5e03\uff0c\u56e0\u6b64\u8be5\u9879\u5b9e\u9645\u4e0a\u53d8\u4e3a\u96f6\u3002 \u7b2c\u4e09\u9879\u662f\u4e00\u81f4\u6027\u9879\u3002\u5b83\u52aa\u529b\u4f7f\u5f97 \\(x_t\\) \u7684\u5206\u5e03\u5728\u524d\u5411\u548c\u540e\u5411\u7684\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002</p> <p></p> <p>\u7531\u4e8e\u6211\u4eec\u5fc5\u987b\u5728\u6240\u6709\u7684 timestep \u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u4f18\u5316 VDM \u7684\u6210\u672c\u4e3b\u8981\u7531\u7b2c\u4e09\u9879\u51b3\u5b9a\u3002</p> <p>\u7136\u800c\uff0c\u8fd9\u6837\u5f97\u5230\u7684 ELBO \u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u4e00\u81f4\u6027\u9879\u7684\u8ba1\u7b97\u662f\u901a\u8fc7\u4e24\u4e2a\u968f\u673a\u53d8\u91cf \\(x_{t-1},x_{t+1}\\) \u6765\u8ba1\u7b97\u7684\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u65b9\u5dee\u53ef\u80fd\u6bd4\u53ea\u7528\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u8ba1\u7b97\u7684\u65b9\u5dee\u8981\u5927\u3002\u5728\u7d2f\u79ef\u4e86 \\(T-1\\) \u4e2a\u65f6\u95f4\u6b65\u4ee5\u540e\uff0c\u5f97\u5230\u7684\u65b9\u5dee\u53ef\u80fd\u4f1a\u5f88\u5927\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u989d\u5916\u7684\u7ea6\u675f\u6765\u51cf\u5c0f\u8fd9\u4e2a\u65b9\u5dee\u3002\\(q(x_t|x_{t-1})=q(x_t|x_{t-1},x_0)\\)\uff0c\u7531\u4e8e\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u989d\u5916\u7684\u6761\u4ef6\u9879\u662f\u591a\u4f59\u7684\uff0c\u90a3\u4e48\u6839\u636e\u8d1d\u53f6\u65af\u6cd5\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\begin{aligned} q(x_t|x_{t-1},x_0) &amp;= \\frac{q(x_{t-1}|x_t,x_0)q(x_t|x_0)}{q(x_{t-1},x_0)} \\end{aligned} \\] <p>\u6709\u4e86\u8fd9\u4e2a\u65b0\u7684\u7ea6\u675f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u597d\u7684 ELBO\uff1a\u8fd9\u4e2d\u95f4\u6dfb\u52a0\u7684 \\(q(x_{t-1}|x_t,x_0)\\) \u53ef\u4ee5\u6d88\u53bb\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u91cf\uff0c\u6700\u540e\u7684\u7ed3\u679c\u662f</p> \\[ \\begin{aligned} &amp; \\mathbb{E}_{q(x_{1}|x_0)}[\\log p_\\theta(x_0|x_1)] - D_{KL}(q(x_T|x_{0})||p(x_T)) \\\\ &amp; - \\sum_{t=2}^{T}\\mathbb{E}_{q(x_{t}|x_0)}[D_{KL}(q(x_{t-1}|x_{t},x_0)||p_\\theta(x_{t-1}|x_{t})]] \\end{aligned} \\] <p>\u7b2c\u4e8c\u9879\u53ef\u4ee5\u91cd\u65b0\u89e3\u91ca\u4e3a\u6700\u7ec8\u566a\u58f0\u8f93\u5165\u7684\u5206\u5e03\u4e0e\u6807\u51c6\u9ad8\u65af\u5148\u9a8c\u7684\u63a5\u8fd1\u7a0b\u5ea6 \u7b2c\u4e09\u9879\u53ef\u4ee5\u91cd\u65b0\u89e3\u91ca\u4e3a\u6bcf\u4e2a\u53bb\u566a\u6b65\u9aa4\u7684\u4e00\u81f4\u6027\uff0c\u6211\u4eec\u5b66\u4e60\u6240\u9700\u7684\u53bb\u566a\u8f6c\u6362\u6b65\u9aa4 \\(p_\\theta(x_{t\u22121}|x_t)\\) \u4f5c\u4e3a\u6613\u4e8e\u5904\u7406\u7684\u3001\u771f\u5b9e\u7684\u53bb\u566a\u8f6c\u6362\u6b65\u9aa4 \\(q(x_{t\u22121}|x_t, x_0)\\) \u7684\u8fd1\u4f3c\u503c\u3002\\(q(x_{t\u22121}|x_t, x_0)\\) \u53ef\u4ee5\u5145\u5f53 ground truth signal\u3002\u8fd9\u4e00\u9879\u5f53\u5b66\u4e60\u5230\u7684\u53bb\u566a\u58f0\u8fc7\u7a0b\u4e0e\u771f\u5b9e\u7684\u53bb\u566a\u58f0\u8fc7\u7a0b\u4e00\u81f4\u65f6\uff0c\u4f1a\u88ab\u6700\u5c0f\u5316\u3002</p> <p>\u7531\u4e8e\u540c\u65f6\u5b66\u4e60\u7f16\u7801\u5668\u589e\u52a0\u4e86\u590d\u6742\u6027\uff0c\u56e0\u6b64\u6700\u5c0f\u5316\u4efb\u610f\u590d\u6742\u9a6c\u5c14\u53ef\u592b HVAE \u4e2d\u7684\u4efb\u610f\u540e\u9a8c\u5206\u5e03\uff0c\u6bcf\u4e2a KL \u6563\u5ea6\u9879\u5f88\u96be\u6700\u5c0f\u5316\uff0c\u5728 VDM \u4e2d\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u9ad8\u65af\u8f6c\u79fb\u5047\u8bbe\u6765\u4f7f\u4f18\u5316\u53d8\u5f97\u5bb9\u6613\u5904\u7406\uff1a</p> \\[ q(x_{t-1}|x_t,x_0) = \\frac{q(x_t|x_{t-1},x_0)q(x_{t-1}|x_0)}{q(x_{t}|x_0)} \\] <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053 \\(q(x_t|x_{t-1},x_0)=\\mathcal{N}(x_t;\\sqrt{\\alpha_t}x_{t-1},(1-\\alpha_t)I)\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981 \\(q(x_{t-1}|x_0)\\) \u548c \\(q(x_{t}|x_0)\\)\u3002\u8fd9\u91cc\u53ef\u4ee5\u5229\u7528\u4e4b\u524d\u63d0\u5230\u7684\u91cd\u53c2\u6570\u5316\u6280\u5de7\uff0c\u4ece \\(x_t \\sim q(x_t|x_{t-1})\\) \u4e2d\u91c7\u6837</p> \\[ x_t = \\sqrt{\\alpha_t}x_{t-1} + \\sqrt{1-\\alpha_t}\\epsilon_t \\] <p>\u540c\u6837\u7684\uff0c\u53ef\u4ee5\u4ece \\(x_{t-1} \\sim q(x_{t-1}|x_{t-2})\\) \u4e2d\u91c7\u6837</p> \\[ x_{t-1} = \\sqrt{\\alpha_{t-1}}x_{t-2} + \\sqrt{1-\\alpha_{t-1}}\\epsilon_{t-1} \\] <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u8fd9\u4e00\u64cd\u4f5c\u5f97\u5230 \\(x_t \\sim q(x_t|x_0)\\)</p> \\[ \\begin{aligned} x_t &amp;= \\sqrt{\\alpha_t}x_{t-1} + \\sqrt{1-\\alpha_t}\\epsilon^*_{t-1}    \\\\ &amp;= \\sqrt{\\alpha_t}(\\sqrt{\\alpha_{t-1}}x_{t-2} + \\sqrt{1-\\alpha_{t-1}}\\epsilon^*_{t-2}) + \\sqrt{1-\\alpha_t}\\epsilon^*_{t-1} \\\\ &amp;=\\sqrt{\\alpha_t\\alpha_{t-1}}x_{t-2} + \\sqrt{\\sqrt{\\alpha_t-\\alpha_t\\alpha_{t-1}}^2+\\sqrt{1-\\alpha_t}^2}\\epsilon_{t-2}\\\\ &amp;= \\sqrt{\\alpha_t\\alpha_{t-1}}x_{t-2} + \\sqrt{1-\\alpha_t\\alpha_{t-1}}\\epsilon_{t-2} \\\\ &amp;= ... \\\\ &amp; = \\sqrt{\\prod_{i=1}^{t}\\alpha_i}x_0 + \\sqrt{1-\\prod_{i=1}^{t}\\alpha_i}\\epsilon_0 \\\\  &amp; = \\sqrt{\\bar{\\alpha}_t}x_0 + \\sqrt{1-\\bar{\\alpha}_t}\\epsilon_0 \\\\ &amp; \\sim \\mathcal{N}(x_t;\\sqrt{\\bar{\\alpha}_t}x_0,\\sqrt{1-\\bar{\\alpha}_t}I) \\end{aligned} \\] <p>\u4e2d\u95f4\u7528\u5230\u4e86\u6240\u6709\u7684\u566a\u58f0\u90fd\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff0c\u5229\u7528\u4e86\u9ad8\u65af\u5206\u5e03\u7684\u7279\u6027\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u524d\u9762\u8d1d\u53f6\u65af\u5f62\u5f0f\u7684\u53bb\u566a\u8fc7\u7a0b\u6240\u9700\u8981\u7684\u5168\u90e8\u9879\uff0c\u73b0\u5728\u6765\u63a8\u5bfc\u6700\u540e\u7684\u53bb\u566a\u58f0\u8fc7\u7a0b</p> <p></p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u5728\u6bcf\u4e00\u6b65\u4e2d \\(x_{t-1}\\sim q(x_{t-1}|x_t,x_0)\\) \u5448\u6b63\u6001\u5206\u5e03\uff0c\u5176\u4e2d\u5747\u503c \\(\\mu_q(x_t,x_0)\\) \u662f \\(x_t\\) \u548c \\(x_0\\) \u7684\u51fd\u6570\uff0c\u65b9\u5dee \\(\\Sigma_q(t)\\) \u662f \\(\\alpha\\) \u7cfb\u6570\u3002\u8fd9\u4e9b \\(\\alpha\\) \u7cfb\u6570\u662f\u5df2\u77e5\u7684\u5e76\u4e14\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u662f\u56fa\u5b9a\u7684\uff1b\u5b83\u4eec\u8981\u4e48\u5728\u5efa\u6a21\u4e3a\u8d85\u53c2\u6570\u65f6\u6c38\u4e45\u8bbe\u7f6e\uff0c\u8981\u4e48\u88ab\u89c6\u4e3a\u8bd5\u56fe\u5bf9\u5176\u5efa\u6a21\u7684\u7f51\u7edc\u7684\u5f53\u524d\u63a8\u7406\u8f93\u51fa\u3002</p> <p>\u8fd9\u91cc\u4e24\u4e2a\u5173\u952e\u7684\u53c2\u6570\u662f</p> \\[ \\mu_q(x_t,x_0) = \\frac{\\sqrt{\\alpha_t(1-\\overline{\\alpha_{t-1}})x_t}+\\sqrt{\\overline{\\alpha_{t-1}}}(1-\\alpha_t)x_0}{1-\\overline{\\alpha_t}}  \\] \\[ \\sigma_q(t)^2 = \\frac{(1-\\alpha_t)(1-\\overline{\\alpha_{t-1}})}{1-\\overline{\\alpha_{t}}} \\] <p>\u4ece\u4e24\u4e2a\u6b63\u6001\u5206\u5e03\u7684 KL \u6563\u5ea6\u7684\u53d8\u6362\u51fa\u53d1\uff1a</p> \\[ \\begin{aligned} &amp; \\argmin_\\theta D_{\\text{KL}}(q(x_{t-1}|x_t,x_0)||p_\\theta(x_{t-1}|x_t)) \\\\ &amp;= \\argmin_\\theta \\frac{1}{2}(\\log\\frac{|\\Sigma_{p_\\theta}|}{|\\Sigma_q|} - d + \\text{tr}(\\Sigma_{p_\\theta}^{-1}\\Sigma_q) + (\\mu_{p_\\theta}-\\mu_q)^T\\Sigma_{p_\\theta}^{-1}(\\mu_{p_\\theta}-\\mu_q)) \\\\ &amp;= \\arg \\min_{\\theta} \\frac{1}{2 \\sigma_q^2(t)} \\left\\| \\mu_\\theta - \\mu_q \\right\\|_2^2 \\end{aligned} \\] <p>\u8fd9\u91cc \\(\\mu_q = \\mu_q(x_t,x_0),\\mu_\\theta=\\mu_\\theta(x_t,t)\\)</p> <p>\u6839\u636e\u524d\u9762\u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 \\(\\mu_\\theta(x_t,t)\\) \u8bbe\u7f6e\u6210\u4e0b\u9762\u7684\u5f62\u5f0f\u6765\u903c\u8fd1 \\(\\mu_q(x_t,x_0)\\)</p> \\[ \\begin{aligned} \\mu_\\theta(x_t,t)=\\frac{\\sqrt{\\alpha_t}(1-\\overline{\\alpha_{t-1}})x_t+\\sqrt{\\overline{\\alpha_{t-1}}}(1-\\alpha_t)\\hat{x_\\theta}(x_t,t)}{1-\\overline{\\alpha_{t}}} \\end{aligned} \\] <p>\u8fd9\u91cc \\(\\hat{x_\\theta}(x_t,t)\\) \u662f\u7531\u795e\u7ecf\u7f51\u7edc\u53c2\u6570\u5316\u7684\uff0c\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u5bfb\u6c42\u4ece\u566a\u58f0\u56fe\u50cf \\(x_t\\) \u548c\u65f6\u95f4\u6b65\u9aa4 \\(t\\) \u9884\u6d4b \\(x_0\\)</p> <p>\u90a3\u4e48\u5bf9 KL \u6563\u5ea6\u7684\u4f18\u5316\u53ef\u4ee5\u8f6c\u5316\u4e3a</p> \\[ \\begin{aligned} &amp; \\argmin_\\theta D_{\\text{KL}}(q(x_{t-1}|x_t,x_0)||p_\\theta(x_{t-1}|x_t)) \\\\ &amp; = \\arg \\min_{\\theta} \\frac{1}{2 \\sigma_q^2(t)} \\frac{\\overline{\\alpha_{t-1}}(1-\\alpha_t)^2}{(1-\\overline{\\alpha_{t}})^2}[\\left\\|\\hat{x_\\theta}(x_t,t)-x_0\\right\\|^2_2] \\end{aligned} \\] <p>\u6b64\u5916\uff0c\u6700\u5c0f\u5316\u6211\u4eec\u5bfc\u51fa\u7684 ELBO \u76ee\u6807\u5728\u6240\u6709\u566a\u58f0\u6c34\u5e73\u4e0a\u7684\u6c42\u548c\u9879\u53ef\u4ee5\u901a\u8fc7\u6700\u5c0f\u5316\u6240\u6709\u65f6\u95f4\u6b65\u957f\u7684\u671f\u671b\u6765\u8fd1\u4f3c\uff1a</p> \\[ \\argmin_\\theta \\mathbb{E}_{t\\sim U{2,T}}[\\mathbb{E}_{q(x_t|x_0)}[D_{\\text{KL}}(q(x_{t-1}|x_t,x_0)||p_\\theta(x_{t-1}|x_t))]] \\] <p>\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u968f\u65f6\u95f4\u6b65\u957f\u7684\u968f\u673a\u6837\u672c\u8fdb\u884c\u4f18\u5316\u3002</p>"},{"location":"read/diffusion/#learning-diffusion-noise-parameters","title":"Learning Diffusion Noise parameters","text":"<p>\u4e00\u4e2a\u53ef\u80fd\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u4ee5 \\(\\eta\\) \u53c2\u6570\u5316\u7684\u795e\u7ecf\u7f51\u7edc \\(\\hat{\\alpha}_\\eta(t)\\) \u6765\u9884\u6d4b \\(\\alpha_t\\)\u3002\u4f46\u662f\u4e3a\u4e86\u8ba1\u7b97 \\(\\bar{\\alpha}_t\\)\uff0c\u9700\u8981\u5728\u6bcf\u4e00\u4e2a timestep \u505a\u4e00\u4e9b\u63a8\u65ad\uff0c\u8fd9\u662f\u4f4e\u6548\u7684\u3002\u5c3d\u7ba1\u53ef\u4ee5\u7528\u7f13\u5b58\u7684\u65b9\u5f0f\u6765\u63d0\u9ad8\u6548\u7387\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u6570\u5b66\u7684\u65b9\u5f0f\u6539\u8fdb\u516c\u5f0f\u3002</p> <p>\u5c06\u5148\u524d\u5f97\u5230\u7684 \\(\\sigma_q^2(t)\\) \u5e26\u5165\u76ee\u6807\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[ \\begin{aligned} &amp;\\frac{1}{2 \\sigma_q^2(t)} \\frac{\\overline{\\alpha_{t-1}}(1-\\alpha_t)^2}{(1-\\overline{\\alpha_{t}})^2}[\\left\\|\\hat{x_\\theta}(x_t,t)-x_0\\right\\|^2_2] \\\\ &amp;=\\frac{1}{2\\frac{(1-\\alpha_t)(1-\\overline{\\alpha_{t-1}})}{1-\\overline{\\alpha_{t}}}}\\frac{\\overline{\\alpha_{t-1}}(1-\\alpha_t)^2}{(1-\\overline{\\alpha_{t}})^2}[\\left\\|\\hat{x_\\theta}(x_t,t)-x_0\\right\\|^2_2]\\\\ &amp;=\\frac{1}{2}\\left(\\frac{\\overline{\\alpha_{t-1}}}{1-\\overline{\\alpha_{t-1}}}-\\frac{\\overline{\\alpha_{t}}}{1-\\overline{\\alpha_{t}}}\\right)[\\left\\|\\hat{x_\\theta}(x_t,t)-x_0\\right\\|^2_2] \\end{aligned} \\] <p>Note</p> <p>SNR means signal-to-noise ratio \\(\\text{SNR}=\\frac{\\mu^2}{\\sigma^2}\\)</p> <p>\u6839\u636e\u524d\u9762\u7684\u63a8\u5bfc\uff0c\\(q(x_t|x_0) \\sim \\mathcal{N}(x_t;\\sqrt{\\overline{\\alpha_t}}x_0,(1-\\overline{\\alpha_t})I)\\) \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa </p> \\[ \\text{SNR}(t) =\\frac{\\overline{\\alpha_{t}}}{1-\\overline{\\alpha_{t}}} \\] <p>\u90a3\u4e48\u524d\u9762\u7684\u516c\u5f0f\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a</p> \\[ \\begin{aligned} &amp;\\frac{1}{2}\\left(\\frac{\\overline{\\alpha_{t-1}}}{1-\\overline{\\alpha_{t-1}}}-\\frac{\\overline{\\alpha_{t}}}{1-\\overline{\\alpha_{t}}}\\right)[\\left\\|\\hat{x_\\theta}(x_t,t)-x_0\\right\\|^2_2] \\\\ &amp;=\\frac{1}{2}(\\text{SNR}(t-1)-\\text{SNR}(t))[\\left\\|\\hat{x_\\theta}(x_t,t)-x_0\\right\\|^2_2] \\end{aligned} \\] <p>\u987e\u540d\u601d\u4e49\uff0cSNR \u8868\u793a\u539f\u59cb\u4fe1\u53f7\u4e0e\u5b58\u5728\u7684\u566a\u58f0\u91cf\u4e4b\u95f4\u7684\u6bd4\u7387\uff1b\u8f83\u9ad8\u7684 SNR \u8868\u793a\u8f83\u591a\u7684\u4fe1\u53f7\uff0c\u8f83\u4f4e\u7684 SNR \u8868\u793a\u8f83\u591a\u7684\u566a\u58f0\u3002\u5728\u6269\u6563\u6a21\u578b\u4e2d\u6211\u4eec\u8981\u6c42SNR\u968f\u7740\u65f6\u95f4\u6b65t\u7684\u589e\u52a0\u800c\u5355\u8c03\u51cf\u5c0f\uff1b\u8fd9\u5f62\u5f0f\u5316\u4e86\u8fd9\u6837\u4e00\u4e2a\u6982\u5ff5\uff1a\u53d7\u6270\u52a8\u7684\u8f93\u5165 \\(x_t\\) \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d8\u5f97\u8d8a\u6765\u8d8a\u5608\u6742\uff0c\u76f4\u5230\u5b83\u5728 \\(t = T\\) \u65f6\u53d8\u5f97\u4e0e\u6807\u51c6\u9ad8\u65af\u76f8\u540c\u3002</p> <p>\u6839\u636e\u524d\u9762\u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u76f4\u63a5\u53c2\u6570\u5316\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684 SNR\uff0c\u5e76\u4e0e\u6269\u6563\u6a21\u578b\u4e00\u8d77\u8054\u5408\u5b66\u4e60\u3002\u7531\u4e8e SNR \u5fc5\u987b\u968f\u65f6\u95f4\u5355\u8c03\u4e0b\u964d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8868\u793a\u4e3a\uff1a</p> \\[ \\text{SNR}(t) = \\exp(-\\omega_\\eta(t)) \\] <p>\u5176\u4e2d \\(\\omega_\\eta(t)\\) \u88ab\u5efa\u6a21\u4e3a\u53c2\u6570\u4e3a \\(\\eta\\) \u7684\u5355\u8c03\u9012\u589e\u795e\u7ecf\u7f51\u7edc\u3002\u90a3\u4e48\\(\\overline{\\alpha_t}\\) \u6709\u4e00\u4e2a\u4f18\u96c5\u7684\u5f62\u5f0f</p> \\[ \\begin{aligned} \\overline{\\alpha_t} = \\text{sigmoid}(-\\omega_\\eta(t)) \\\\ 1-\\overline{\\alpha_t} = \\text{sigmoid}(\\omega_\\eta(t)) \\end{aligned} \\]"},{"location":"read/diffusion/#three-equivalent-interpretations","title":"Three Equivalent Interpretations","text":"<p>\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u8bc1\u660e\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u5b66\u4e60\u795e\u7ecf\u7f51\u7edc\u6765\u8bad\u7ec3\u53d8\u5206\u6269\u6563\u6a21\u578b\uff0c\u4ee5\u4ece\u4efb\u610f\u566a\u58f0\u7248\u672c \\(x_t\\) \u53ca\u5176\u65f6\u95f4\u7d22\u5f15 \\(t\\) \u9884\u6d4b\u539f\u59cb\u81ea\u7136\u56fe\u50cf \\(x_0\\)\u3002\u800c \\(x_0\\) \u6709\u53e6\u5916\u4e24\u79cd\u53c2\u6570\u5316\u65b9\u6cd5\uff0c\u53ef\u4ee5\u63a8\u51fa VDM \u7684\u4e24\u4e2a\u7b49\u4ef7\u89e3\u91ca\u3002</p> <p>\u5728\u524d\u9762\u7684\u63a8\u5bfc\u4e2d\uff0c\u5229\u7528\u91cd\u53c2\u6570\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \\(x_t\\) \u548c\u566a\u58f0\u8868\u793a \\(x_0\\)\uff0c\u5373</p> \\[ x_0 = \\frac{x_t - \\sqrt{1-\\overline{\\alpha_t}}\\epsilon_0}{\\sqrt{\\overline{\\alpha_t}}} \\] <p>\u90a3\u4e48\u5c06\u524d\u9762\u65b9\u5dee\u4e2d\u7684 \\(x_0\\) \u7528\u4e0a\u9762\u7684\u516c\u5f0f\u4ee3\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230</p> \\[ \\mu_q(x_t,x_0) = \\frac{1}{\\sqrt{\\alpha_t}}x_t - \\frac{1-\\alpha_t}{\\sqrt{1-\\overline{\\alpha_{t}}}\\sqrt{\\alpha_t}}\\epsilon_0 \\] <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e approximate denoising transition mean \u4e3a</p> \\[ \\mu_\\theta(x_t,t) = \\frac{1}{\\sqrt{\\alpha_t}}x_t - \\frac{1-\\alpha_t}{\\sqrt{1-\\overline{\\alpha_{t}}}\\sqrt{\\alpha_t}}\\hat{x_\\theta}(x_t,t) \\] <p>\u76f8\u5e94\u7684\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a</p> \\[ \\begin{aligned} \\argmin_\\theta D_{\\text{KL}}(q(x_{t-1}|x_t,x_0)||p_\\theta(x_{t-1}|x_t)) \\\\ = \\argmin_{\\theta} \\frac{1}{2 \\sigma_q^2(t)} \\frac{(1 - \\alpha_t)^2}{(1 - \\bar{\\alpha}_t) \\alpha_t} \\left\\| \\epsilon_0 - \\hat{\\epsilon}_\\theta(x_t, t) \\right\\|_2^2 \\end{aligned} \\] <p>\u8fd9\u91cc \\(\\hat{\\epsilon}_\\theta(x_t, t)\\)\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u5b66\u4e60\u9884\u6d4b\u6e90\u566a\u58f0 \\(\\epsilon_0 \\sim \\mathcal{N}(\\epsilon;0,I)\\) \u4ece\u800c\u6839\u636e \\(x_0\\) \u786e\u5b9a \\(x_t\\)\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u8bc1\u660e\u4e86\u901a\u8fc7\u9884\u6d4b\u539f\u59cb\u56fe\u50cf \\(x_0\\) \u6765\u5b66\u4e60 VDM \u7b49\u4ef7\u4e8e\u5b66\u4e60\u9884\u6d4b\u566a\u58f0\u3002</p> <p>\u7b2c\u4e09\u79cd\u7b49\u4ef7\u5f62\u5f0f\u9700\u8981\u5229\u7528 Tweedie\u2019s Formula.</p> <p>Tweedie's Formula</p> <p>\u7ed9\u5b9a\u4ece\u4e2d\u62bd\u53d6\u7684\u6837\u672c\uff0c\u6307\u6570\u65cf\u5206\u5e03\u7684\u771f\u5b9e\u5e73\u5747\u503c\u53ef\u4ee5\u901a\u8fc7\u6837\u672c\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff08\u4e5f\u79f0\u4e3a\u7ecf\u9a8c\u5e73\u5747\u503c\uff09\u52a0\u4e0a\u4e00\u4e9b\u6d89\u53ca\u4f30\u8ba1\u5206\u6570\u7684\u6821\u6b63\u9879\u6765\u4f30\u8ba1\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u89c2\u5bdf\u6837\u672c\uff0c\u7ecf\u9a8c\u5e73\u5747\u503c\u5c31\u662f\u6837\u672c\u672c\u8eab\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u51cf\u8f7b\u6837\u672c\u504f\u5dee\uff1b\u5982\u679c\u89c2\u5bdf\u5230\u7684\u6837\u672c\u5168\u90e8\u4f4d\u4e8e\u57fa\u7840\u5206\u5e03\u7684\u4e00\u7aef\uff0c\u5219\u8d1f\u5206\u6570\u4f1a\u53d8\u5927\uff0c\u5e76\u5c06\u6837\u672c\u7684\u6734\u7d20\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u6821\u6b63\u4e3a\u771f\u5b9e\u5e73\u5747\u503c\u3002 \u6570\u5b66\u4e0a\u7684\u8868\u793a\u662f\uff0c\u5bf9\u9ad8\u65af\u53d8\u91cf \\(z\\sim \\mathcal{N}(z;\\mu_z,\\Sigma_z)\\)\uff0cTweedie\u2019s Formula states that:</p> \\[ \\begin{aligned} \\mathbb{E}[\\mu_z|z] = z + \\Sigma_z\\nabla_z\\log p(z) \\end{aligned} \\] <p>\u8fd9\u91cc\u7684\u60c5\u51b5\u4e2d\u6211\u4eec\u6709\uff1a</p> \\[ \\begin{aligned} \\mathbb{E}[\\mu_{x_t}|x_t] &amp;= x_t + (1-\\overline{\\alpha_t})\\nabla_{x_t}\\log p(x_t) \\\\ \\end{aligned} \\] <p>\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u628a \\(\\nabla_{x_t}\\log p(x_t)\\) \u8bb0\u4e3a \\(\\nabla\\log p(x_t)\\)\u3002</p> <p>\u6839\u636e\u524d\u9762\u7684\u63a8\u5bfc\u6211\u4eec\u6709</p> \\[ q(x_t|x_0) = \\mathcal{N}(x_t;\\sqrt{\\overline{\\alpha_t}}x_0,\\sqrt{1-\\overline{\\alpha_t}}I) \\] <p>\u6839\u636e Tweedie \u516c\u5f0f\uff0c\\(x_t\\) \u751f\u6210\u7684\u771f\u5b9e\u5747\u503c\u7684\u6700\u4f73\u4f30\u8ba1\u4e3a\uff1a\\(\\mu_{x_t} = \\sqrt{\\overline{\\alpha_t}}x_0\\)</p> <p>\u5e26\u5165\u4e0a\u9762\u7684\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230</p> \\[ x_0 = \\frac{x_t + \\sqrt{1-\\overline{\\alpha_t}}\\nabla \\log p(x_t)}{\\sqrt{\\overline{\\alpha_t}}} \\] <p>\u8fd9\u91cc\u6211\u4eec\u5c31\u5f97\u5230\u4e86 \\(x_0\\) \u7684\u53e6\u4e00\u79cd\u8868\u793a\uff0c\u5c06\u5176\u5e26\u5165\u5b9e\u9645\u53bb\u566a\u8fc7\u7a0b\u7684\u5747\u503c \\(\\mu_q(x_t,x_0)\\) \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230:</p> \\[ \\begin{aligned} \\mu_q(x_t,x_0) &amp;= \\frac{1}{\\sqrt{\\alpha_t}}x_t + \\frac{1-\\alpha_t}{\\sqrt{\\alpha_t}}\\nabla \\log p(x_t) \\end{aligned} \\] <p>\u63a5\u7740\u548c\u4e4b\u524d\u540c\u6837\u7684\u6b65\u9aa4\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u8fd1\u4f3c\u53bb\u566a\u8fc7\u7a0b\u7684\u5747\u503c\u4e3a</p> \\[ \\begin{aligned} \\mu_\\theta(x_t,t) &amp;= \\frac{1}{\\sqrt{\\alpha_t}}x_t + \\frac{1-\\alpha_t}{\\sqrt{\\alpha_t}}s_\\theta(x_t,t) \\end{aligned} \\] <p>\u8fd9\u91cc \\(s_\\theta(x_t,t)\\) \u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u5b66\u4e60\u9884\u6d4b \\(\\nabla_{x_t}\\log p(x_t)v\\) \u7684\u68af\u5ea6\u3002\u76f8\u5e94\u7684\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a</p> \\[ \\begin{aligned} \\argmin_\\theta D_{\\text{KL}}(q(x_{t-1}|x_t,x_0)||p_\\theta(x_{t-1}|x_t)) \\\\ = \\argmin_{\\theta} \\frac{1}{2 \\sigma_q^2(t)} \\frac{(1 - \\alpha_t)^2}{\\alpha_t} \\left\\| s_\\theta(x_t,t) - \\nabla \\log p(x_t) \\right\\|_2^2 \\end{aligned} \\] <p>\u8fd9\u91cc\u7684 score function \\(\\nabla \\log p(x_t)\\) \u4e0e\u566a\u58f0\u7684\u975e\u5e38\u50cf\uff0c\u5177\u4f53\u6765\u8bf4\u6709</p> \\[ \\nabla \\log p(x_t) = - \\frac{1}{\\sqrt{1-\\overline{\\alpha_t}}}\\epsilon_0 \\] <p>\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e24\u9879\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5e38\u6570\u56e0\u5b50\uff01\u5f97\u5206\u51fd\u6570\u8861\u91cf\u5982\u4f55\u5728\u6570\u636e\u7a7a\u95f4\u4e2d\u79fb\u52a8\u4ee5\u6700\u5927\u5316\u5bf9\u6570\u6982\u7387\u3002\u76f4\u89c2\u4e0a\uff0c\u7531\u4e8e\u6e90\u566a\u58f0\u88ab\u6dfb\u52a0\u5230\u81ea\u7136\u56fe\u50cf\u4e2d\u4ee5\u7834\u574f\u5b83\uff0c\u56e0\u6b64\u6cbf\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u4f1a\u5bf9\u56fe\u50cf\u8fdb\u884c\u201c\u53bb\u566a\u201d\uff0c\u5e76\u4e14\u5c06\u662f\u589e\u52a0\u540e\u7eed\u5bf9\u6570\u6982\u7387\u7684\u6700\u4f73\u66f4\u65b0\u3002\u4e0a\u9762\u7684\u6570\u5b66\u8bc1\u660e\u5df2\u7ecf\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\u3002</p> <p>\u7efc\u5408\u4ee5\u4e0a\uff0c\u6211\u4eec\u6709\u4e86\u4e09\u4e2a\u7b49\u4ef7\u7684\u65b9\u5f0f\u6765\u4f18\u5316\u4e00\u4e2a VDM\uff1a\u9884\u6d4b\u539f\u59cb\u56fe\u50cf\uff0c\u9884\u6d4b\u566a\u58f0\uff0c\u9884\u6d4b\u56fe\u50cf\u5728\u4efb\u610f\u566a\u58f0\u6c34\u5e73\u4e0b\u7684\u5f97\u5206\u51fd\u6570\u3002\u8fd9\u4e09\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u6765\u5b9e\u73b0\u3002</p>"},{"location":"read/diffusion/#score-based-generative-modeling","title":"Score-based Generative Modeling","text":"<p>\u53ef\u4ee5\u5728\u53d8\u5206\u6269\u6563\u6a21\u578b\u548c\u57fa\u4e8e\u5206\u6570\u7684\u751f\u6210\u6a21\u578b\u4e4b\u95f4\u5efa\u7acb\u4e86\u660e\u786e\u7684\u8054\u7cfb\uff0c\u65e0\u8bba\u662f\u5728\u8bad\u7ec3\u76ee\u6807\u8fd8\u662f\u62bd\u6837\u8fc7\u7a0b\u4e2d\u3002\u5229\u7528\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u7684\u601d\u60f3\u3002</p> <p>\u9996\u5148\u4efb\u610f\u7075\u6d3b\u7684\u6982\u7387\u5206\u5e03\u53ef\u4ee5\u5199\u6210\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> \\[ p_\\theta(x) = \\frac{1}{Z_\\theta}e^{-f_\\theta(x)} \\] <p>\u5176\u4e2d \\(f_\\theta(x)\\) \u662f\u4e00\u4e2a\u4efb\u610f\u81ea\u7531\u7684\u53c2\u6570\u5316\u7684\u52bf\u80fd\u51fd\u6570\uff0c\\(Z_\\theta\\) \u662f\u5f52\u4e00\u5316\u5e38\u6570\u3002\u5b66\u4e60\u8fd9\u6837\u4e00\u4e2a\u5206\u5e03\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u65b9\u6cd5\u6c42\u89e3\u5f52\u4e00\u5316\u7cfb\u6570\u4f9d\u8d56\u4e8e \\(Z_\\theta=\\int e^{-f_\\theta(x)}dx\\)\uff0c\u8fd9\u5bf9\u590d\u6742\u7684 \\(f_\\theta(x)\\) \u662f\u5f88\u56f0\u96be\u7684\u3002</p> <p>\u907f\u514d\u5efa\u6a21\u6216\u8ba1\u7b97\u5f52\u4e00\u5316\u53c2\u6570\u7684\u65b9\u6cd5\u662f\u7528\u795e\u7ecf\u7f51\u7edc \\(s_\\theta(x)\\) \u6765\u8fd1\u4f3c\u5f97\u5206\u51fd\u6570 \\(\\nabla \\log p_\\theta(x)\\)\uff0c\u8fd9\u91cc\u7684\u63a8\u5bfc\u662f</p> \\[ \\begin{aligned} \\nabla_x \\log p_\\theta(x) =&amp; \\nabla_x \\log(\\frac{1}{Z_\\theta}e^{-f_\\theta(x)}) \\\\ =&amp; \\nabla_x \\log \\frac{1}{Z_\\theta} + \\nabla_x \\log e^{-f_\\theta(x)} \\\\ =&amp; -\\nabla_x \\log Z_\\theta - \\nabla_x f_\\theta(x) \\\\ =&amp; -\\nabla_x f_\\theta(x) \\\\ &amp; \\approx s_\\theta(x) \\end{aligned} \\] <p>\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u771f\u5b9e\u5f97\u5206\u51fd\u6570\u6700\u5c0f\u5316\u8d39\u820d\u5c14\u6563\u5ea6\u6765\u4f18\u5316\u5f97\u5206\u6a21\u578b</p> \\[ \\mathbb{E}_{p(x)}[\\left\\|s_\\theta(x)-\\nabla\\log p(x)\\right\\|_2^2] \\] <p>Score function \u610f\u4e49\uff1a\u5bf9\u4e8e\u6bcf\u4e2a \\(x\\)\uff0c\u53d6\u5176\u5bf9\u6570\u4f3c\u7136\u76f8\u5bf9\u4e8e \\(x\\) \u7684\u68af\u5ea6\u672c\u8d28\u4e0a\u63cf\u8ff0\u4e86\u6570\u636e\u7a7a\u95f4\u4e2d\u79fb\u52a8\u7684\u65b9\u5411\uff0c\u4ee5\u8fdb\u4e00\u6b65\u589e\u52a0\u5176\u4f3c\u7136\u3002\u76f4\u89c2\u4e0a\uff0c\u5f97\u5206\u51fd\u6570\u5b9a\u4e49\u4e86\u6570\u636e \\(x\\) \u6240\u5728\u7684\u6574\u4e2a\u7a7a\u95f4\u4e0a\u7684\u5411\u91cf\u573a\uff0c\u6307\u5411\u4f17\u6570\u3002\u7136\u540e\uff0c\u901a\u8fc7\u5b66\u4e60\u771f\u5b9e\u6570\u636e\u5206\u5e03\u7684\u5f97\u5206\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece\u540c\u4e00\u7a7a\u95f4\u4e2d\u7684\u4efb\u610f\u70b9\u5f00\u59cb\u5e76\u8fed\u4ee3\u5730\u8ddf\u8e2a\u5f97\u5206\u76f4\u5230\u8fbe\u5230\u4f17\u6570\u6765\u751f\u6210\u6837\u672c\u3002\u8be5\u91c7\u6837\u8fc7\u7a0b\u79f0\u4e3a\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\uff0c\u5728\u6570\u5b66\u4e0a\u63cf\u8ff0\u4e3a</p> \\[ x_{i+1} = x_i + c\\nabla\\log p(x_i) + \\sqrt{2c}\\epsilon_i \\] <p>\u5176\u4e2d \\(x_0\\) \u662f\u4ece\u5148\u9a8c\u5206\u5e03\uff08\u6bd4\u5982\u5747\u5300\u5206\u5e03\uff09\u4e2d\u968f\u673a\u91c7\u6837\u7684 \\(\\epsilon_i\\) \u662f\u968f\u673a\u566a\u58f0\uff0c\u6765\u786e\u4fdd\u751f\u6210\u7684\u6837\u672c\u4e0d\u4f1a\u603b\u662f collapse onto a mode\uff0c, but hover around it for diversity\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u5b66\u4e60\u7684\u5f97\u5206\u51fd\u6570\u662f\u786e\u5b9a\u6027\u7684\uff0c\u56e0\u6b64\u6d89\u53ca\u566a\u58f0\u9879\u7684\u91c7\u6837\u589e\u52a0\u4e86\u751f\u6210\u8fc7\u7a0b\u7684\u968f\u673a\u6027\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u907f\u514d\u786e\u5b9a\u6027\u8f68\u8ff9\u3002\u5f53\u4ece\u4f4d\u4e8e\u591a\u4e2a\u6a21\u5f0f\u4e4b\u95f4\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u91c7\u6837\u65f6\u200b\u200b\uff0c\u8fd9\u7279\u522b\u6709\u7528\u3002</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u590d\u6742\u7684\u5206\u5e03\uff0c\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u4f7f\u7528 ground-truth \u7684\u5f97\u5206\u51fd\u6570\uff0c\u597d\u5728\u5df2\u7ecf\u884d\u751f\u51fa\u79f0\u4e3a score matching \u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u771f\u5b9e\u5206\u6570\u7684\u60c5\u51b5\u4e0b\u6700\u5c0f\u5316\u8d39\u820d\u5c14\u6563\u5ea6\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5b66\u4e60\u5c06\u5206\u5e03\u8868\u793a\u4e3a\u5f97\u5206\u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u5b83\u901a\u8fc7\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57\u6280\u672f\uff08\u4f8b\u5982\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\uff09\u751f\u6210\u6837\u672c\uff0c\u88ab\u79f0\u4e3a\u57fa\u4e8e\u5f97\u5206\u7684\u751f\u6210\u5efa\u6a21\u3002</p> <p>vanilla score matching \u5b58\u5728\u4e09\u4e2a\u4e3b\u8981\u7684\u95ee\u9898</p> <ol> <li>\u5f53 x \u4f4d\u4e8e\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4e\u7ef4\u6d41\u5f62\u4e0a\u65f6\uff0c\u5f97\u5206\u51fd\u6570\u662f\u4e0d\u660e\u786e\u7684\u3002\u8fd9\u53ef\u4ee5\u4ece\u6570\u5b66\u4e0a\u770b\u51fa\uff1b\u4e0d\u5728\u4f4e\u7ef4\u6d41\u5f62\u4e0a\u7684\u6240\u6709\u70b9\u7684\u6982\u7387\u4e3a\u96f6\uff0c\u5176\u5bf9\u6570\u672a\u5b9a\u4e49\u3002\u5f53\u5c1d\u8bd5\u5b66\u4e60\u81ea\u7136\u56fe\u50cf\u7684\u751f\u6210\u6a21\u578b\u65f6\uff0c\u8fd9\u5c24\u5176\u4e0d\u65b9\u4fbf\uff0c\u56e0\u4e3a\u4f17\u6240\u5468\u77e5\uff0c\u81ea\u7136\u56fe\u50cf\u4f4d\u4e8e\u6574\u4e2a\u73af\u5883\u7a7a\u95f4\u7684\u4f4e\u7ef4\u6d41\u5f62\u4e0a\u3002</li> <li>\u901a\u8fc7\u666e\u901a\u5206\u6570\u5339\u914d\u8bad\u7ec3\u7684\u4f30\u8ba1\u5206\u6570\u51fd\u6570\u5728\u4f4e\u5bc6\u5ea6\u533a\u57df\u5c06\u4e0d\u51c6\u786e\u3002\u56e0\u4e3a\u5b83\u662f\u5bf9 p(x) \u7684\u671f\u671b\uff0c\u5e76\u4e14\u5bf9\u5176\u6837\u672c\u8fdb\u884c\u663e\u5f0f\u8bad\u7ec3\uff0c\u6240\u4ee5\u6a21\u578b\u5c06\u4e0d\u4f1a\u6536\u5230\u5f88\u5c11\u89c1\u6216\u672a\u89c1\u793a\u4f8b\u7684\u51c6\u786e\u5b66\u4e60\u4fe1\u53f7\u3002\u8fd9\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u91c7\u6837\u7b56\u7565\u6d89\u53ca\u4ece\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u4f4d\u7f6e\uff08\u5f88\u53ef\u80fd\u662f\u968f\u673a\u566a\u58f0\uff09\u5f00\u59cb\uff0c\u5e76\u6839\u636e\u5b66\u4e60\u7684\u5f97\u5206\u51fd\u6570\u79fb\u52a8\u3002\u7531\u4e8e\u6211\u4eec\u9075\u5faa\u566a\u58f0\u6216\u4e0d\u51c6\u786e\u7684\u5206\u6570\u4f30\u8ba1\uff0c\u56e0\u6b64\u6700\u7ec8\u751f\u6210\u7684\u6837\u672c\u4e5f\u53ef\u80fd\u4e0d\u662f\u6700\u4f73\u7684\uff0c\u6216\u8005\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u624d\u80fd\u6536\u655b\u5230\u51c6\u786e\u7684\u8f93\u51fa\u3002</li> <li>Langevin \u52a8\u6001\u91c7\u6837\u53ef\u80fd\u4e0d\u4f1a\u6df7\u5408\uff0c\u5373\u4f7f\u5b83\u662f\u4f7f\u7528\u5730\u9762\u5b9e\u51b5\u5206\u6570\u6267\u884c\u7684\u3002\u5047\u8bbe\u771f\u5b9e\u7684\u6570\u636e\u5206\u5e03\u662f\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u5206\u5e03\u7684\u6df7\u5408:</li> </ol> \\[ p(x) = c_1p_1(x) + c_2p_2(x) \\] <p>\u5f53\u8ba1\u7b97\u5206\u6570\u65f6\uff0c\u8fd9\u4e9b\u6df7\u5408\u7cfb\u6570\u5c31\u4f1a\u4e22\u5931\uff0c\u56e0\u4e3a\u5bf9\u6570\u8fd0\u7b97\u5c06\u7cfb\u6570\u4ece\u5206\u5e03\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u800c\u68af\u5ea6\u8fd0\u7b97\u5c06\u5176\u5f52\u96f6.</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u901a\u8fc7\u5411\u6570\u636e\u6dfb\u52a0\u591a\u4e2a\u7ea7\u522b\u7684\u9ad8\u65af\u566a\u58f0\u53ef\u4ee5\u540c\u65f6\u89e3\u51b3\u8fd9\u4e09\u4e2a\u7f3a\u70b9\u3002\u9996\u5148\uff0c\u7531\u4e8e\u9ad8\u65af\u566a\u58f0\u5206\u5e03\u200b\u200b\u7684\u652f\u6301\u662f\u6574\u4e2a\u7a7a\u95f4\uff0c\u6270\u52a8\u7684\u6570\u636e\u6837\u672c\u5c06\u4e0d\u518d\u5c40\u9650\u4e8e\u4f4e\u7ef4\u6d41\u5f62\u3002\u5176\u6b21\uff0c\u6dfb\u52a0\u5927\u7684\u9ad8\u65af\u566a\u58f0\u5c06\u589e\u52a0\u6570\u636e\u5206\u5e03\u4e2d\u6bcf\u79cd\u6a21\u5f0f\u8986\u76d6\u7684\u533a\u57df\uff0c\u5728\u4f4e\u5bc6\u5ea6\u533a\u57df\u6dfb\u52a0\u66f4\u591a\u7684\u8bad\u7ec3\u4fe1\u53f7\u3002\u6700\u540e\uff0c\u6dfb\u52a0\u591a\u4e2a\u7ea7\u522b\u7684\u9ad8\u65af\u566a\u58f0\u5e76\u589e\u52a0\u65b9\u5dee\u5c06\u4ea7\u751f\u5c0a\u91cd\u5730\u9762\u5b9e\u51b5\u6df7\u5408\u7cfb\u6570\u7684\u4e2d\u95f4\u5206\u5e03\u3002</p> <p>\u5f62\u5f0f\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u566a\u58f0\u6c34\u5e73\u7684\u6b63\u5e8f\u5217 \\(\\{\\sigma_t\\}^T_{t=1}\\) \u5e76\u5b9a\u4e49\u9010\u6e10\u6270\u52a8\u7684\u6570\u636e\u5206\u5e03\u5e8f\u5217\uff1a</p> \\[ p_{\\sigma_t}(x) = \\int p(x) \\mathcal{N}(x_t;x,\\sigma_t^2I)dx \\] <p>\u7136\u540e\uff0c\u4f7f\u7528\u5206\u6570\u5339\u914d\u6765\u5b66\u4e60\u795e\u7ecf\u7f51\u7edc \\(s_\\theta(x,t)\\)\uff0c\u4ee5\u540c\u65f6\u5b66\u4e60\u6240\u6709\u566a\u58f0\u7ea7\u522b\u7684\u5206\u6570\u51fd\u6570\uff1a</p> \\[ \\argmin_{\\theta} \\sum_{t=1}^T \\lambda(t) \\mathbb{E}_{p_{\\sigma_t}(x_t)} \\left[ \\left\\| s_{\\theta}(x, t) - \\nabla \\log p_{\\sigma_t}(x_t) \\right\\|_2^2 \\right] \\] <p>\u5176\u4e2d \\(\\lambda(t)\\) \u662f\u4e00\u4e2a\u4ee5\u566a\u58f0\u6c34\u5e73 t \u4e3a\u6761\u4ef6\u7684\u6b63\u52a0\u6743\u51fd\u6570.\u6b64\u5916\uff0c\u4f5c\u8005\u63d0\u51fa\u5c06\u9000\u706b\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u91c7\u6837\u4f5c\u4e3a\u4e00\u79cd\u751f\u6210\u8fc7\u7a0b\uff0c\u5176\u4e2d\u901a\u8fc7\u6309\u987a\u5e8f\u5bf9\u6bcf\u4e2a \\(t = T, T \u22121, ..., 2, 1\\) \u8fd0\u884c\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u6765\u751f\u6210\u6837\u672c\u3002\u521d\u59cb\u5316\u662f\u4ece\u4e00\u4e9b\u56fa\u5b9a\u7684\u5148\u9a8c\uff08\u4f8b\u5982\u5747\u5300\uff09\u4e2d\u9009\u62e9\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u540e\u7eed\u91c7\u6837\u6b65\u9aa4\u90fd\u4ece\u5148\u524d\u6a21\u62df\u7684\u6700\u7ec8\u6837\u672c\u5f00\u59cb\u3002\u56e0\u4e3a\u566a\u58f0\u6c34\u5e73\u968f\u7740\u65f6\u95f4\u6b65\u957f t \u7a33\u5b9a\u4e0b\u964d\uff0c\u5e76\u4e14\u6211\u4eec\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u51cf\u5c0f\u6b65\u957f\uff0c\u6240\u4ee5\u6837\u672c\u6700\u7ec8\u6536\u655b\u5230\u771f\u6a21\u5f0f\u3002\u8fd9\u76f4\u63a5\u7c7b\u4f3c\u4e8e\u53d8\u5206\u6269\u6563\u6a21\u578b\u7684\u9a6c\u5c14\u53ef\u592b HVAE \u89e3\u91ca\u4e2d\u6267\u884c\u7684\u91c7\u6837\u8fc7\u7a0b\uff0c\u5176\u4e2d\u968f\u673a\u521d\u59cb\u5316\u7684\u6570\u636e\u5411\u91cf\u968f\u7740\u566a\u58f0\u6c34\u5e73\u7684\u964d\u4f4e\u800c\u8fed\u4ee3\u7ec6\u5316\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u53d8\u5206\u6269\u6563\u6a21\u578b\u548c\u57fa\u4e8e\u5206\u6570\u7684\u751f\u6210\u6a21\u578b\u4e4b\u95f4\u5efa\u7acb\u4e86\u660e\u786e\u7684\u8054\u7cfb\uff0c\u65e0\u8bba\u662f\u5728\u8bad\u7ec3\u76ee\u6807\u8fd8\u662f\u62bd\u6837\u7a0b\u5e8f\u4e0a\u3002</p> <p>\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u81ea\u7136\u5730\u5c06\u6269\u6563\u6a21\u578b\u63a8\u5e7f\u5230\u65e0\u9650\u6570\u91cf\u7684\u65f6\u95f4\u6b65\u957f\u3002\u5728 MHVAE \u89c2\u70b9\u4e0b\uff0c\u8fd9\u53ef\u4ee5\u89e3\u91ca\u4e3a\u5c06\u5c42\u6b21\u7ed3\u6784\u7684\u6570\u91cf\u6269\u5c55\u5230\u65e0\u7a77\u5927 \\(T\\rightarrow\\infty\\)\u3002\u4ece\u7b49\u6548\u7684\u57fa\u4e8e\u5206\u6570\u7684\u751f\u6210\u6a21\u578b\u89d2\u5ea6\u6765\u8868\u793a\u8fd9\u4e00\u70b9\u4f1a\u66f4\u6e05\u695a\uff1b\u5728\u65e0\u9650\u6570\u91cf\u7684\u566a\u58f0\u5c3a\u5ea6\u4e0b\uff0c\u56fe\u50cf\u5728\u8fde\u7eed\u65f6\u95f4\u5185\u7684\u6270\u52a8\u53ef\u4ee5\u8868\u793a\u4e3a\u968f\u673a\u8fc7\u7a0b\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDE\uff09\u6765\u63cf\u8ff0\u3002\u7136\u540e\u901a\u8fc7\u53cd\u8f6c SDE \u6765\u6267\u884c\u91c7\u6837\uff0c\u8fd9\u81ea\u7136\u9700\u8981\u4f30\u8ba1\u6bcf\u4e2a\u8fde\u7eed\u503c\u566a\u58f0\u7ea7\u522b\u7684\u5f97\u5206\u51fd \u3002 SDE \u7684\u4e0d\u540c\u53c2\u6570\u5316\u672c\u8d28\u4e0a\u63cf\u8ff0\u4e86\u968f\u65f6\u95f4\u53d8\u5316\u7684\u4e0d\u540c\u6270\u52a8\u65b9\u6848\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u566a\u58f0\u8fc7\u7a0b\u7684\u7075\u6d3b\u5efa\u6a21\u3002</p>"},{"location":"read/diffusion/#guidance","title":"Guidance","text":"<p>guidance \u7684\u76ee\u6807\u662f\u63a7\u5236\u751f\u6210\u7684\u6570\u636e\uff0c\u6dfb\u52a0\u4e00\u4e9b\u81ea\u5df1\u7684\u6761\u4ef6\uff0c\u6570\u5b66\u4e0a\u5c31\u662f \\(p(x|y)\\) \u8fd9\u6837\u7684\u6761\u4ef6\u6982\u7387\u3002</p> <p>\u6dfb\u52a0\u6761\u4ef6\u4fe1\u606f\u7684\u4e00\u79cd\u81ea\u7136\u65b9\u6cd5\u662f\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u4e0e\u65f6\u95f4\u6b65\u4fe1\u606f\u4e00\u8d77\u6dfb\u52a0\u3002\u5f62\u5f0f\u662f\uff1a</p> \\[ p(x_{0:T}|y) = p(x_T)\\prod_{t=1}^Tp_\\theta(x_{t-1}|x_t,y) \\] <p>\u8fd9\u91cc\u7684 y \u53ef\u4ee5\u662f\u56fe\u50cf-\u6587\u672c\u751f\u6210\u4e2d\u7684\u6587\u672c\u7f16\u7801\uff0cor a low-resolution image in super-resolution tasks.\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9884\u6d4b\u4e09\u4e2a\u7b49\u4ef7\u5f62\u5f0f\u6765\u5b66\u4e60 VDM \u7684\u6838\u5fc3\u795e\u7ecf\u7f51\u7edc\u5bf9\u6bcf\u4e2a\u6240\u9700\u7684\u89e3\u91ca\u548c\u5b9e\u73b0\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u7684\u95ee\u9898\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8bad\u7ec3\u7684\u6761\u4ef6\u6269\u6563\u6a21\u578b\u53ef\u80fd\u4f1a\u5b66\u4f1a\u5ffd\u7565\u6216\u6de1\u5316\u4efb\u4f55\u7ed9\u5b9a\u7684\u6761\u4ef6\u4fe1\u606f\u3002\uff08\u8bad\u7ec3\u7684\u65f6\u5019\u5c31\u6709\u8fd9\u4e9b\u6761\u4ef6\uff09\u56e0\u6b64\uff0c\u63d0\u51fa\u4e86 Guidance \u4f5c\u4e3a\u4e00\u79cd\u66f4\u660e\u786e\u5730\u63a7\u5236\u6a21\u578b\u8d4b\u4e88\u8c03\u8282\u4fe1\u606f\u7684\u6743\u91cd\u7684\u65b9\u6cd5\uff0c\u4f46\u4ee5\u6837\u672c\u591a\u6837\u6027\u4e3a\u4ee3\u4ef7\u3002\u4e24\u79cd\u6700\u6d41\u884c\u7684\u6307\u5bfc\u5f62\u5f0f\u88ab\u79f0\u4e3a classifier guidance \u548c classier-free guidance\u3002</p>"},{"location":"read/diffusion/#classifier-guidance","title":"Classifier Guidance","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u5b66\u4e60\u5230 \\(\\nabla \\log p(x_t|y)\\) \u5728\u4efb\u610f\u7684\u566a\u58f0\u65f6\u95f4\u6b65\u4e2d</p> \\[ \\begin{aligned} \\nabla \\log p(x_t|y) = \\nabla \\log p(x_t) + \\nabla \\log p(y|x_t) \\end{aligned} \\] <p>\u8fd9\u662f\u7531\u8d1d\u53f6\u65af\u6cd5\u5219\u5f97\u5230\u7684\uff0c\u5176\u4e2d \\(\\nabla \\log p(y)\\) \u5728\u5bf9 \\(x_t\\) \u7684\u68af\u5ea6\u4e0b\u4e3a0\u3002\u4e0a\u9762\u7684\u4e24\u9879\u5206\u522b\u662f\u65e0\u6761\u4ef6\u7684\u5f97\u5206\u51fd\u6570\u4e0e\u5206\u7c7b\u5668 \\(p(y|x_t)\\) \u7684\u5bf9\u6297\u68af\u5ea6\u3002\u5728 Classifier Guidance \u4e2d\uff0c\u65e0\u6761\u4ef6\u6269\u6563\u6a21\u578b\u7684\u5206\u6570\u662f\u6309\u7167\u5148\u524d\u5bfc\u51fa\u7684\u65b9\u5f0f\u5b66\u4e60\u7684\uff0c\u540c\u65f6\u5206\u7c7b\u5668\u63a5\u53d7\u4efb\u610f\u566a\u58f0 xt \u5e76\u5c1d\u8bd5\u9884\u6d4b\u6761\u4ef6\u4fe1\u606f y\u3002\u7136\u540e\uff0c\u5728\u91c7\u6837\u8fc7\u7a0b\u4e2d\uff0c\u7528\u4e8e\u9000\u706b\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u7684\u603b\u4f53\u6761\u4ef6\u5f97\u5206\u51fd\u6570\u88ab\u8ba1\u7b97\u4e3a\u65e0\u6761\u4ef6\u5f97\u5206\u51fd\u6570\u4e0e\u566a\u58f0\u5206\u7c7b\u5668\u7684\u5bf9\u6297\u68af\u5ea6\u4e4b\u548c\u3002\u4e3a\u4e86\u63d0\u5347\u63a7\u5236\u7684\u7cbe\u7ec6\u5ea6\uff0c\u5f15\u5165\u4e86\u8d85\u53c2\u6570 \\(\\gamma\\)\uff0c\u7528\u4e8e\u63a7\u5236\u5206\u7c7b\u5668\u68af\u5ea6\u7684\u6743\u91cd\u3002</p> \\[ \\begin{aligned} \\nabla \\log p(x_t|y) = \\nabla \\log p(x_t) + \\gamma\\nabla \\log p(y|x_t) \\end{aligned} \\] <p>\u76f4\u89c2\u4e0a\uff0c\u5f53 $ \\gamma= 0$ \u65f6\uff0c\u6761\u4ef6\u6269\u6563\u6a21\u578b\u5b66\u4f1a\u5b8c\u5168\u5ffd\u7565\u6761\u4ef6\u4fe1\u606f\uff0c\u800c\u5f53 \\(\\gamma\\) \u8f83\u5927\u65f6\uff0c\u6761\u4ef6\u6269\u6563\u6a21\u578b\u5b66\u4f1a\u751f\u6210\u4e25\u91cd\u9075\u5faa\u6761\u4ef6\u4fe1\u606f\u7684\u6837\u672c\u3002\u8fd9\u4f1a\u5bfc\u81f4\u6837\u672c\u591a\u6837\u6027\u4e0b\u964d\uff0c\u56e0\u4e3a\u5b83\u53ea\u4f1a\u4ea7\u751f\u6613\u4e8e\u91cd\u65b0\u751f\u6210\u6240\u63d0\u4f9b\u7684\u6761\u4ef6\u4fe1\u606f\u7684\u6570\u636e\u3002</p> <p>classifier guidance \u7684\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u7f3a\u70b9\u662f\u5b83\u4f9d\u8d56\u4e8e\u5355\u72ec\u5b66\u4e60\u7684\u5206\u7c7b\u5668\u3002\u7531\u4e8e\u5206\u7c7b\u5668\u5fc5\u987b\u5904\u7406\u4efb\u610f\u566a\u58f0\u8f93\u5165\uff0c\u800c\u5927\u591a\u6570\u73b0\u6709\u7684\u9884\u8bad\u7ec3\u5206\u7c7b\u6a21\u578b\u5e76\u672a\u5bf9\u6b64\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u6b64\u5fc5\u987b\u4e0e\u6269\u6563\u6a21\u578b\u4e00\u8d77\u8fdb\u884c\u4e34\u65f6\u5b66\u4e60\u3002</p>"},{"location":"read/diffusion/#classifier-free-guidance","title":"Classifier-Free Guidance","text":"<p>\u5728\u8fd9\u91cc\uff0c\u5b66\u8005\u653e\u5f03\u4e86\u5355\u72ec\u5206\u7c7b\u5668\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u8f6c\u800c\u91c7\u7528\u65e0\u6761\u4ef6\u6269\u6563\u6a21\u578b\u548c\u6761\u4ef6\u6269\u6563\u6a21\u578b\u3002\u9996\u5148</p> \\[ \\nabla \\log p(y|x_t) = \\nabla \\log p(x_t|y) - \\nabla \\log p(x_t) \\] <p>\u7136\u540e\u5728\u5148\u524d\u8d85\u53c2\u7ea6\u675f\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u5f97\u5230</p> \\[ \\nabla \\log p(x_t|y) = \\gamma \\nabla \\log p(x_t|y) + (1-\\gamma)\\nabla \\log p(x_t) \\] <p>\u8fd9\u91cc\u7684 \\(\\gamma\\) \u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u7528\u4e8e\u63a7\u5236\u6761\u4ef6\u4fe1\u606f\u7684\u6743\u91cd\uff0c\u901a\u4fd7\u5730\u8bf4\u5c31\u662f\u5bf9\u6761\u4ef6\u4fe1\u606f\u6709\u591a\u4f9d\u8d56\u3002</p> <p>\u5f53 \\(\\gamma = 0\\) \u65f6\uff0c\u5b66\u4e60\u5230\u7684\u6761\u4ef6\u6a21\u578b\u5b8c\u5168\u5ffd\u7565\u6761\u4ef6\u5e76\u5b66\u4e60\u65e0\u6761\u4ef6\u6269\u6563\u6a21\u578b\u3002 \u5f53 \\(\\gamma = 1\\) \u65f6\uff0c\u6a21\u578b\u65e0\u9700\u6307\u5bfc\u5373\u53ef\u663e\u5f0f\u5b66\u4e60\u666e\u901a\u6761\u4ef6\u5206\u5e03\u3002 \u5f53 \\(\\gamma &gt; 1\\) \u65f6\uff0c\u6269\u6563\u6a21\u578b\u4e0d\u4ec5\u4f18\u5148\u8003\u8651\u6761\u4ef6\u5f97\u5206\u51fd\u6570\uff0c\u800c\u4e14\u4f1a\u5411\u8fdc\u79bb\u65e0\u6761\u4ef6\u5f97\u5206\u51fd\u6570\u7684\u65b9\u5411\u79fb\u52a8\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u964d\u4f4e\u4e86\u751f\u6210\u4e0d\u4f7f\u7528\u6761\u4ef6\u4fe1\u606f\u7684\u6837\u672c\u7684\u6982\u7387\uff0c\u6709\u5229\u4e8e\u660e\u786e\u4f7f\u7528\u6761\u4ef6\u4fe1\u606f\u7684\u6837\u672c\u3002\u8fd9\u4e5f\u4f1a\u964d\u4f4e\u6837\u672c\u591a\u6837\u6027\uff0c\u4f46\u4ee3\u4ef7\u662f\u751f\u6210\u51c6\u786e\u5339\u914d\u8c03\u8282\u4fe1\u606f\u7684\u6837\u672c.</p> <p>\u7531\u4e8e\u5b66\u4e60\u4e24\u4e2a\u5355\u72ec\u7684\u6269\u6563\u6a21\u578b\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u6761\u4ef6\u6269\u6563\u6a21\u578b\u548c\u65e0\u6761\u4ef6\u6269\u6563\u6a21\u578b\u4e00\u8d77\u5b66\u4e60\u4e3a\u5355\u4e2a\u6761\u4ef6\u6a21\u578b\uff1b\u53ef\u4ee5\u901a\u8fc7\u7528\u56fa\u5b9a\u5e38\u6570\u503c\uff08\u4f8b\u5982\u96f6\uff09\u66ff\u6362\u6761\u4ef6\u4fe1\u606f\u6765\u67e5\u8be2\u65e0\u6761\u4ef6\u6269\u6563\u6a21\u578b\u3002\u8fd9\u672c\u8d28\u4e0a\u662f\u5bf9\u6761\u4ef6\u4fe1\u606f\u6267\u884c\u968f\u673a\u4e22\u5931\u3002\u65e0\u5206\u7c7b\u5668\u6307\u5bfc\u5f88\u4f18\u96c5\uff0c\u56e0\u4e3a\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u63a7\u5236\u6761\u4ef6\u751f\u6210\u8fc7\u7a0b\uff0c\u540c\u65f6\u9664\u4e86\u8bad\u7ec3\u5947\u5f02\u6269\u6563\u6a21\u578b\u4e4b\u5916\u4e0d\u9700\u8981\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u3002</p>"},{"location":"read/diffusion/#summary","title":"Summary","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u63a8\u5bfc\u53d8\u5206\u6269\u6563\u6a21\u578b\u4f5c\u4e3a\u9a6c\u5c14\u53ef\u592b\u5206\u5c42\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668\u7684\u7279\u4f8b\uff0c\u5176\u4e2d\u4e09\u4e2a\u5173\u952e\u5047\u8bbe\u4f7f\u5f97 ELBO \u80fd\u591f\u8fdb\u884c\u6613\u4e8e\u5904\u7406\u7684\u8ba1\u7b97\u548c\u53ef\u6269\u5c55\u7684\u4f18\u5316\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u4f18\u5316 VDM \u5f52\u7ed3\u4e3a\u5b66\u4e60\u795e\u7ecf\u7f51\u7edc\u6765\u9884\u6d4b\u4e09\u4e2a\u6f5c\u5728\u76ee\u6807\u4e4b\u4e00\uff1a\u6765\u81ea\u4efb\u610f\u566a\u58f0\u7684\u539f\u59cb\u6e90\u56fe\u50cf\u3001\u6765\u81ea\u4efb\u610f\u4efb\u610f\u566a\u58f0\u56fe\u50cf\u7684\u539f\u59cb\u6e90\u566a\u58f0\uff0c\u6216\u8005\u566a\u58f0\u566a\u58f0\u7684\u5f97\u5206\u51fd\u6570\u4efb\u610f\u566a\u58f0\u6c34\u5e73\u4e0b\u7684\u56fe\u50cf\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u66f4\u6df1\u5165\u5730\u63a2\u8ba8\u5b66\u4e60\u5f97\u5206\u51fd\u6570\u7684\u542b\u4e49\uff0c\u5e76\u5c06\u5176\u4e0e\u57fa\u4e8e\u5f97\u5206\u7684\u751f\u6210\u5efa\u6a21\u7684\u89d2\u5ea6\u660e\u786e\u8054\u7cfb\u8d77\u6765\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u6269\u6563\u6a21\u578b\u5b66\u4e60\u6761\u4ef6\u5206\u5e03\u3002</p> <p>\u5f53\u7136\uff0cdiffusion \u6a21\u578b\u4ecd\u7136\u6709\u4e00\u4e9b\u7f3a\u9677\uff1a</p> <ul> <li>\u9996\u5148\u5f80\u4fe1\u606f\u4e2d\u52a0\u566a\u58f0\u4e0d\u592a\u53ef\u80fd\u662f\u4eba\u7c7b\u81ea\u7136\u5730\u5efa\u6a21\u548c\u751f\u6210\u6570\u636e\u7684\u65b9\u5f0f</li> <li>VDM \u4e0d\u4ea7\u751f\u53ef\u89e3\u91ca\u7684\u6f5c\u5728\u53d8\u91cf\u3002 VAE \u5e0c\u671b\u901a\u8fc7\u7f16\u7801\u5668\u7684\u4f18\u5316\u6765\u5b66\u4e60\u7ed3\u6784\u5316\u7684\u6f5c\u5728\u7a7a\u95f4\uff0c\u800c\u5728 VDM \u4e2d\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u7f16\u7801\u5668\u5df2\u7ecf\u4f5c\u4e3a\u7ebf\u6027\u9ad8\u65af\u6a21\u578b\u7ed9\u51fa\uff0c\u65e0\u6cd5\u7075\u6d3b\u4f18\u5316\u3002\u56e0\u6b64\uff0c\u4e2d\u95f4\u6f5c\u5728\u53d8\u91cf\u88ab\u9650\u5236\u4e3a\u539f\u59cb\u8f93\u5165\u7684\u566a\u58f0\u7248\u672c\u3002</li> <li>\u6f5c\u5728\u7684\u7ef4\u5ea6\u88ab\u9650\u5236\u4e3a\u4e0e\u539f\u59cb\u8f93\u5165\u76f8\u540c\u7684\u7ef4\u5ea6\uff0c\u8fd9\u8fdb\u4e00\u6b65\u963b\u788d\u4e86\u5b66\u4e60\u6709\u610f\u4e49\u7684\u3001\u538b\u7f29\u7684\u6f5c\u5728\u7ed3\u6784\u7684\u52aa\u529b\u3002</li> <li>\u91c7\u6837\u662f\u4e00\u4e2a\u6602\u8d35\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u5fc5\u987b\u5728\u4e24\u79cd\u516c\u5f0f\u4e0b\u8fd0\u884c\u591a\u4e2a\u53bb\u566a\u6b65\u9aa4\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u9650\u5236\u4e4b\u4e00\u662f\u9009\u62e9\u8db3\u591f\u591a\u7684\u65f6\u95f4\u6b65 T\uff0c\u4ee5\u786e\u4fdd\u6700\u7ec8\u7684\u6f5c\u4f0f\u5b8c\u5168\u662f\u9ad8\u65af\u566a\u58f0\uff1b\u5728\u91c7\u6837\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u8fed\u4ee3\u6240\u6709\u8fd9\u4e9b\u65f6\u95f4\u6b65\u6765\u751f\u6210\u6837\u672c\u3002</li> </ul>"}]}